{"version":3,"file":"node_modules_raw-loader_dist_cjs_js_libs_remix-ws-templates_src_templates_rln_circuits_rln_circom.0.52.0-dev.1720620484381.js","mappings":";;;;;;;;;;AAAA,iEAAe,qBAAqB,+BAA+B,iDAAiD,yCAAyC,0DAA0D,oCAAoC,6BAA6B,uCAAuC,4CAA4C,8CAA8C,qCAAqC,wCAAwC,yBAAyB,8BAA8B,oEAAoE,oFAAoF,2HAA2H,8FAA8F,iHAAiH,oCAAoC,sEAAsE,GAAG,qBAAqB,gCAAgC,cAAc,CAAC","sources":["webpack:///../../libs/remix-ws-templates/src/templates/rln/circuits/rln.circom"],"sourcesContent":["export default \"pragma circom 2.1.0;\\n\\ninclude \\\"./utils.circom\\\";\\ninclude \\\"circomlib/circuits/poseidon.circom\\\";\\n\\ntemplate RLN(DEPTH, LIMIT_BIT_SIZE) {\\n    // Private signals\\n    signal input identitySecret;\\n    signal input userMessageLimit;\\n    signal input messageId;\\n    signal input pathElements[DEPTH];\\n    signal input identityPathIndex[DEPTH];\\n\\n    // Public signals\\n    signal input x;\\n    signal input externalNullifier;\\n\\n    // Outputs\\n    signal output y;\\n    signal output root;\\n    signal output nullifier;\\n\\n    signal identityCommitment <== Poseidon(1)([identitySecret]);\\n    signal rateCommitment <== Poseidon(2)([identityCommitment, userMessageLimit]);\\n\\n    // Membership check\\n    root <== MerkleTreeInclusionProof(DEPTH)(rateCommitment, identityPathIndex, pathElements);\\n\\n    // messageId range check\\n    RangeCheck(LIMIT_BIT_SIZE)(messageId, userMessageLimit);\\n\\n    // SSS share calculations\\n    signal a1 <== Poseidon(3)([identitySecret, externalNullifier, messageId]);\\n    y <== identitySecret + a1 * x;\\n\\n    // nullifier calculation\\n    nullifier <== Poseidon(1)([a1]);\\n}\\n\\ncomponent main { public [x, externalNullifier] } = RLN(20, 16);\";"],"names":[],"sourceRoot":""}