{"version":3,"file":"src_blockchain_providers_worker-vm_ts-libs_remix-lib_src_util_ts.0.52.0-dev.1720620484381.js","mappings":"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;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WCrCA;;;;;WCAA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack:///./src/blockchain/providers/worker-vm.ts","webpack:///../../libs/remix-lib/src/eventManager.ts","webpack:///../../libs/remix-lib/src/execution/eventsDecoder.ts","webpack:///../../libs/remix-lib/src/execution/forkAt.ts","webpack:///../../libs/remix-lib/src/execution/logsManager.ts","webpack:///../../libs/remix-lib/src/execution/txExecution.ts","webpack:///../../libs/remix-lib/src/execution/txFormat.ts","webpack:///../../libs/remix-lib/src/execution/txHelper.ts","webpack:///../../libs/remix-lib/src/execution/txListener.ts","webpack:///../../libs/remix-lib/src/execution/txRunner.ts","webpack:///../../libs/remix-lib/src/execution/txRunnerVM.ts","webpack:///../../libs/remix-lib/src/execution/txRunnerWeb3.ts","webpack:///../../libs/remix-lib/src/execution/typeConversion.ts","webpack:///../../libs/remix-lib/src/hash.ts","webpack:///../../libs/remix-lib/src/helpers/compilerHelper.ts","webpack:///../../libs/remix-lib/src/helpers/hhconsoleSigs.ts","webpack:///../../libs/remix-lib/src/helpers/txResultHelper.ts","webpack:///../../libs/remix-lib/src/helpers/uiHelper.ts","webpack:///../../libs/remix-lib/src/index.ts","webpack:///../../libs/remix-lib/src/query-params.ts","webpack:///../../libs/remix-lib/src/registry.ts","webpack:///../../libs/remix-lib/src/storage.ts","webpack:///../../libs/remix-lib/src/util.ts","webpack:///ignored|/workspaces/remix-project/node_modules/@ethereumjs/trie/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/@ethereumjs/trie/node_modules/readable-stream/lib|util","webpack:///ignored|/workspaces/remix-project/node_modules/@ethersproject/bignumber/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/asn1.js/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/brorand|crypto","webpack:///ignored|/workspaces/remix-project/node_modules/browserify-sign/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/browserify-sign/node_modules/readable-stream/lib|util","webpack:///ignored|/workspaces/remix-project/node_modules/create-ecdh/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/diffie-hellman/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/hash-base/node_modules/readable-stream/lib|util","webpack:///ignored|/workspaces/remix-project/node_modules/keccak/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/keccak/node_modules/readable-stream/lib|util","webpack:///ignored|/workspaces/remix-project/node_modules/miller-rabin/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/public-encrypt/node_modules/bn.js/lib|buffer","webpack:///webpack/bootstrap","webpack:///webpack/runtime/amd options","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/create fake namespace object","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/get mini-css chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/importScripts chunk loading","webpack:///webpack/runtime/startup chunk dependencies","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["import { Provider } from '@remix-project/remix-simulator'\n\nlet provider: Provider = null\nself.onmessage = (e: MessageEvent) => {\n  const data = e.data\n  switch (data.cmd) {\n  case 'init':\n  {\n    provider = new Provider({ fork: data.fork, nodeUrl: data.nodeUrl, blockNumber: data.blockNumber, stateDb: data.stateDb, blocks: data.blocks })\n    provider.init().then(() => {\n      self.postMessage({\n        cmd: 'initiateResult',\n        stamp: data.stamp\n      })\n    }).catch((error) => {\n      self.postMessage({\n        cmd: 'initiateResult',\n        error,\n        stamp: data.stamp\n      })\n    })\n    break\n  }\n  case 'sendAsync':\n  {\n    if (provider) {\n      provider.sendAsync(data.query, (error, result) => {\n        self.postMessage({\n          cmd: 'sendAsyncResult',\n          error,\n          result,\n          stamp: data.stamp\n        })\n      })\n    } else {\n      self.postMessage({\n        cmd: 'sendAsyncResult',\n        error: 'Provider not instantiated',\n        result: null,\n        stamp: data.stamp\n      })\n    }\n\n    break\n  }\n  case 'addAccount':\n  {\n    if (provider) {\n      provider.Accounts._addAccount(data.privateKey, data.balance)\n    }\n\n    break\n  }\n  case 'newAccount':\n  {\n    if (provider) {\n      provider.Accounts.newAccount((error, address: string) => {\n        if (error) {\n          self.postMessage({\n            cmd: 'newAccountResult',\n            error,\n            stamp: data.stamp\n          })\n        } else {\n          self.postMessage({\n            cmd: 'newAccountResult',\n            result: address,\n            stamp: data.stamp\n          })\n        }\n      })\n    }\n\n    break\n  }\n  }\n}\n","'use strict'\n\nexport class EventManager {\n  registered\n  anonymous\n\n  constructor () {\n    this.registered = {}\n    this.anonymous = {}\n  }\n\n  /*\n    * Unregister a listener.\n    * Note that if obj is a function. the unregistration will be applied to the dummy obj {}.\n    *\n    * @param {String} eventName  - the event name\n    * @param {Object or Func} obj - object that will listen on this event\n    * @param {Func} func         - function of the listeners that will be executed\n  */\n  unregister (eventName, obj, func) {\n    if (!this.registered[eventName]) {\n      return\n    }\n    if (obj instanceof Function) {\n      func = obj\n      obj = this.anonymous\n    }\n    for (const reg in this.registered[eventName]) {\n      if ((this.registered[eventName][reg].obj === obj) && (this.registered[eventName][reg].func.toString() === func.toString())) {\n        this.registered[eventName].splice(reg, 1)\n      }\n    }\n  }\n\n  /*\n    * Register a new listener.\n    * Note that if obj is a function, the function registration will be associated with the dummy object {}\n    *\n    * @param {String} eventName  - the event name\n    * @param {Object or Func} obj - object that will listen on this event\n    * @param {Func} func         - function of the listeners that will be executed\n  */\n  register (eventName, obj, func?) {\n    if (!this.registered[eventName]) {\n      this.registered[eventName] = []\n    }\n    if (obj instanceof Function) {\n      func = obj\n      obj = this.anonymous\n    }\n    this.registered[eventName].push({ obj, func })\n  }\n\n  /*\n    * trigger event.\n    * Every listener have their associated function executed\n    *\n    * @param {String} eventName  - the event name\n    * @param {Array}j - argument that will be passed to the executed function.\n  */\n  trigger (eventName, args) {\n    if (!this.registered[eventName]) {\n      return\n    }\n    for (const listener in this.registered[eventName]) {\n      const l = this.registered[eventName][listener]\n      if (l.func) l.func.apply(l.obj === this.anonymous ? {} : l.obj, args)\n    }\n  }\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { visitContracts } from './txHelper'\n\n/**\n  * Register to txListener and extract events\n  *\n  */\nexport class EventsDecoder {\n  resolveReceipt\n\n  constructor ({ resolveReceipt }) {\n    this.resolveReceipt = resolveReceipt\n  }\n\n  /**\n  * use Transaction Receipt to decode logs. assume that the transaction as already been resolved by txListener.\n  * logs are decoded only if the contract if known by remix.\n  *\n  * @param {Object} tx - transaction object\n  * @param {Function} cb - callback\n  */\n  parseLogs (tx, contractName, compiledContracts, cb) {\n    if (tx.isCall) return cb(null, { decoded: [], raw: []})\n    this.resolveReceipt(tx, (error, receipt) => {\n      if (error) return cb(error)\n      this._decodeLogs(tx, receipt, contractName, compiledContracts, cb)\n    })\n  }\n\n  _decodeLogs (tx, receipt, contract, contracts, cb) {\n    if (!contract || !receipt) {\n      return cb('cannot decode logs - contract or receipt not resolved ')\n    }\n    if (!receipt.logs) {\n      return cb(null, { decoded: [], raw: []})\n    }\n    this._decodeEvents(tx, receipt.logs, contract, contracts, cb)\n  }\n\n  _eventABI (contract): Record<string, { event, inputs, object, abi }> {\n    const eventABI: Record<string, { event, inputs, object, abi }> = {}\n    const abi = new ethers.utils.Interface(contract.abi)\n    for (const e in abi.events) {\n      const event = abi.getEvent(e)\n      eventABI[abi.getEventTopic(e).replace('0x', '')] = { event: event.name, inputs: event.inputs, object: event, abi: abi }\n    }\n    return eventABI\n  }\n\n  _eventsABI (compiledContracts): Record<string, unknown> {\n    const eventsABI: Record<string, unknown> = {}\n    visitContracts(compiledContracts, (contract) => {\n      eventsABI[contract.name] = this._eventABI(contract.object)\n    })\n    return eventsABI\n  }\n\n  _event (hash, eventsABI) {\n    // get all the events responding to that hash.\n    const contracts = []\n    for (const k in eventsABI) {\n      if (eventsABI[k][hash]) {\n        const event = eventsABI[k][hash]\n        for (const input of event.inputs) {\n          if (input.type === 'function') {\n            input.type = 'bytes24'\n            input.baseType = 'bytes24'\n          }\n        }\n        contracts.push(event)\n      }\n    }\n    return contracts\n  }\n\n  _stringifyBigNumber (value): string {\n    return value._isBigNumber ? value.toString() : value\n  }\n\n  _stringifyEvent (value) {\n    if (value === null || value === undefined) return ' - '\n    if (value._ethersType) value.type = value._ethersType\n    if (Array.isArray(value)) {\n      // for struct && array\n      return value.map((item) => { return this._stringifyEvent(item) })\n    } else {\n      return this._stringifyBigNumber(value)\n    }\n  }\n\n  _decodeEvents (tx, logs, contractName, compiledContracts, cb) {\n    const eventsABI = this._eventsABI(compiledContracts)\n    const events = []\n    for (const i in logs) {\n      // [address, topics, mem]\n      const log = logs[i]\n      const topicId = log.topics[0]\n      const eventAbis = this._event(topicId.replace('0x', ''), eventsABI)\n      for (const eventAbi of eventAbis) {\n        try {\n          if (eventAbi) {\n            const decodedlog = eventAbi.abi.parseLog(log)\n            const decoded = {}\n            for (const v in decodedlog.args) {\n              decoded[v] = this._stringifyEvent(decodedlog.args[v])\n            }\n            events.push({ from: log.address, topic: topicId, event: eventAbi.event, args: decoded })\n          } else {\n            events.push({ from: log.address, data: log.data, topics: log.topics })\n          }\n          break // if one of the iteration is successful\n        } catch (e) {\n          continue\n        }\n      }\n    }\n    cb(null, { decoded: events, raw: logs })\n  }\n}\n","'use strict'\n\n/**\n  * returns the fork name for the @argument networkId and @argument blockNumber\n  *\n  * @param {Object} networkId - network Id (1 for VM, 3 for Ropsten, 4 for Rinkeby, 5 for Goerli)\n  * @param {Object} blockNumber - block number\n  * @return {String} - fork name (Berlin, Istanbul, ...)\n  */\nexport function forkAt (networkId, blockNumber) {\n  if (forks[networkId]) {\n    let currentForkName = forks[networkId][0].name\n    for (const fork of forks[networkId]) {\n      if (blockNumber >= fork.number) {\n        currentForkName = fork.name\n      }\n    }\n    return currentForkName\n  }\n  return 'london'\n}\n\n// see https://github.com/ethereum/go-ethereum/blob/master/params/config.go\nconst forks = {\n  1: [\n    {\n      number: 4370000,\n      name: 'byzantium'\n    },\n    {\n      number: 7280000,\n      name: 'constantinople'\n    },\n    {\n      number: 7280000,\n      name: 'petersburg'\n    },\n    {\n      number: 9069000,\n      name: 'istanbul'\n    },\n    {\n      number: 9200000,\n      name: 'muirglacier'\n    },\n    {\n      number: 12244000,\n      name: 'berlin'\n    },\n    {\n      number: 12965000,\n      name: 'london'\n    },\n    {\n      number: 13773000,\n      name: 'arrowGlacier'\n    },\n    {\n      number: 15050000,\n      name: 'grayGlacier'\n    },\n    {\n      number: 15537394,\n      name: 'paris'\n    },\n    {\n      number: 17034870,\n      name: 'shanghai'\n    },\n    {\n      number: 19426587,\n      name: 'cancun'\n    }\n  ],\n  3: [\n    {\n      number: 1700000,\n      name: 'byzantium'\n    },\n    {\n      number: 4230000,\n      name: 'constantinople'\n    },\n    {\n      number: 4939394,\n      name: 'petersburg'\n    },\n    {\n      number: 6485846,\n      name: 'istanbul'\n    },\n    {\n      number: 7117117,\n      name: 'muirglacier'\n    },\n    {\n      number: 9812189,\n      name: 'berlin'\n    },\n    {\n      number: 10499401,\n      name: 'london'\n    }\n  ],\n  4: [\n    {\n      number: 1035301,\n      name: 'byzantium'\n    },\n    {\n      number: 3660663,\n      name: 'constantinople'\n    },\n    {\n      number: 4321234,\n      name: 'petersburg'\n    },\n    {\n      number: 5435345,\n      name: 'istanbul'\n    },\n    {\n      number: 8290928,\n      name: 'berlin'\n    },\n    {\n      number: 8897988,\n      name: 'london'\n    }\n  ],\n  5: [\n    {\n      number: 1561651,\n      name: 'istanbul'\n    },\n    {\n      number: 4460644,\n      name: 'berlin'\n    },\n    {\n      number: 5062605,\n      name: 'london'\n    }\n  ]\n}\n","import { eachOf } from 'async'\nimport { randomBytes } from 'crypto'\nimport { toChecksumAddress, bytesToHex } from '@ethereumjs/util'\n\nexport class LogsManager {\n  notificationCallbacks\n  subscriptions\n  filters\n  filterTracking\n  oldLogs\n\n  constructor () {\n    this.notificationCallbacks = []\n    this.subscriptions = {}\n    this.filters = {}\n    this.filterTracking = {}\n    this.oldLogs = []\n  }\n\n  checkBlock (blockNumber, block, web3) {\n    eachOf(block.transactions, (tx: any, i, next) => {\n      const txHash = bytesToHex(tx.hash())\n      web3.eth.getTransactionReceipt(txHash, (_error, receipt) => {\n        if (!receipt) return next()\n        for (const log of receipt.logs) {\n          this.oldLogs.push({ type: 'block', blockNumber, block, tx, log, txNumber: i, receipt })\n          const subscriptions = this.getSubscriptionsFor({ type: 'block', blockNumber, block, tx, log, receipt })\n          for (const subscriptionId of subscriptions) {\n            const result = {\n              logIndex: '0x1', // 1\n              blockNumber: blockNumber,\n              blockHash: bytesToHex(block.hash()),\n              transactionHash: bytesToHex(tx.hash()),\n              transactionIndex: '0x' + i.toString(16),\n              // TODO: if it's a contract deploy, it should be that address instead\n              address: log.address,\n              data: log.data,\n              topics: log.topics\n            }\n\n            if (result.address === '0x') {\n              delete result.address\n            }\n\n            const response = { jsonrpc: '2.0', method: 'eth_subscription', params: { result: result, subscription: subscriptionId } }\n            this.transmit(response)\n          }\n        }\n      })\n    }, (_err) => {\n    })\n  }\n\n  eventMatchesFilter (changeEvent, queryType, queryFilter) {\n    if (queryFilter.topics.filter((logTopic) => changeEvent.log.topics.indexOf(logTopic) >= 0).length === 0) return false\n\n    if (queryType === 'logs') {\n      const fromBlock = parseInt(queryFilter.fromBlock || '0x0')\n      let toBlock\n      if (queryFilter.toBlock === 'latest' || !queryFilter.toBlock) toBlock = Number.MAX_VALUE\n      else toBlock = parseInt(queryFilter.toBlock)\n      const targetAddress = toChecksumAddress(queryFilter.address)\n      if ((toBlock >= parseInt(changeEvent.blockNumber)) && (fromBlock <= parseInt(changeEvent.blockNumber))) {\n        if (changeEvent.log && changeEvent.log.address === targetAddress) {\n          return true\n        }\n      }\n      return false\n    }\n    return false\n  }\n\n  getSubscriptionsFor (changeEvent) {\n    const matchedSubscriptions = []\n    for (const subscriptionId of Object.keys(this.subscriptions)) {\n      const subscriptionParams = this.subscriptions[subscriptionId]\n      const [queryType, queryFilter] = subscriptionParams\n\n      if (this.eventMatchesFilter(changeEvent, queryType, queryFilter || { topics: []})) {\n        matchedSubscriptions.push(subscriptionId)\n      }\n    }\n    return matchedSubscriptions\n  }\n\n  getLogsForSubscription (subscriptionId) {\n    const subscriptionParams = this.subscriptions[subscriptionId]\n    const [_queryType, queryFilter] = subscriptionParams // eslint-disable-line\n\n    return this.getLogsFor(queryFilter)\n  }\n\n  transmit (result) {\n    this.notificationCallbacks.forEach((callback) => {\n      if (result.params.result.raw) {\n        result.params.result.data = result.params.result.raw.data\n        result.params.result.topics = result.params.result.raw.topics\n      }\n      callback(result)\n    })\n  }\n\n  addListener (_type, cb) {\n    this.notificationCallbacks.push(cb)\n  }\n\n  subscribe (params) {\n    const subscriptionId = '0x' + randomBytes(16).toString('hex')\n    this.subscriptions[subscriptionId] = params\n    return subscriptionId\n  }\n\n  unsubscribe (subscriptionId) {\n    delete this.subscriptions[subscriptionId]\n  }\n\n  newFilter (filterType, params) {\n    const filterId = '0x' + randomBytes(16).toString('hex')\n    if (filterType === 'block' || filterType === 'pendingTransactions') {\n      this.filters[filterId] = { filterType }\n    }\n    if (filterType === 'filter') {\n      this.filters[filterId] = { filterType, params }\n    }\n    this.filterTracking[filterId] = {}\n    return filterId\n  }\n\n  uninstallFilter (filterId) {\n    delete this.filters[filterId]\n  }\n\n  getLogsForFilter (filterId, logsOnly) {\n    const { filterType, params } = this.filters[filterId]\n    const tracking = this.filterTracking[filterId]\n\n    if (logsOnly || filterType === 'filter') {\n      return this.getLogsFor(params || { topics: []})\n    }\n    if (filterType === 'block') {\n      const blocks = this.oldLogs.filter(x => x.type === 'block').filter(x => tracking.block === undefined || x.blockNumber >= tracking.block)\n      tracking.block = blocks[blocks.length - 1]\n      return blocks.map(block => bytesToHex(block.hash()))\n    }\n    if (filterType === 'pendingTransactions') {\n      return []\n    }\n  }\n\n  getLogsByTxHash (hash) {\n    return this.oldLogs.filter((log) => bytesToHex(log.tx.hash()) === hash)\n      .map((log) => {\n        return {\n          logIndex: '0x1', // 1\n          blockNumber: log.blockNumber,\n          blockHash: bytesToHex(log.block.hash()),\n          transactionHash: bytesToHex(log.tx.hash()),\n          transactionIndex: '0x' + log.txNumber.toString(16),\n          // TODO: if it's a contract deploy, it should be that address instead\n          address: log.log.address,\n          data: log.log.data,\n          topics: log.log.topics\n        }\n      })\n  }\n\n  getLogsFor (params) {\n    const results = []\n    for (const log of this.oldLogs) {\n      if (this.eventMatchesFilter(log, 'logs', params)) {\n        results.push({\n          logIndex: '0x1', // 1\n          blockNumber: log.blockNumber,\n          blockHash: bytesToHex(log.block.hash()),\n          transactionHash: bytesToHex(log.tx.hash()),\n          transactionIndex: '0x' + log.txNumber.toString(16),\n          // TODO: if it's a contract deploy, it should be that address instead\n          address: log.log.address,\n          data: log.log.data,\n          topics: log.log.topics\n        })\n      }\n    }\n\n    return results\n  }\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { getFunctionFragment } from './txHelper'\n\n/**\n  * deploy the given contract\n  *\n  * @param {String} from    - sender address\n  * @param {String} data    - data to send with the transaction ( return of txFormat.buildData(...) ).\n  * @param {String} value    - decimal representation of value.\n  * @param {String} gasLimit    - decimal representation of gas limit.\n  * @param {Object} txRunner    - TxRunner.js instance\n  * @param {Object} callbacks    - { confirmationCb, gasEstimationForceSend, promptCb }\n  *     [validate transaction] confirmationCb (network, tx, gasEstimation, continueTxExecution, cancelCb)\n  *     [transaction failed, force send] gasEstimationForceSend (error, continueTxExecution, cancelCb)\n  *     [personal mode enabled, need password to continue] promptCb (okCb, cancelCb)\n  * @param {Function} finalCallback    - last callback.\n  */\nexport function createContract (from, data, value, gasLimit, txRunner, callbacks, finalCallback) {\n  if (!callbacks.confirmationCb || !callbacks.gasEstimationForceSend || !callbacks.promptCb) {\n    return finalCallback('all the callbacks must have been defined')\n  }\n  const tx = { from: from, to: null, data: data, useCall: false, value: value, gasLimit: gasLimit }\n  txRunner.rawRun(tx, callbacks.confirmationCb, callbacks.gasEstimationForceSend, callbacks.promptCb, (error, txResult) => {\n    // see universaldapp.js line 660 => 700 to check possible values of txResult (error case)\n    finalCallback(error, txResult)\n  })\n}\n\n/**\n  * call the current given contract ! that will create a transaction !\n  *\n  * @param {String} from    - sender address\n  * @param {String} to    - recipient address\n  * @param {String} data    - data to send with the transaction ( return of txFormat.buildData(...) ).\n  * @param {String} value    - decimal representation of value.\n  * @param {String} gasLimit    - decimal representation of gas limit.\n  * @param {Object} txRunner    - TxRunner.js instance\n  * @param {Object} callbacks    - { confirmationCb, gasEstimationForceSend, promptCb }\n  *     [validate transaction] confirmationCb (network, tx, gasEstimation, continueTxExecution, cancelCb)\n  *     [transaction failed, force send] gasEstimationForceSend (error, continueTxExecution, cancelCb)\n  *     [personal mode enabled, need password to continue] promptCb (okCb, cancelCb)\n  * @param {Function} finalCallback    - last callback.\n  */\nexport function callFunction (from, to, data, value, gasLimit, funAbi, txRunner, callbacks, finalCallback) {\n  const useCall = funAbi.stateMutability === 'view' || funAbi.stateMutability === 'pure' || funAbi.constant\n  const tx = { from, to, data, useCall, value, gasLimit }\n  txRunner.rawRun(tx, callbacks.confirmationCb, callbacks.gasEstimationForceSend, callbacks.promptCb, (error, txResult) => {\n    // see universaldapp.js line 660 => 700 to check possible values of txResult (error case)\n    finalCallback(error, txResult)\n  })\n}\n\n/**\n  * check if the vm has errored\n  *\n  * @param {Object} execResult    - execution result given by the VM, contain errorMessage and errorDate\n  * @param {Object} compiledContracts - Object containing contract compilation details\n  * @return {Object} -  { error: true/false, message: DOMNode }\n  */\nexport function checkError (execResult, compiledContracts) {\n  const errorCode = {\n    OUT_OF_GAS: 'out of gas',\n    STACK_UNDERFLOW: 'stack underflow',\n    STACK_OVERFLOW: 'stack overflow',\n    INVALID_JUMP: 'invalid JUMP',\n    INVALID_OPCODE: 'invalid opcode',\n    REVERT: 'revert',\n    STATIC_STATE_CHANGE: 'static state change',\n    INTERNAL_ERROR: 'internal error',\n    CREATE_COLLISION: 'create collision',\n    STOP: 'stop',\n    REFUND_EXHAUSTED: 'refund exhausted'\n  }\n  const ret = {\n    error: false,\n    message: ''\n  }\n  if (!execResult.errorMessage) {\n    return ret\n  }\n  const exceptionError = execResult.errorMessage || ''\n  const error = `Error occurred: ${execResult.errorMessage}.\\n`\n  let msg = ''\n  if (exceptionError.includes(errorCode.INVALID_OPCODE)) {\n    msg = '\\t\\n\\tThe execution might have thrown OR the EVM version used by the selected environment is not compatible with the compiler EVM version.\\n'\n    ret.error = true\n  } else if (exceptionError === errorCode.OUT_OF_GAS) {\n    msg = '\\tThe transaction ran out of gas. Please increase the Gas Limit.\\n'\n    ret.error = true\n  } else if (exceptionError === errorCode.REVERT || exceptionError === 'execution reverted') {\n    const returnData = execResult.errorData || '0x00000000'\n    const returnDataHex = returnData.slice(2, 10)\n    let customError\n    if (compiledContracts) {\n      let decodedCustomErrorInputsClean\n      for (const file of Object.keys(compiledContracts)) {\n        for (const contractName of Object.keys(compiledContracts[file])) {\n          const contract = compiledContracts[file][contractName]\n          for (const item of contract.abi) {\n            if (item.type === 'error') {\n              // ethers doesn't crash anymore if \"error\" type is specified, but it doesn't extract the errors. see:\n              // https://github.com/ethers-io/ethers.js/commit/bd05aed070ac9e1421a3e2bff2ceea150bedf9b7\n              // we need here to fake the type, so the \"getSighash\" function works properly\n              const fn = getFunctionFragment({ ...item, type: 'function', stateMutability: 'nonpayable' })\n              if (!fn) continue\n              const sign = fn.getSighash(item.name)\n              if (!sign) continue\n              if (returnDataHex === sign.replace('0x', '')) {\n                customError = item.name\n                const functionDesc = fn.getFunction(item.name)\n                // decoding error parameters\n                const decodedCustomErrorInputs = fn.decodeFunctionData(functionDesc, returnData)\n                decodedCustomErrorInputsClean = {}\n                let devdoc = {}\n                // \"contract\" represents the compilation result containing the NATSPEC documentation\n                if (contract && fn.functions && Object.keys(fn.functions).length) {\n                  const functionSignature = Object.keys(fn.functions)[0]\n                  // we check in the 'devdoc' if there's a developer documentation for this error\n                  try {\n                    devdoc = (contract.devdoc.errors && contract.devdoc.errors[functionSignature][0]) || {}\n                  } catch (e) {\n                    console.error(e.message)\n                  }\n                  // we check in the 'userdoc' if there's an user documentation for this error\n                  try {\n                    const userdoc = (contract.userdoc.errors && contract.userdoc.errors[functionSignature][0]) || {}\n                    if (userdoc && (userdoc as any).notice) customError += ' : ' + (userdoc as any).notice // we append the user doc if any\n                  } catch (e) {\n                    console.error(e.message)\n                  }\n                }\n                let inputIndex = 0\n                for (const input of functionDesc.inputs) {\n                  const inputKey = input.name || inputIndex\n                  const v = decodedCustomErrorInputs[inputKey]\n\n                  decodedCustomErrorInputsClean[inputKey] = {\n                    value: v.toString ? v.toString() : v\n                  }\n                  if (devdoc && (devdoc as any).params) {\n                    decodedCustomErrorInputsClean[input.name].documentation = (devdoc as any).params[inputKey] // we add the developer documentation for this input parameter if any\n                  }\n                  inputIndex++\n                }\n                break\n              }\n            }\n          }\n        }\n      }\n      if (decodedCustomErrorInputsClean) {\n        msg = '\\tThe transaction has been reverted to the initial state.\\nError provided by the contract:'\n        msg += `\\n${customError}`\n        msg += '\\nParameters:'\n        msg += `\\n${JSON.stringify(decodedCustomErrorInputsClean, null, ' ')}`\n      }\n    }\n    if (!customError) {\n      // It is the hash of Error(string)\n      if (returnData && (returnDataHex === '08c379a0')) {\n        const abiCoder = new ethers.utils.AbiCoder()\n        const reason = abiCoder.decode(['string'], '0x' + returnData.slice(10))[0]\n        msg = `\\tThe transaction has been reverted to the initial state.\\nReason provided by the contract: \"${reason}\".`\n      } else {\n        msg = '\\tThe transaction has been reverted to the initial state.\\nNote: The called function should be payable if you send value and the value you send should be less than your current balance.'\n      }\n    }\n    ret.error = true\n  } else if (exceptionError === errorCode.STATIC_STATE_CHANGE) {\n    msg = '\\tState changes is not allowed in Static Call context\\n'\n    ret.error = true\n  }\n  ret.message = `${error}\\n${exceptionError}\\n${msg}\\nYou may want to cautiously increase the gas limit if the transaction went out of gas.`\n  return ret\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { encodeParams as encodeParamsHelper, encodeFunctionId, makeFullTypeDefinition } from './txHelper'\nimport { eachOfSeries } from 'async'\nimport { linkBytecode as linkBytecodeSolc } from 'solc/linker'\nimport { isValidAddress, addHexPrefix } from '@ethereumjs/util'\nimport fromExponential from 'from-exponential';\n\n/**\n  * build the transaction data\n  *\n  * @param {Object} function abi\n  * @param {Object} values to encode\n  * @param {String} contractbyteCode\n  */\nexport function encodeData (funABI, values, contractbyteCode) {\n  let encoded\n  let encodedHex\n  try {\n    encoded = encodeParamsHelper(funABI, values)\n    encodedHex = encoded.toString('hex')\n  } catch (e) {\n    return { error: 'cannot encode arguments' }\n  }\n  if (contractbyteCode) {\n    return { data: '0x' + contractbyteCode + encodedHex.replace('0x', '') }\n  } else {\n    return { data: encodeFunctionId(funABI) + encodedHex.replace('0x', '') }\n  }\n}\n\n/**\n* encode function / constructor parameters\n*\n* @param {Object} params    - input parameter of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n*/\nexport function encodeParams (params, funAbi, callback?) {\n  return new Promise((resolve, reject) => {\n    let data: Buffer | string = ''\n    let dataHex = ''\n    let funArgs = []\n    if (Array.isArray(params)) {\n      funArgs = params\n      if (funArgs.length > 0) {\n        try {\n          data = encodeParamsHelper(funAbi, funArgs)\n          dataHex = data.toString()\n        } catch (e) {\n          reject('Error encoding arguments: ' + e)\n          return callback && callback('Error encoding arguments: ' + e)\n        }\n      }\n      if (data.slice(0, 9) === 'undefined') {\n        dataHex = data.slice(9)\n      }\n      if (data.slice(0, 2) === '0x') {\n        dataHex = data.slice(2)\n      }\n    } else if (params.indexOf('raw:0x') === 0) {\n      // in that case we consider that the input is already encoded and *does not* contain the method signature\n      dataHex = params.replace('raw:0x', '')\n      data = Buffer.from(dataHex, 'hex')\n    } else {\n      try {\n        funArgs = parseFunctionParams(params)\n      } catch (e) {\n        reject('Error encoding arguments: ' + e)\n        return callback && callback('Error encoding arguments: ' + e)\n      }\n      try {\n        if (funArgs.length > 0) {\n          data = encodeParamsHelper(funAbi, funArgs)\n          dataHex = data.toString()\n        }\n      } catch (e) {\n        reject('Error encoding arguments: ' + e)\n        return callback && callback('Error encoding arguments: ' + e)\n      }\n      if (data.slice(0, 9) === 'undefined') {\n        dataHex = data.slice(9)\n      }\n      if (data.slice(0, 2) === '0x') {\n        dataHex = data.slice(2)\n      }\n    }\n    const result = { data: data, dataHex: dataHex, funArgs: funArgs }\n    callback && callback(null, result)\n    resolve(result)\n  })\n}\n\n/**\n* encode function call (function id + encoded parameters)\n*\n* @param {Object} params    - input parameter of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n*/\nexport function encodeFunctionCall (params, funAbi, callback) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    callback(null, { dataHex: encodeFunctionId(funAbi) + encodedParam.dataHex, funAbi, funArgs: encodedParam.funArgs })\n  })\n}\n\n/**\n* encode constructor creation and link with provided libraries if needed\n*\n* @param {Object} contract    - input parameter of the function to call\n* @param {Object} params    - input parameter of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Object} linkLibraries    - contains {linkReferences} object which list all the addresses to be linked\n* @param {Object} linkReferences    - given by the compiler, contains the proper linkReferences\n* @param {Function} callback    - callback\n*/\nexport function encodeConstructorCallAndLinkLibraries (contract, params, funAbi, linkLibrariesAddresses, linkReferences, callback) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    linkLibraries(contract, linkLibrariesAddresses, linkReferences, (error, bytecodeToDeploy) => {\n      callback(error, { dataHex: bytecodeToDeploy + encodedParam.dataHex, funAbi, funArgs: encodedParam.funArgs, contractBytecode: contract.evm.bytecode.object })\n    })\n  })\n}\n\n/**\n* link with provided libraries if needed\n*\n* @param {Object} contract    - input parameter of the function to call\n* @param {Object} linkLibraries    - contains {linkReferences} object which list all the addresses to be linked\n* @param {Object} linkReferences    - given by the compiler, contains the proper linkReferences\n* @param {Function} callback    - callback\n*/\nexport function linkLibraries (contract, linkLibraries, linkReferences, callback) {\n  let bytecodeToDeploy = contract.evm.bytecode.object\n  if (bytecodeToDeploy.indexOf('_') >= 0) {\n    if (linkLibraries && linkReferences) {\n      for (const libFile in linkLibraries) {\n        for (const lib in linkLibraries[libFile]) {\n          const address = linkLibraries[libFile][lib]\n          if (!isValidAddress(address)) return callback(address + ' is not a valid address. Please check the provided address is valid.')\n          bytecodeToDeploy = linkLibraryStandardFromlinkReferences(lib, address.replace('0x', ''), bytecodeToDeploy, linkReferences)\n        }\n      }\n    }\n  }\n  if (bytecodeToDeploy.indexOf('_') >= 0) {\n    return callback('Failed to link some libraries')\n  }\n  return callback(null, bytecodeToDeploy)\n}\n\n/**\n* encode constructor creation and deploy libraries if needed\n*\n* @param {String} contractName    - current contract name\n* @param {Object} contract    - input parameter of the function to call\n* @param {Object} contracts    - map of all compiled contracts.\n* @param {Object} params    - input parameter of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n* @param {Function} callbackStep  - callbackStep\n* @param {Function} callbackDeployLibrary  - callbackDeployLibrary\n* @param {Function} callback    - callback\n*/\nexport function encodeConstructorCallAndDeployLibraries (contractName, contract, contracts, params, funAbi, callback, callbackStep, callbackDeployLibrary) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    let dataHex = ''\n    const contractBytecode = contract.evm.bytecode.object\n    let bytecodeToDeploy = contract.evm.bytecode.object\n    if (bytecodeToDeploy.indexOf('_') >= 0) {\n      linkBytecode(contract, contracts, (err, bytecode) => {\n        if (err) {\n          callback('Error deploying required libraries: ' + err)\n        } else {\n          bytecodeToDeploy = bytecode + dataHex\n          return callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs: encodedParam.funArgs, contractBytecode, contractName: contractName })\n        }\n      }, callbackStep, callbackDeployLibrary)\n      return\n    } else {\n      dataHex = bytecodeToDeploy + encodedParam.dataHex\n    }\n    callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs: encodedParam.funArgs, contractBytecode, contractName: contractName })\n  })\n}\n\n/**\n* (DEPRECATED) build the transaction data\n*\n* @param {String} contractName\n* @param {Object} contract    - abi definition of the current contract.\n* @param {Object} contracts    - map of all compiled contracts.\n* @param {Bool} isConstructor    - isConstructor.\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Object} params    - input parameter of the function to call\n* @param {Function} callback    - callback\n* @param {Function} callbackStep  - callbackStep\n* @param {Function} callbackDeployLibrary  - callbackDeployLibrary\n*/\nexport function buildData (contractName, contract, contracts, isConstructor, funAbi, params, callback, callbackStep, callbackDeployLibrary) {\n  let funArgs = []\n  let data: Buffer | string = ''\n  let dataHex = ''\n\n  if (params.indexOf('raw:0x') === 0) {\n    // in that case we consider that the input is already encoded and *does not* contain the method signature\n    dataHex = params.replace('raw:0x', '')\n    data = Buffer.from(dataHex, 'hex')\n  } else {\n    try {\n      if (params.length > 0) {\n        funArgs = parseFunctionParams(params)\n      }\n    } catch (e) {\n      return callback('Error encoding arguments: ' + e)\n    }\n    try {\n      data = encodeParamsHelper(funAbi, funArgs)\n      dataHex = data.toString()\n    } catch (e) {\n      return callback('Error encoding arguments: ' + e)\n    }\n    if (data.slice(0, 9) === 'undefined') {\n      dataHex = data.slice(9)\n    }\n    if (data.slice(0, 2) === '0x') {\n      dataHex = data.slice(2)\n    }\n  }\n  let contractBytecode\n  if (isConstructor) {\n    contractBytecode = contract.evm.bytecode.object\n    let bytecodeToDeploy = contract.evm.bytecode.object\n    if (bytecodeToDeploy.indexOf('_') >= 0) {\n      linkBytecode(contract, contracts, (err, bytecode) => {\n        if (err) {\n          callback('Error deploying required libraries: ' + err)\n        } else {\n          bytecodeToDeploy = bytecode + dataHex\n          return callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs, contractBytecode, contractName: contractName })\n        }\n      }, callbackStep, callbackDeployLibrary)\n      return\n    } else {\n      dataHex = bytecodeToDeploy + dataHex\n    }\n  } else {\n    dataHex = encodeFunctionId(funAbi) + dataHex\n  }\n  callback(null, { dataHex, funAbi, funArgs, contractBytecode, contractName: contractName })\n}\n\nexport function atAddress () {}\n\nexport function linkBytecodeStandard (contract, contracts, callback, callbackStep, callbackDeployLibrary) {\n  let contractBytecode = contract.evm.bytecode.object\n  eachOfSeries(contract.evm.bytecode.linkReferences, (libs, file, cbFile) => {\n    eachOfSeries(contract.evm.bytecode.linkReferences[file], (libRef, libName, cbLibDeployed) => {\n      const library = contracts[file][libName]\n      if (library) {\n        deployLibrary(file + ':' + libName, libName, library, contracts, (error, address) => {\n          if (error) {\n            return cbLibDeployed(error)\n          }\n          let hexAddress = address.toString('hex')\n          if (hexAddress.slice(0, 2) === '0x') {\n            hexAddress = hexAddress.slice(2)\n          }\n          contractBytecode = linkLibraryStandard(libName, hexAddress, contractBytecode, contract)\n          cbLibDeployed()\n        }, callbackStep, callbackDeployLibrary)\n      } else {\n        //@ts-ignore\n        cbLibDeployed('Cannot find compilation data of library ' + libName)\n      }\n    }, (error) => {\n      cbFile(error)\n    })\n  }, (error) => {\n    if (error) {\n      callbackStep(error)\n    }\n    callback(error, contractBytecode)\n  })\n}\n\nexport function linkBytecodeLegacy (contract, contracts, callback, callbackStep, callbackDeployLibrary) {\n  const libraryRefMatch = contract.evm.bytecode.object.match(/__([^_]{1,36})__/)\n  if (!libraryRefMatch) {\n    return callback('Invalid bytecode format.')\n  }\n  const libraryName = libraryRefMatch[1]\n  // file_name:library_name\n  const libRef = libraryName.match(/(.*):(.*)/)\n  if (!libRef) {\n    return callback('Cannot extract library reference ' + libraryName)\n  }\n  if (!contracts[libRef[1]] || !contracts[libRef[1]][libRef[2]]) {\n    return callback('Cannot find library reference ' + libraryName)\n  }\n  const libraryShortName = libRef[2]\n  const library = contracts[libRef[1]][libraryShortName]\n  if (!library) {\n    return callback('Library ' + libraryName + ' not found.')\n  }\n  deployLibrary(libraryName, libraryShortName, library, contracts, (err, address) => {\n    if (err) {\n      return callback(err)\n    }\n    let hexAddress = address.toString('hex')\n    if (hexAddress.slice(0, 2) === '0x') {\n      hexAddress = hexAddress.slice(2)\n    }\n    contract.evm.bytecode.object = linkLibrary(libraryName, hexAddress, contract.evm.bytecode.object)\n    linkBytecode(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  }, callbackStep, callbackDeployLibrary)\n}\n\nexport function linkBytecode (contract, contracts, callback?, callbackStep?, callbackDeployLibrary?) {\n  if (contract.evm.bytecode.object.indexOf('_') < 0) {\n    return callback(null, contract.evm.bytecode.object)\n  }\n  if (contract.evm.bytecode.linkReferences && Object.keys(contract.evm.bytecode.linkReferences).length) {\n    linkBytecodeStandard(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  } else {\n    linkBytecodeLegacy(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  }\n}\n\nexport function deployLibrary (libraryName, libraryShortName, library, contracts, callback, callbackStep, callbackDeployLibrary) {\n  const address = library.address\n  if (address) {\n    return callback(null, address)\n  }\n  const bytecode = library.evm.bytecode.object\n  if (bytecode.indexOf('_') >= 0) {\n    linkBytecode(library, contracts, (err, bytecode) => {\n      if (err) callback(err)\n      else {\n        library.evm.bytecode.object = bytecode\n        deployLibrary(libraryName, libraryShortName, library, contracts, callback, callbackStep, callbackDeployLibrary)\n      }\n    }, callbackStep, callbackDeployLibrary)\n  } else {\n    callbackStep(`creation of library ${libraryName} pending...`)\n    const data = { dataHex: bytecode, funAbi: { type: 'constructor' }, funArgs: [], contractBytecode: bytecode, contractName: libraryShortName, contractABI: library.abi }\n    callbackDeployLibrary({ data: data, useCall: false }, (err, txResult) => {\n      if (err) {\n        return callback(err)\n      }\n      const address = txResult.receipt.contractAddress\n      library.address = address\n      callback(err, address)\n    })\n  }\n}\n\nexport function linkLibraryStandardFromlinkReferences (libraryName, address, bytecode, linkReferences) {\n  for (const file in linkReferences) {\n    for (const libName in linkReferences[file]) {\n      if (libraryName === libName) {\n        bytecode = setLibraryAddress(address, bytecode, linkReferences[file][libName])\n      }\n    }\n  }\n  return bytecode\n}\n\nexport function linkLibraryStandard (libraryName, address, bytecode, contract) {\n  return linkLibraryStandardFromlinkReferences(libraryName, address, bytecode, contract.evm.bytecode.linkReferences)\n}\n\nexport function setLibraryAddress (address, bytecodeToLink, positions) {\n  if (positions) {\n    for (const pos of positions) {\n      const regpos = bytecodeToLink.match(new RegExp(`(.{${2 * pos.start}})(.{${2 * pos.length}})(.*)`))\n      if (regpos) {\n        bytecodeToLink = regpos[1] + address + regpos[3]\n      }\n    }\n  }\n  return bytecodeToLink\n}\n\nexport function linkLibrary (libraryName, address, bytecodeToLink) {\n  return linkBytecodeSolc(bytecodeToLink, { [libraryName]: addHexPrefix(address) })\n}\n\nexport function decodeResponse (response, fnabi) {\n  // Only decode if there supposed to be fields\n  if (fnabi.outputs && fnabi.outputs.length > 0) {\n    try {\n      let i\n      const outputTypes = []\n      for (i = 0; i < fnabi.outputs.length; i++) {\n        const type = fnabi.outputs[i].type\n        outputTypes.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(fnabi.outputs[i]) : type)\n      }\n      if (!response || !response.length) response = new Uint8Array(32 * fnabi.outputs.length) // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not enough data\n      // decode data\n      const abiCoder = new ethers.utils.AbiCoder()\n      const decodedObj = abiCoder.decode(outputTypes, response)\n\n      const json = {}\n      for (i = 0; i < outputTypes.length; i++) {\n        const name = fnabi.outputs[i].name\n        json[i] = outputTypes[i] + ': ' + (name ? name + ' ' + decodedObj[i] : decodedObj[i])\n      }\n\n      return json\n    } catch (e) {\n      return { error: 'Failed to decode output: ' + e }\n    }\n  }\n  return {}\n}\n\nexport function parseFunctionParams (params) {\n  const args = []\n  // Check if parameter string starts with array or string\n  let startIndex = isArrayOrStringStart(params, 0) ? -1 : 0\n  for (let i = 0; i < params.length; i++) {\n    // If a quote is received\n    if (params.charAt(i) === '\"') {\n      startIndex = -1\n      let endQuoteIndex = false\n      // look for closing quote. On success, push the complete string in arguments list\n      for (let j = i + 1; !endQuoteIndex; j++) {\n        if (params.charAt(j) === '\"') {\n          args.push(normalizeParam(params.substring(i + 1, j)))\n          endQuoteIndex = true\n          i = j\n        }\n        // Throw error if end of params string is arrived but couldn't get end quote\n        if (!endQuoteIndex && j === params.length - 1) {\n          throw new Error('invalid params')\n        }\n      }\n    } else if (params.charAt(i) === '[') { // If an array/struct opening bracket is received\n      startIndex = -1\n      let bracketCount = 1\n      let j\n      for (j = i + 1; bracketCount !== 0; j++) {\n        // Increase count if another array opening bracket is received (To handle nested array)\n        if (params.charAt(j) === '[') {\n          bracketCount++\n        } else if (params.charAt(j) === ']') { // // Decrease count if an array closing bracket is received (To handle nested array)\n          bracketCount--\n        }\n        // Throw error if end of params string is arrived but couldn't get end of tuple\n        if (bracketCount !== 0 && j === params.length - 1) {\n          throw new Error('invalid tuple params')\n        }\n        if (bracketCount === 0) break\n      }\n      args.push(parseFunctionParams(params.substring(i + 1, j)))\n      i = j - 1\n    } else if (params.charAt(i) === ',' || i === params.length - 1) { // , or end of string\n      // if startIndex >= 0, it means a parameter was being parsed, it can be first or other parameter\n      if (startIndex >= 0) {\n        let param = params.substring(startIndex, i === params.length - 1 ? undefined : i)\n        param = normalizeParam(param)\n        args.push(param)\n      }\n      // Register start index of a parameter to parse\n      startIndex = isArrayOrStringStart(params, i + 1) ? -1 : i + 1\n    }\n  }\n  return args\n}\n\nexport const normalizeParam = (param) => {\n  param = param.trim()\n  if (param.startsWith('0x')) param = `${param}`\n  if (/[0-9]/g.test(param)) param = `${param}`\n\n  // fromExponential\n  if (!param.startsWith('0x')) {\n    const regSci = REGEX_SCIENTIFIC.exec(param)\n    const exponents = regSci ? regSci[2] : null\n    if (regSci && REGEX_DECIMAL.exec(exponents)) {\n      try {\n        let paramTrimmed = param.replace(/^'/g, '').replace(/'$/g, '')\n        paramTrimmed = paramTrimmed.replace(/^\"/g, '').replace(/\"$/g, '')\n        param = fromExponential(paramTrimmed)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  if (typeof param === 'string') {\n    if (param === 'true') param = true\n    if (param === 'false') param = false\n  }\n  return param\n}\n\nexport const REGEX_SCIENTIFIC = /^-?(\\d+\\.?\\d*)e\\d*(\\d+)$/\n\nexport const REGEX_DECIMAL = /^\\d*/\n\nexport function isArrayOrStringStart (str, index) {\n  return str.charAt(index) === '\"' || str.charAt(index) === '['\n}\n","'use strict'\nimport { ethers } from 'ethers'\n\nexport function makeFullTypeDefinition (typeDef) {\n  if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n    const innerTypes = typeDef.components.map((innerType) => { return makeFullTypeDefinition(innerType) })\n    return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}`\n  }\n  return typeDef.type\n}\n\nexport function encodeParams (funABI, args) {\n  const types = []\n  if (funABI.inputs && funABI.inputs.length) {\n    for (let i = 0; i < funABI.inputs.length; i++) {\n      const type = funABI.inputs[i].type\n      if (type === 'bool') {\n        if (args[i] === false || args[i] === 'false' || args[i] === '0' || args[i] === 0) args[i] = false\n        else if (args[i] === true || args[i] === 'true' || args[i] === '1' || args[i] === 1) args[i] = true\n        else throw new Error(`provided value for boolean is invalid: ${args[i]}`)\n      }\n      types.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(funABI.inputs[i]) : type)\n      if (args.length < types.length) {\n        args.push('')\n      }\n    }\n  }\n\n  // NOTE: the caller will concatenate the bytecode and this\n  //       it could be done here too for consistency\n  const abiCoder = new ethers.utils.AbiCoder()\n  return abiCoder.encode(types, args)\n}\n\nexport function encodeFunctionId (funABI) {\n  if (funABI.type === 'fallback' || funABI.type === 'receive') return '0x'\n  const abi = new ethers.utils.Interface([funABI])\n  return abi.getSighash(funABI.name)\n}\n\nexport function getFunctionFragment (funABI): ethers.utils.Interface {\n  if (funABI.type === 'fallback' || funABI.type === 'receive') return null\n  return new ethers.utils.Interface([funABI])\n}\n\nexport function sortAbiFunction (contractabi) {\n  // Check if function is constant (introduced with Solidity 0.6.0)\n  const isConstant = ({ stateMutability }) => stateMutability === 'view' || stateMutability === 'pure'\n  // Sorts the list of ABI entries. Constant functions will appear first,\n  // followed by non-constant functions. Within those t wo groupings, functions\n  // will be sorted by their names.\n  return contractabi.sort(function (a, b) {\n    if (isConstant(a) && !isConstant(b)) {\n      return 1\n    } else if (isConstant(b) && !isConstant(a)) {\n      return -1\n    }\n    // If we reach here, either a and b are both constant or both not; sort by name then\n    // special case for fallback, receive and constructor function\n    if (a.type === 'function' && typeof a.name !== 'undefined') {\n      return a.name.localeCompare(b.name)\n    } else if (a.type === 'constructor' || a.type === 'fallback' || a.type === 'receive') {\n      return 1\n    }\n  })\n}\n\nexport function getConstructorInterface (abi) {\n  const funABI = { name: '', inputs: [], type: 'constructor', payable: false, outputs: []}\n  if (typeof abi === 'string') {\n    try {\n      abi = JSON.parse(abi)\n    } catch (e) {\n      console.log('exception retrieving ctor abi ' + abi)\n      return funABI\n    }\n  }\n\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'constructor') {\n      funABI.inputs = abi[i].inputs || []\n      funABI.payable = abi[i].payable\n      funABI['stateMutability'] = abi[i].stateMutability\n      break\n    }\n  }\n\n  return funABI\n}\n\nexport function serializeInputs (fnAbi) {\n  let serialized = '('\n  if (fnAbi.inputs && fnAbi.inputs.length) {\n    serialized += fnAbi.inputs.map((input) => { return input.type }).join(',')\n  }\n  serialized += ')'\n  return serialized\n}\n\nexport function extractSize (type) {\n  const size = type.match(/([a-zA-Z0-9])(\\[.*\\])/)\n  return size ? size[2] : ''\n}\n\nexport function getFunctionLiner (fn, detailTuple: boolean = true) {\n  /*\n    if detailsTuple is True, this will return something like fnName((uint, string))\n    if detailsTuple is False, this will return something like fnName(tuple)\n  */\n  return fn.name + '(' + fn.inputs.map((value) => {\n    if (detailTuple && value.components) {\n      const fullType = makeFullTypeDefinition(value)\n      return fullType.replace(/tuple/g, '') // return of makeFullTypeDefinition might contain `tuple`, need to remove it cause `methodIdentifier` (fnName) does not include `tuple` keyword\n    } else {\n      return value.type\n    }\n  }).join(',') + ')'\n}\n\nexport function getFunction (abi, fnName) {\n  for (let i = 0; i < abi.length; i++) {\n    const fn = abi[i]\n    if (fn.type === 'function' && (fnName === getFunctionLiner(fn, true) || fnName === getFunctionLiner(fn, false))) {\n      return fn\n    }\n  }\n  return null\n}\n\nexport function getFallbackInterface (abi) {\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'fallback') {\n      return abi[i]\n    }\n  }\n}\n\nexport function getReceiveInterface (abi) {\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'receive') {\n      return abi[i]\n    }\n  }\n}\n\n/**\n  * return the contract obj of the given @arg name. Uses last compilation result.\n  * return null if not found\n  * @param {String} name    - contract name\n  * @returns contract obj and associated file: { contract, file } or null\n  */\nexport function getContract (contractName, contracts) {\n  for (const file in contracts) {\n    if (contracts[file][contractName]) {\n      return { object: contracts[file][contractName], file: file }\n    }\n  }\n  return null\n}\n\n/**\n  * call the given @arg cb (function) for all the contracts. Uses last compilation result\n  * stop visiting when cb return true\n  * @param {Function} cb    - callback\n  */\nexport function visitContracts (contracts, cb) {\n  for (const file in contracts) {\n    for (const name in contracts[file]) {\n      if (cb({ name: name, object: contracts[file][name], file: file })) return\n    }\n  }\n}\n\nexport function inputParametersDeclarationToString (abiinputs) {\n  const inputs = (abiinputs || []).map((inp) => inp.type + ' ' + inp.name)\n  return inputs.join(', ')\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { toBytes, addHexPrefix } from '@ethereumjs/util'\nimport { EventManager } from '../eventManager'\nimport { compareByteCode, getinputParameters } from '../util'\nimport { decodeResponse } from './txFormat'\nimport { getFunction, getReceiveInterface, getConstructorInterface, visitContracts, makeFullTypeDefinition } from './txHelper'\n\nfunction addExecutionCosts (txResult, tx, execResult) {\n  if (txResult) {\n    if (execResult) {\n      tx.returnValue = execResult.returnValue\n      if (execResult.executionGasUsed) tx.executionCost = execResult.executionGasUsed.toString(10)\n    }\n    if (txResult.receipt && txResult.receipt.gasUsed) tx.transactionCost = txResult.receipt.gasUsed.toString(10)\n  }\n}\n\n/**\n  * poll web3 each 2s if web3\n  * listen on transaction executed event if VM\n  * attention: blocks returned by the event `newBlock` have slightly different json properties whether web3 or the VM is used\n  * trigger 'newBlock'\n  *\n  */\nexport class TxListener {\n  event\n  executionContext\n  _resolvedTransactions\n  _api\n  _resolvedContracts\n  _isListening: boolean\n  _listenOnNetwork:boolean\n  _loopId\n  blocks\n\n  constructor (opt, executionContext) {\n    this.event = new EventManager()\n    // has a default for now for backwards compatibility\n    this.executionContext = executionContext\n    this._api = opt.api\n    this._resolvedTransactions = {}\n    this._resolvedContracts = {}\n    this._isListening = false\n    this._listenOnNetwork = false\n    this._loopId = null\n    this.init()\n    this.executionContext.event.register('contextChanged', (context) => {\n      if (this._isListening) {\n        this.stopListening()\n        this.startListening()\n      }\n    })\n\n    opt.event.udapp.register('callExecuted', async (error, from, to, data, lookupOnly, txResult) => {\n      if (error) return\n      // we go for that case if\n      // in VM mode\n      // in web3 mode && listen remix txs only\n      if (!this._isListening) return // we don't listen\n      if (this._loopId) return // we seems to already listen on a \"web3\" network\n\n      let returnValue\n      let execResult\n      if (this.executionContext.isVM()) {\n        execResult = await this.executionContext.web3().remix.getExecutionResultFromSimulator(txResult.transactionHash)\n        returnValue = toBytes(execResult.returnValue)\n      } else {\n        returnValue = toBytes(addHexPrefix(txResult.result))\n      }\n      const call = {\n        from: from,\n        to: to,\n        input: data,\n        hash: txResult.transactionHash ? txResult.transactionHash : 'call' + (from || '') + to + data,\n        isCall: true,\n        returnValue,\n        envMode: this.executionContext.getProvider()\n      }\n\n      addExecutionCosts(txResult, call, execResult)\n      this._resolveTx(call, call, (error, resolvedData) => {\n        if (!error) {\n          this.event.trigger('newCall', [call])\n        }\n      })\n    })\n\n    opt.event.udapp.register('transactionExecuted', (error, from, to, data, lookupOnly, txResult) => {\n      if (error) return\n      if (lookupOnly) return\n      // we go for that case if\n      // in VM mode\n      // in web3 mode && listen remix txs only\n      if (!this._isListening) return // we don't listen\n      if (this._loopId) return // we seems to already listen on a \"web3\" network\n      this.executionContext.web3().eth.getTransaction(txResult.transactionHash).then(async tx=>{\n        let execResult\n        if (this.executionContext.isVM()) {\n          execResult = await this.executionContext.web3().remix.getExecutionResultFromSimulator(txResult.transactionHash)\n        }\n\n        addExecutionCosts(txResult, tx, execResult)\n        tx.envMode = this.executionContext.getProvider()\n        tx.status = txResult.receipt.status\n        this._resolve([tx])\n      }).catch(error=>console.log(error))\n    })\n  }\n\n  /**\n    * define if txlistener should listen on the network or if only tx created from remix are managed\n    *\n    * @param {Bool} type - true if listen on the network\n    */\n  setListenOnNetwork (listenOnNetwork) {\n    this._listenOnNetwork = listenOnNetwork\n    if (this._loopId) {\n      clearInterval(this._loopId)\n    }\n    this._listenOnNetwork ? this.startListening() : this.stopListening()\n  }\n\n  /**\n    * reset recorded transactions\n    */\n  init () {\n    this.blocks = []\n  }\n\n  /**\n    * start listening for incoming transactions\n    *\n    * @param {String} type - type/name of the provider to add\n    * @param {Object} obj  - provider\n    */\n  startListening () {\n    this.init()\n    this._isListening = true\n    if (this._listenOnNetwork && !this.executionContext.isVM()) {\n      this._startListenOnNetwork()\n    }\n  }\n\n  /**\n    * stop listening for incoming transactions. do not reset the recorded pool.\n    *\n    * @param {String} type - type/name of the provider to add\n    * @param {Object} obj  - provider\n    */\n  stopListening () {\n    if (this._loopId) {\n      clearInterval(this._loopId)\n    }\n    this._loopId = null\n    this._isListening = false\n  }\n\n  async _startListenOnNetwork () {\n    let lastSeenBlock = this.executionContext.lastBlock?.number - BigInt(1)\n    let processingBlock = false\n\n    const processBlocks = async () => {\n      if (!this._isListening) return\n      if (processingBlock) return\n      processingBlock = true\n      const currentLoopId = this._loopId\n      if (this._loopId === null) {\n        processingBlock = false\n        return\n      }\n      if (!lastSeenBlock) {\n        lastSeenBlock = this.executionContext.lastBlock?.number // trying to resynchronize\n        console.log('listen on blocks, resynchronising')\n        processingBlock = false\n        return\n      }\n      const current = this.executionContext.lastBlock?.number\n      if (!current) {\n        console.log(new Error('no last block found'))\n        processingBlock = false\n        return\n      }\n      if (currentLoopId === this._loopId && lastSeenBlock < current) {\n        while (lastSeenBlock <= current) {\n          try {\n            if (!this._isListening) break\n            await this._manageBlock(lastSeenBlock)\n          } catch (e) {\n            console.log(e)\n          }\n          lastSeenBlock++\n        }\n        lastSeenBlock = current\n      }\n      processingBlock = false\n    }\n    this._loopId = setInterval(processBlocks, 20000)\n    processBlocks()\n  }\n\n  async _manageBlock (blockNumber) {\n    try {\n      const result = await this.executionContext.web3().eth.getBlock(blockNumber, true)\n      return await this._newBlock(Object.assign({ type: 'web3' }, result))\n    } catch (e) {}\n  }\n\n  /**\n    * try to resolve the contract name from the given @arg address\n    *\n    * @param {String} address - contract address to resolve\n    * @return {String} - contract name\n    */\n  resolvedContract (address) {\n    if (this._resolvedContracts[address]) return this._resolvedContracts[address].name\n    return null\n  }\n\n  /**\n    * try to resolve the transaction from the given @arg txHash\n    *\n    * @param {String} txHash - contract address to resolve\n    * @return {String} - contract name\n    */\n  resolvedTransaction (txHash) {\n    return this._resolvedTransactions[txHash]\n  }\n\n  async _newBlock (block) {\n    this.blocks.push(block)\n    await this._resolve(block.transactions)\n    this.event.trigger('newBlock', [block])\n  }\n\n  _resolveAsync (tx) {\n    return new Promise((resolve, reject) => {\n      this._api.resolveReceipt(tx, (error, receipt) => {\n        if (error) return reject(error)\n        this._resolveTx(tx, receipt, (error, resolvedData) => {\n          if (error) return reject(error)\n          if (resolvedData) {\n            this.event.trigger('txResolved', [tx, receipt, resolvedData])\n          }\n          this.event.trigger('newTransaction', [tx, receipt])\n          resolve({})\n        })\n      })\n    })\n  }\n\n  async _resolve (transactions) {\n    for (const tx of transactions) {\n      try {\n        if (!this._isListening) break\n        await this._resolveAsync(tx)\n      } catch (e) {}\n    }\n  }\n\n  _resolveTx (tx, receipt, cb) {\n    const contracts = this._api.contracts()\n    if (!contracts) return cb()\n    let fun\n    let contract\n    if (!tx.to || tx.to === '0x0') { // testrpc returns 0x0 in that case\n      // contract creation / resolve using the creation bytes code\n      // if web3: we have to call getTransactionReceipt to get the created address\n      // if VM: created address already included\n      const code = tx.input\n      contract = this._tryResolveContract(code, contracts, true)\n      if (contract) {\n        const address = receipt.contractAddress\n        this._resolvedContracts[address] = contract\n        fun = this._resolveFunction(contract, tx, true)\n        if (this._resolvedTransactions[tx.hash]) {\n          this._resolvedTransactions[tx.hash].contractAddress = address\n        }\n        return cb(null, { to: null, contractName: contract.name, function: fun, creationAddress: address })\n      }\n      return cb()\n    } else {\n      // first check known contract, resolve against the `runtimeBytecode` if not known\n      contract = this._resolvedContracts[tx.to]\n      if (!contract) {\n        this.executionContext.web3().eth.getCode(tx.to).then(code=>{\n          if (code) {\n            const contract = this._tryResolveContract(code, contracts, false)\n            if (contract) {\n              this._resolvedContracts[tx.to] = contract\n              const fun = this._resolveFunction(contract, tx, false)\n              return cb(null, { to: tx.to, contractName: contract.name, function: fun })\n            }\n          }\n          return cb()\n        }).catch(error=>cb(error))\n        return\n      }\n      if (contract) {\n        fun = this._resolveFunction(contract, tx, false)\n        return cb(null, { to: tx.to, contractName: contract.name, function: fun })\n      }\n      return cb()\n    }\n  }\n\n  _resolveFunction (contract, tx, isCtor) {\n    if (!contract) {\n      console.log('txListener: cannot resolve contract - contract is null')\n      return\n    }\n    const abi = contract.object.abi\n    const inputData = tx.input.replace('0x', '')\n    if (!isCtor) {\n      const methodIdentifiers = contract.object.evm.methodIdentifiers\n      for (const fn in methodIdentifiers) {\n        if (methodIdentifiers[fn] === inputData.substring(0, 8)) {\n          const fnabi = getFunction(abi, fn)\n          this._resolvedTransactions[tx.hash] = {\n            contractName: contract.name,\n            to: tx.to,\n            fn: fn,\n            params: this._decodeInputParams(inputData.substring(8), fnabi)\n          }\n          if (tx.returnValue) {\n            this._resolvedTransactions[tx.hash].decodedReturnValue = decodeResponse(tx.returnValue, fnabi)\n          }\n          return this._resolvedTransactions[tx.hash]\n        }\n      }\n      // receive function\n      if (!inputData && getReceiveInterface(abi)) {\n        this._resolvedTransactions[tx.hash] = {\n          contractName: contract.name,\n          to: tx.to,\n          fn: '(receive)',\n          params: null\n        }\n      } else {\n        // fallback function\n        this._resolvedTransactions[tx.hash] = {\n          contractName: contract.name,\n          to: tx.to,\n          fn: '(fallback)',\n          params: null\n        }\n      }\n    } else {\n      const bytecode = contract.object.evm.bytecode.object\n      let params = null\n      if (bytecode && bytecode.length) {\n        params = this._decodeInputParams(getinputParameters(inputData), getConstructorInterface(abi))\n      }\n      this._resolvedTransactions[tx.hash] = {\n        contractName: contract.name,\n        to: null,\n        fn: '(constructor)',\n        params: params\n      }\n    }\n    return this._resolvedTransactions[tx.hash]\n  }\n\n  _tryResolveContract (codeToResolve, compiledContracts, isCreation) {\n    let found = null\n    visitContracts(compiledContracts, (contract) => {\n      const bytes = isCreation ? contract.object.evm.bytecode.object : contract.object.evm.deployedBytecode.object\n      if (compareByteCode(codeToResolve, '0x' + bytes)) {\n        found = contract\n        return true\n      }\n    })\n    return found\n  }\n\n  _decodeInputParams (data, abi) {\n    data = toBytes(addHexPrefix(data))\n    if (!data.length) data = new Uint8Array(32 * abi.inputs.length) // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not enough data\n\n    const inputTypes = []\n    for (let i = 0; i < abi.inputs.length; i++) {\n      const type = abi.inputs[i].type\n      inputTypes.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(abi.inputs[i]) : type)\n    }\n    const abiCoder = new ethers.utils.AbiCoder()\n    const decoded = abiCoder.decode(inputTypes, data)\n    const ret = {}\n    for (const k in abi.inputs) {\n      ret[abi.inputs[k].type + ' ' + abi.inputs[k].name] = decoded[k]\n    }\n    return ret\n  }\n}\n","'use strict'\nimport { EventManager } from '../eventManager'\n\nexport type Transaction = {\n  from: string,\n  to: string,\n  value: string,\n  data: string,\n  gasLimit: number,\n  useCall: boolean,\n  timestamp?: number\n  type: '0x1' | '0x2'\n}\n\nexport class TxRunner {\n  event\n  pendingTxs\n  queusTxs\n  opt\n  internalRunner\n  constructor (internalRunner, opt) {\n    this.opt = opt || {}\n    this.internalRunner = internalRunner\n    this.event = new EventManager()\n\n    this.pendingTxs = {}\n    this.queusTxs = []\n  }\n\n  rawRun (args: Transaction, confirmationCb, gasEstimationForceSend, promptCb, cb) {\n    run(this, args, args.timestamp || Date.now(), confirmationCb, gasEstimationForceSend, promptCb, cb)\n  }\n\n  execute (args: Transaction, confirmationCb, gasEstimationForceSend, promptCb, callback) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n    this.internalRunner.execute(args, confirmationCb, gasEstimationForceSend, promptCb, callback)\n  }\n}\n\nfunction run (self, tx: Transaction, stamp, confirmationCb, gasEstimationForceSend = null, promptCb = null, callback = null) {\n  if (Object.keys(self.pendingTxs).length) {\n    return self.queusTxs.push({ tx, stamp, confirmationCb, gasEstimationForceSend, promptCb, callback })\n  }\n  self.pendingTxs[stamp] = tx\n  self.execute(tx, confirmationCb, gasEstimationForceSend, promptCb, function (error, result) {\n    delete self.pendingTxs[stamp]\n    if (callback && typeof callback === 'function') callback(error, result)\n    if (self.queusTxs.length) {\n      const next = self.queusTxs.pop()\n      run(self, next.tx, next.stamp, next.confirmationCb, next.gasEstimationForceSend, next.promptCb, next.callback)\n    }\n  })\n}\n","'use strict'\nimport { RunBlockResult, RunTxResult } from '@ethereumjs/vm'\nimport { ConsensusType } from '@ethereumjs/common'\nimport { LegacyTransaction, FeeMarketEIP1559Transaction } from '@ethereumjs/tx'\nimport { Block } from '@ethereumjs/block'\nimport { bytesToHex, Address, hexToBytes } from '@ethereumjs/util'\nimport { EVM } from '@ethereumjs/evm'\nimport type { Account } from '@ethereumjs/util'\nimport { EventManager } from '../eventManager'\nimport { LogsManager } from './logsManager'\nimport type { Transaction as InternalTransaction } from './txRunner'\n\nexport type VMexecutionResult = {\n  result: RunTxResult,\n  transactionHash: string\n  block: Block,\n  tx: LegacyTransaction\n}\n\nexport type VMExecutionCallBack = (error: string | Error, result?: VMexecutionResult) => void\n\nexport class TxRunnerVM {\n  event\n  blockNumber\n  pendingTxs\n  vmaccounts\n  queusTxs\n  blocks: Uint8Array[]\n  logsManager\n  commonContext\n  blockParentHash\n  nextNonceForCall: number\n  standaloneTx: boolean\n  getVMObject: () => any\n\n  constructor (vmaccounts, api, getVMObject, blocks: Uint8Array[] = []) {\n    this.event = new EventManager()\n    this.logsManager = new LogsManager()\n    // has a default for now for backwards compatibility\n    this.getVMObject = getVMObject\n    this.commonContext = this.getVMObject().common\n    this.pendingTxs = {}\n    this.vmaccounts = vmaccounts\n    this.queusTxs = []\n    /*\n      txHash is generated using the nonce,\n      in order to have unique transaction hash, we need to keep using different nonce (in case of a call)\n      so we increment this value after each call.\n      For this to function we also need to skip nonce validation, in the vm: `{ skipNonce: true }`\n    */\n    this.nextNonceForCall = 0\n\n    const vm = this.getVMObject().vm\n    if (Array.isArray(blocks) && (blocks || []).length > 0) {\n      const lastBlock = Block.fromRLPSerializedBlock(blocks[blocks.length - 1], { common: this.commonContext })\n\n      this.blockParentHash = lastBlock.hash()\n      this.blocks = blocks\n    } else {\n      this.blockParentHash = vm.blockchain.genesisBlock.hash()\n      this.blocks = [vm.blockchain.genesisBlock.serialize()]\n    }\n  }\n\n  execute (args: InternalTransaction, confirmationCb, gasEstimationForceSend, promptCb, callback: VMExecutionCallBack) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n\n    try {\n      this.runInVm(args.from, args.to, data, args.value, args.gasLimit, args.useCall, callback)\n    } catch (e) {\n      callback(e, null)\n    }\n  }\n\n  async runInVm (from: string, to: string, data: string, value: string, gasLimit: number, useCall: boolean, callback: VMExecutionCallBack) {\n    let account\n    if (!from && useCall && Object.keys(this.vmaccounts).length) {\n      from = Object.keys(this.vmaccounts)[0]\n      account = this.vmaccounts[from]\n    } else account = this.vmaccounts[from]\n\n    if (!account) {\n      return callback('Invalid account selected')\n    }\n\n    try {\n      const res = await this.getVMObject().stateManager.getAccount(Address.fromString(from))\n      const EIP1559 = this.commonContext.hardfork() !== 'berlin' // berlin is the only pre eip1559 fork that we handle.\n      let tx\n      if (!EIP1559) {\n        tx = LegacyTransaction.fromTxData({\n          nonce: useCall ? this.nextNonceForCall : res.nonce,\n          gasPrice: '0x1',\n          gasLimit: gasLimit,\n          to: to,\n          value: value,\n          data: hexToBytes(data)\n        }, { common: this.commonContext }).sign(account.privateKey)\n      } else {\n        tx = FeeMarketEIP1559Transaction.fromTxData({\n          nonce: useCall ? this.nextNonceForCall : res.nonce,\n          maxPriorityFeePerGas: '0x01',\n          maxFeePerGas: '0x7',\n          gasLimit: gasLimit,\n          to: to,\n          value: value,\n          data: hexToBytes(data)\n        }).sign(account.privateKey)\n      }\n      if (useCall) this.nextNonceForCall++\n\n      const coinbases = ['0x0e9281e9c6a0808672eaba6bd1220e144c9bb07a', '0x8945a1288dc78a6d8952a92c77aee6730b414778', '0x94d76e24f818426ae84aa404140e8d5f60e10e7e']\n      const difficulties = [69762765929000, 70762765929000, 71762765929000]\n      const difficulty = this.commonContext.consensusType() === ConsensusType.ProofOfStake ? 0 : difficulties[this.blocks.length % difficulties.length]\n      const block = Block.fromBlockData({\n        header: {\n          timestamp: new Date().getTime() / 1000 | 0,\n          number: this.blocks.length,\n          coinbase: coinbases[this.blocks.length % coinbases.length],\n          difficulty,\n          gasLimit,\n          baseFeePerGas: EIP1559 ? '0x1' : undefined,\n          parentHash: this.blockParentHash\n        },\n        transactions: [tx]\n      }, { common: this.commonContext })\n\n      // standaloneTx represents a gas estimation call\n      if (this.standaloneTx || useCall) {\n        const root = await this.getVMObject().stateManager.getStateRoot()\n        this.runBlockInVm(tx, block, async (err, result) => {\n          await this.getVMObject().stateManager.setStateRoot(root)\n          callback(err, result)\n        })\n      } else {\n        this.blockParentHash = block.hash()\n        this.runBlockInVm(tx, block, async (err, result) => {\n          if (!err) {\n            if (!useCall) {\n              this.getVMObject().vm.blockchain.putBlock(block)\n              this.blocks.push(block.serialize())\n            }\n          }\n          callback(err, result)\n        })\n      }\n    } catch (e) {\n      callback(e)\n    }\n  }\n\n  runTxInVm (tx, block, callback) {\n    this.getVMObject().vm.runTx({ tx, skipNonce: true, skipBlockValidation: true, skipBalance: false }).then((result: RunTxResult) => {\n      callback(null, {\n        result,\n        transactionHash: bytesToHex(Buffer.from(tx.hash())),\n        block,\n        tx\n      })\n    }).catch(function (err) {\n      callback(err)\n    })\n  }\n\n  runBlockInVm (tx, block, callback) {\n    this.getVMObject().vm.runBlock({ block: block, generate: true, skipNonce: true, skipBlockValidation: true, skipBalance: false }).then((results: RunBlockResult) => {\n      const result: RunTxResult = results.results[0]\n      callback(null, {\n        result,\n        transactionHash: bytesToHex(Buffer.from(tx.hash())),\n        block,\n        tx\n      })\n    }).catch(function (err) {\n      callback(err)\n    })\n  }\n}\n","'use strict'\nimport { EventManager } from '../eventManager'\nimport type { Transaction as InternalTransaction } from './txRunner'\nimport Web3 from 'web3'\nimport { toBigInt, toHex } from 'web3-utils'\n\nexport class TxRunnerWeb3 {\n  event\n  _api\n  getWeb3: () => Web3\n  currentblockGasLimit: () => number\n\n  constructor (api, getWeb3, currentblockGasLimit) {\n    this.event = new EventManager()\n    this.getWeb3 = getWeb3\n    this.currentblockGasLimit = currentblockGasLimit\n    this._api = api\n  }\n\n  async _executeTx (tx, network, txFee, api, promptCb, callback) {\n    if (network && network.lastBlock && network.lastBlock.baseFeePerGas) {\n      // the sending stack (web3.js / metamask need to have the type defined)\n      // this is to avoid the following issue: https://github.com/MetaMask/metamask-extension/issues/11824\n      tx.type = '0x2'\n    } else {\n      // tx.type = '0x1'\n    }\n    if (txFee) {\n      if (txFee.baseFeePerGas) {\n        tx.maxPriorityFeePerGas = toHex(BigInt(this.getWeb3().utils.toWei(txFee.maxPriorityFee, 'gwei')))\n        tx.maxFeePerGas = toHex(BigInt(this.getWeb3().utils.toWei(txFee.maxFee, 'gwei')))\n        tx.type = '0x2'\n      } else {\n        tx.gasPrice = toHex(BigInt(this.getWeb3().utils.toWei(txFee.gasPrice, 'gwei')))\n        // tx.type = '0x1'\n      }\n    }\n\n    let currentDateTime = new Date();\n    const start = currentDateTime.getTime() / 1000\n    const cb = (err, resp) => {\n      if (err) {\n        return callback(err, resp)\n      }\n      this.event.trigger('transactionBroadcasted', [resp])\n      const listenOnResponse = () => {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n          const receipt = await tryTillReceiptAvailable(resp, this.getWeb3())\n          tx = await tryTillTxAvailable(resp, this.getWeb3())\n          currentDateTime = new Date();\n          const end = currentDateTime.getTime() / 1000\n          console.log('tx duration', end - start)\n          resolve({\n            receipt,\n            tx,\n            transactionHash: receipt ? receipt['transactionHash'] : null\n          })\n        })\n      }\n      listenOnResponse().then((txData) => { callback(null, txData) }).catch((error) => { callback(error) })\n    }\n\n    if (api.personalMode()) {\n      promptCb(\n        async (value) => {\n          try {\n            const res = await (this.getWeb3() as any).eth.personal.sendTransaction({ ...tx, value }, { checkRevertBeforeSending: false, ignoreGasPricing: true })\n            cb(null, res.transactionHash)\n          } catch (e) {\n            console.log(`Send transaction failed: ${e.message} . if you use an injected provider, please check it is properly unlocked. `)\n            // in case the receipt is available, we consider that only the execution failed but the transaction went through.\n            // So we don't consider this to be an error.\n            if (e.receipt) cb(null, e.receipt.transactionHash)\n            else cb(e, null)\n          }\n        },\n        () => {\n          return callback('Canceled by user.')\n        }\n      )\n    } else {\n      try {\n        const res = await this.getWeb3().eth.sendTransaction(tx, null, { checkRevertBeforeSending: false, ignoreGasPricing: true })\n        cb(null, res.transactionHash)\n      } catch (e) {\n        console.log(`Send transaction failed: ${e.message} . if you use an injected provider, please check it is properly unlocked. `)\n        // in case the receipt is available, we consider that only the execution failed but the transaction went through.\n        // So we don't consider this to be an error.\n        if (e.receipt) cb(null, e.receipt.transactionHash)\n        else cb(e, null)\n      }\n    }\n  }\n\n  execute (args: InternalTransaction, confirmationCb, gasEstimationForceSend, promptCb, callback) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n\n    return this.runInNode(args.from, args.to, data, args.value, args.gasLimit, args.useCall, args.timestamp, confirmationCb, gasEstimationForceSend, promptCb, callback)\n  }\n\n  runInNode (from, to, data, value, gasLimit, useCall, timestamp, confirmCb, gasEstimationForceSend, promptCb, callback) {\n    const tx = { from: from, to: to, data: data, value: value }\n    if (!from) return callback('the value of \"from\" is not defined. Please make sure an account is selected.')\n    if (useCall) {\n      if (this._api && this._api.isVM()) {\n        (this.getWeb3() as any).remix.registerCallId(timestamp)\n      }\n      this.getWeb3().eth.call(tx)\n        .then((result: any) => callback(null, {\n          result: result\n        }))\n        .catch(error => callback(error))\n      return\n    }\n    this._api.detectNetwork((errNetWork, network) => {\n      if (errNetWork) {\n        console.log(errNetWork)\n        return\n      }\n      const txCopy = { ...tx, type: undefined, maxFeePerGas: undefined, gasPrice: undefined }\n      if (network && network.lastBlock) {\n        if (network.lastBlock.baseFeePerGas) {\n          // the sending stack (web3.js / metamask need to have the type defined)\n          // this is to avoid the following issue: https://github.com/MetaMask/metamask-extension/issues/11824\n          txCopy.type = '0x2'\n          txCopy.maxFeePerGas = Math.ceil(Number((toBigInt(network.lastBlock.baseFeePerGas) + toBigInt(network.lastBlock.baseFeePerGas) / BigInt(3)).toString()))\n        } else {\n          txCopy.type = '0x1'\n          txCopy.gasPrice = undefined\n        }\n      }\n      this.getWeb3().eth.estimateGas(txCopy)\n        .then(gasEstimation => {\n          gasEstimationForceSend(null, () => {\n            /*\n            * gasLimit is a value that can be set in the UI to hardcap value that can be put in a tx.\n            * e.g if the gasestimate\n            */\n            if (gasLimit !== '0x0' && gasEstimation > gasLimit) {\n              return callback(`estimated gas for this transaction (${gasEstimation}) is higher than gasLimit set in the configuration  (${gasLimit}). Please raise the gas limit.`)\n            }\n\n            if (gasLimit === '0x0') {\n              tx['gas'] = gasEstimation\n            } else {\n              tx['gas'] = gasLimit\n            }\n\n            if (this._api.config.getUnpersistedProperty('doNotShowTransactionConfirmationAgain')) {\n              return this._executeTx(tx, network, null, this._api, promptCb, callback)\n            }\n\n            confirmCb(network, tx, tx['gas'], (txFee) => {\n              return this._executeTx(tx, network, txFee, this._api, promptCb, callback)\n            }, (error) => {\n              callback(error)\n            })\n          }, callback)\n        })\n        .catch(err => {\n          if (err && err.message.indexOf('Invalid JSON RPC response') !== -1) {\n            // // @todo(#378) this should be removed when https://github.com/WalletConnect/walletconnect-monorepo/issues/334 is fixed\n            callback(new Error('Gas estimation failed because of an unknown internal error. This may indicated that the transaction will fail.'))\n          }\n          err = network.name === 'VM' ? null : err // just send the tx if \"VM\"\n          gasEstimationForceSend(err, () => {\n            const defaultGasLimit = 3000000\n            tx['gas'] = gasLimit === '0x0' ? '0x' + defaultGasLimit.toString(16) : gasLimit\n\n            if (this._api.config.getUnpersistedProperty('doNotShowTransactionConfirmationAgain')) {\n              return this._executeTx(tx, network, null, this._api, promptCb, callback)\n            }\n\n            confirmCb(network, tx, tx['gas'], (txFee) => {\n              return this._executeTx(tx, network, txFee, this._api, promptCb, callback)\n            }, (error) => {\n              callback(error)\n            })\n          }, callback)\n        })\n    })\n  }\n}\n\nasync function tryTillReceiptAvailable (txhash: string, web3: Web3) {\n  try {\n    const receipt = await web3.eth.getTransactionReceipt(txhash)\n    if (receipt) {\n      if (!receipt.to && !receipt.contractAddress) {\n        // this is a contract creation and the receipt doesn't contain a contract address. we have to keep polling...\n        console.log('this is a contract creation and the receipt does not contain a contract address. we have to keep polling...')\n      } else\n        return receipt\n    }\n  } catch (e) {}\n  await pause()\n  return await tryTillReceiptAvailable(txhash, web3)\n}\n\nasync function tryTillTxAvailable (txhash: string, web3: Web3) {\n  try {\n    const tx = await web3.eth.getTransaction(txhash)\n    if (tx && tx.blockHash) return tx\n  } catch (e) {}\n  return await tryTillTxAvailable(txhash, web3)\n}\n\nasync function pause () { return new Promise((resolve, reject) => { setTimeout(resolve, 500) }) }\n","'use strict'\nimport { BN } from 'bn.js'\nimport { bytesToHex } from '@ethereumjs/util'\nimport { isBigInt } from 'web3-validator'\n\nexport function toInt (h) {\n  if (h.indexOf && h.indexOf('0x') === 0) {\n    return (new BN(h.replace('0x', ''), 16)).toString(10)\n  } else if ((h.constructor && h.constructor.name === 'BigNumber') || BN.isBN(h) || isBigInt(h)) {\n    return h.toString(10)\n  }\n  return h\n}\n\nexport const stringify = convertToString\n\nfunction convertToString (v) {\n  try {\n    if (v instanceof Array) {\n      const ret = []\n      for (const k in v) {\n        ret.push(convertToString(v[k]))\n      }\n      return ret\n    } else if (BN.isBN(v) || (v.constructor && v.constructor.name === 'BigNumber') || isBigInt(v)) {\n      return v.toString(10)\n    } else if (v._isBigNumber) {\n      return toInt(v._hex)\n    } else if (v._isBuffer) {\n      return bytesToHex(v)\n    } else if (typeof v === 'object') {\n      const retObject = {}\n      for (const i in v) {\n        retObject[i] = convertToString(v[i])\n      }\n      return retObject\n    } else {\n      return v\n    }\n  } catch (e) {\n    console.log(e)\n    return v\n  }\n}\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { encode, Input } from 'rlp'\nimport { toBytes, setLengthLeft, isHexString } from '@ethereumjs/util'\n\n/**\n * Creates Keccak hash of a Uint8Array input\n * @param a The input data (Uint8Array)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function(a: Uint8Array, bits: number = 256): Uint8Array {\n  switch (bits) {\n  case 224: {\n    return toBytes(keccak224(Buffer.from(a)))\n  }\n  case 256: {\n    return toBytes(k256(Buffer.from(a)))\n  }\n  case 384: {\n    return toBytes(keccak384(Buffer.from(a)))\n  }\n  case 512: {\n    return toBytes(keccak512(Buffer.from(a)))\n  }\n  default: {\n    throw new Error(`Invalid algorithm: keccak${bits}`)\n  }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function(a: Buffer): Uint8Array {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function(a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function(a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(Buffer.from(toBytes(a)), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function(a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(Buffer.from(toBytes(a)), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function(a: any): Buffer {\n  a = toBytes(a)\n  return createHash('sha256')\n    .update(a)\n    .digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function(a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function(a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function(a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function(a: any, padded: boolean): Buffer {\n  a = toBytes(a)\n  const hash = createHash('rmd160')\n    .update(a)\n    .digest()\n  if (padded === true) {\n    return Buffer.from(setLengthLeft(hash, 32))\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function(a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function(a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function(a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function(a: Input): Buffer {\n  return Buffer.from(keccak(Buffer.from(encode(a))))\n}\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function(input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function(input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function(input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function(input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}","export function compilerInput (contracts) {\n  return JSON.stringify({\n    language: 'Solidity',\n    sources: {\n      'test.sol': {\n        content: contracts\n      }\n    },\n    settings: {\n      optimizer: {\n        enabled: false,\n        runs: 200\n      },\n      outputSelection: {\n        '*': {\n          '': ['ast'],\n          '*': ['abi', 'metadata', 'evm.legacyAssembly', 'evm.bytecode', 'evm.deployedBytecode', 'evm.methodIdentifiers', 'evm.gasEstimates']\n        }\n      }\n    }\n  })\n}\n","// Fetched from https://github.com/nomiclabs/hardhat/blob/ee4969a0a8f746f4775d4018326056d161066869/packages/hardhat-core/src/internal/hardhat-network/stack-traces/logger.ts#L47\n\nexport const ConsoleLogs = {\n  // Legacy method signatures before this PR: https://github.com/NomicFoundation/hardhat/pull/2964\n  1368866505: '()',\n  1309416733: '(int)',\n  4122065833: '(uint)',\n  1093685164: '(string)',\n  843419373: '(bool)',\n  741264322: '(address)',\n  199720790: '(bytes)',\n  1847107880: '(bytes1)',\n  3921027734: '(bytes2)',\n  763578662: '(bytes3)',\n  3764340945: '(bytes4)',\n  2793701517: '(bytes5)',\n  2927928721: '(bytes6)',\n  1322614312: '(bytes7)',\n  1334060334: '(bytes8)',\n  2428341456: '(bytes9)',\n  20780939: '(bytes10)',\n  67127854: '(bytes11)',\n  2258660029: '(bytes12)',\n  2488442420: '(bytes13)',\n  2456219775: '(bytes14)',\n  3667227872: '(bytes15)',\n  1717330180: '(bytes16)',\n  866084666: '(bytes17)',\n  3302112666: '(bytes18)',\n  1584093747: '(bytes19)',\n  1367925737: '(bytes20)',\n  3923391840: '(bytes21)',\n  3589990556: '(bytes22)',\n  2879508237: '(bytes23)',\n  4055063348: '(bytes24)',\n  193248344: '(bytes25)',\n  4172368369: '(bytes26)',\n  976705501: '(bytes27)',\n  3358255854: '(bytes28)',\n  1265222613: '(bytes29)',\n  3994207469: '(bytes30)',\n  3263516050: '(bytes31)',\n  666357637: '(bytes32)',\n  1812949376: '(uint,uint)',\n  262402885: '(uint,string)',\n  510514412: '(uint,bool)',\n  1491830284: '(uint,address)',\n  2534451664: '(string,uint)',\n  1264337527: '(string,string)',\n  3283441205: '(string,bool)',\n  832238387: '(string,address)',\n  910912146: '(bool,uint)',\n  2414527781: '(bool,string)',\n  705760899: '(bool,bool)',\n  2235320393: '(bool,address)',\n  574869411: '(address,uint)',\n  1973388987: '(address,string)',\n  1974863315: '(address,bool)',\n  3673216170: '(address,address)',\n  3884059252: '(uint,uint,uint)',\n  2104037094: '(uint,uint,string)',\n  1733758967: '(uint,uint,bool)',\n  3191032091: '(uint,uint,address)',\n  1533929535: '(uint,string,uint)',\n  1062716053: '(uint,string,string)',\n  1185403086: '(uint,string,bool)',\n  529592906: '(uint,string,address)',\n  1515034914: '(uint,bool,uint)',\n  2332955902: '(uint,bool,string)',\n  3587091680: '(uint,bool,bool)',\n  1112473535: '(uint,bool,address)',\n  2286109610: '(uint,address,uint)',\n  3464692859: '(uint,address,string)',\n  2060456590: '(uint,address,bool)',\n  2104993307: '(uint,address,address)',\n  2526862595: '(string,uint,uint)',\n  2750793529: '(string,uint,string)',\n  4043501061: '(string,uint,bool)',\n  3817119609: '(string,uint,address)',\n  4083337817: '(string,string,uint)',\n  753761519: '(string,string,string)',\n  2967534005: '(string,string,bool)',\n  2515337621: '(string,string,address)',\n  689682896: '(string,bool,uint)',\n  3801674877: '(string,bool,string)',\n  2232122070: '(string,bool,bool)',\n  2469116728: '(string,bool,address)',\n  130552343: '(string,address,uint)',\n  3773410639: '(string,address,string)',\n  3374145236: '(string,address,bool)',\n  4243355104: '(string,address,address)',\n  995886048: '(bool,uint,uint)',\n  3359211184: '(bool,uint,string)',\n  464374251: '(bool,uint,bool)',\n  3302110471: '(bool,uint,address)',\n  3224906412: '(bool,string,uint)',\n  2960557183: '(bool,string,string)',\n  3686056519: '(bool,string,bool)',\n  2509355347: '(bool,string,address)',\n  2954061243: '(bool,bool,uint)',\n  626391622: '(bool,bool,string)',\n  1349555864: '(bool,bool,bool)',\n  276362893: '(bool,bool,address)',\n  3950005167: '(bool,address,uint)',\n  3734671984: '(bool,address,string)',\n  415876934: '(bool,address,bool)',\n  3530962535: '(bool,address,address)',\n  2273710942: '(address,uint,uint)',\n  3136907337: '(address,uint,string)',\n  3846889796: '(address,uint,bool)',\n  2548867988: '(address,uint,address)',\n  484110986: '(address,string,uint)',\n  4218888805: '(address,string,string)',\n  3473018801: '(address,string,bool)',\n  4035396840: '(address,string,address)',\n  742821141: '(address,bool,uint)',\n  555898316: '(address,bool,string)',\n  3951234194: '(address,bool,bool)',\n  4044790253: '(address,bool,address)',\n  1815506290: '(address,address,uint)',\n  7426238: '(address,address,string)',\n  4070990470: '(address,address,bool)',\n  25986242: '(address,address,address)',\n  1554033982: '(uint,uint,uint,uint)',\n  2024634892: '(uint,uint,uint,string)',\n  1683143115: '(uint,uint,uint,bool)',\n  3766828905: '(uint,uint,uint,address)',\n  949229117: '(uint,uint,string,uint)',\n  2080582194: '(uint,uint,string,string)',\n  2989403910: '(uint,uint,string,bool)',\n  1127384482: '(uint,uint,string,address)',\n  1818524812: '(uint,uint,bool,uint)',\n  4024028142: '(uint,uint,bool,string)',\n  2495495089: '(uint,uint,bool,bool)',\n  3776410703: '(uint,uint,bool,address)',\n  1628154048: '(uint,uint,address,uint)',\n  3600994782: '(uint,uint,address,string)',\n  2833785006: '(uint,uint,address,bool)',\n  3398671136: '(uint,uint,address,address)',\n  3221501959: '(uint,string,uint,uint)',\n  2730232985: '(uint,string,uint,string)',\n  2270850606: '(uint,string,uint,bool)',\n  2877020669: '(uint,string,uint,address)',\n  1995203422: '(uint,string,string,uint)',\n  1474103825: '(uint,string,string,string)',\n  310782872: '(uint,string,string,bool)',\n  3432549024: '(uint,string,string,address)',\n  2763295359: '(uint,string,bool,uint)',\n  2370346144: '(uint,string,bool,string)',\n  1371286465: '(uint,string,bool,bool)',\n  2037328032: '(uint,string,bool,address)',\n  2565338099: '(uint,string,address,uint)',\n  4170733439: '(uint,string,address,string)',\n  4181720887: '(uint,string,address,bool)',\n  2141537675: '(uint,string,address,address)',\n  1451396516: '(uint,bool,uint,uint)',\n  3906845782: '(uint,bool,uint,string)',\n  3534472445: '(uint,bool,uint,bool)',\n  1329595790: '(uint,bool,uint,address)',\n  2438978344: '(uint,bool,string,uint)',\n  2754870525: '(uint,bool,string,string)',\n  879671495: '(uint,bool,string,bool)',\n  1231956916: '(uint,bool,string,address)',\n  3173363033: '(uint,bool,bool,uint)',\n  831186331: '(uint,bool,bool,string)',\n  1315722005: '(uint,bool,bool,bool)',\n  1392910941: '(uint,bool,bool,address)',\n  1102442299: '(uint,bool,address,uint)',\n  2721084958: '(uint,bool,address,string)',\n  2449150530: '(uint,bool,address,bool)',\n  2263728396: '(uint,bool,address,address)',\n  3399106228: '(uint,address,uint,uint)',\n  1054063912: '(uint,address,uint,string)',\n  435581801: '(uint,address,uint,bool)',\n  4256361684: '(uint,address,uint,address)',\n  2697204968: '(uint,address,string,uint)',\n  2373420580: '(uint,address,string,string)',\n  581204390: '(uint,address,string,bool)',\n  3420819197: '(uint,address,string,address)',\n  2064181483: '(uint,address,bool,uint)',\n  1676730946: '(uint,address,bool,string)',\n  2116501773: '(uint,address,bool,bool)',\n  3056677012: '(uint,address,bool,address)',\n  2587672470: '(uint,address,address,uint)',\n  2034490470: '(uint,address,address,string)',\n  22350596: '(uint,address,address,bool)',\n  1430734329: '(uint,address,address,address)',\n  149837414: '(string,uint,uint,uint)',\n  2773406909: '(string,uint,uint,string)',\n  4147936829: '(string,uint,uint,bool)',\n  3201771711: '(string,uint,uint,address)',\n  2697245221: '(string,uint,string,uint)',\n  1821956834: '(string,uint,string,string)',\n  3919545039: '(string,uint,string,bool)',\n  3144824297: '(string,uint,string,address)',\n  1427009269: '(string,uint,bool,uint)',\n  1993105508: '(string,uint,bool,string)',\n  3816813520: '(string,uint,bool,bool)',\n  3847527825: '(string,uint,bool,address)',\n  1481210622: '(string,uint,address,uint)',\n  844415720: '(string,uint,address,string)',\n  285649143: '(string,uint,address,bool)',\n  3939013249: '(string,uint,address,address)',\n  3587119056: '(string,string,uint,uint)',\n  2366909661: '(string,string,uint,string)',\n  3864418506: '(string,string,uint,bool)',\n  1565476480: '(string,string,uint,address)',\n  2681211381: '(string,string,string,uint)',\n  3731419658: '(string,string,string,string)',\n  739726573: '(string,string,string,bool)',\n  1834430276: '(string,string,string,address)',\n  2256636538: '(string,string,bool,uint)',\n  1585754346: '(string,string,bool,string)',\n  1081628777: '(string,string,bool,bool)',\n  3279013851: '(string,string,bool,address)',\n  1250010474: '(string,string,address,uint)',\n  3944480640: '(string,string,address,string)',\n  1556958775: '(string,string,address,bool)',\n  1134328815: '(string,string,address,address)',\n  1572859960: '(string,bool,uint,uint)',\n  1119461927: '(string,bool,uint,string)',\n  1019590099: '(string,bool,uint,bool)',\n  1909687565: '(string,bool,uint,address)',\n  885731469: '(string,bool,string,uint)',\n  2821114603: '(string,bool,string,string)',\n  1066037277: '(string,bool,string,bool)',\n  3764542249: '(string,bool,string,address)',\n  2155164136: '(string,bool,bool,uint)',\n  2636305885: '(string,bool,bool,string)',\n  2304440517: '(string,bool,bool,bool)',\n  1905304873: '(string,bool,bool,address)',\n  685723286: '(string,bool,address,uint)',\n  764294052: '(string,bool,address,string)',\n  2508990662: '(string,bool,address,bool)',\n  870964509: '(string,bool,address,address)',\n  3668153533: '(string,address,uint,uint)',\n  1280700980: '(string,address,uint,string)',\n  1522647356: '(string,address,uint,bool)',\n  2741431424: '(string,address,uint,address)',\n  2405583849: '(string,address,string,uint)',\n  609847026: '(string,address,string,string)',\n  1595265676: '(string,address,string,bool)',\n  2864486961: '(string,address,string,address)',\n  3318856587: '(string,address,bool,uint)',\n  72663161: '(string,address,bool,string)',\n  2038975531: '(string,address,bool,bool)',\n  573965245: '(string,address,bool,address)',\n  1857524797: '(string,address,address,uint)',\n  2148146279: '(string,address,address,string)',\n  3047013728: '(string,address,address,bool)',\n  3985582326: '(string,address,address,address)',\n  853517604: '(bool,uint,uint,uint)',\n  3657852616: '(bool,uint,uint,string)',\n  2753397214: '(bool,uint,uint,bool)',\n  4049711649: '(bool,uint,uint,address)',\n  1098907931: '(bool,uint,string,uint)',\n  3542771016: '(bool,uint,string,string)',\n  2446522387: '(bool,uint,string,bool)',\n  2781285673: '(bool,uint,string,address)',\n  3554563475: '(bool,uint,bool,uint)',\n  3067439572: '(bool,uint,bool,string)',\n  2650928961: '(bool,uint,bool,bool)',\n  1114097656: '(bool,uint,bool,address)',\n  3399820138: '(bool,uint,address,uint)',\n  403247937: '(bool,uint,address,string)',\n  1705899016: '(bool,uint,address,bool)',\n  2318373034: '(bool,uint,address,address)',\n  2387273838: '(bool,string,uint,uint)',\n  2007084013: '(bool,string,uint,string)',\n  549177775: '(bool,string,uint,bool)',\n  1529002296: '(bool,string,uint,address)',\n  1574643090: '(bool,string,string,uint)',\n  392356650: '(bool,string,string,string)',\n  508266469: '(bool,string,string,bool)',\n  2547225816: '(bool,string,string,address)',\n  2372902053: '(bool,string,bool,uint)',\n  1211958294: '(bool,string,bool,string)',\n  3697185627: '(bool,string,bool,bool)',\n  1401816747: '(bool,string,bool,address)',\n  453743963: '(bool,string,address,uint)',\n  316065672: '(bool,string,address,string)',\n  1842623690: '(bool,string,address,bool)',\n  724244700: '(bool,string,address,address)',\n  1181212302: '(bool,bool,uint,uint)',\n  1348569399: '(bool,bool,uint,string)',\n  2874982852: '(bool,bool,uint,bool)',\n  201299213: '(bool,bool,uint,address)',\n  395003525: '(bool,bool,string,uint)',\n  1830717265: '(bool,bool,string,string)',\n  3092715066: '(bool,bool,string,bool)',\n  4188875657: '(bool,bool,string,address)',\n  3259532109: '(bool,bool,bool,uint)',\n  719587540: '(bool,bool,bool,string)',\n  992632032: '(bool,bool,bool,bool)',\n  2352126746: '(bool,bool,bool,address)',\n  1620281063: '(bool,bool,address,uint)',\n  2695133539: '(bool,bool,address,string)',\n  3231908568: '(bool,bool,address,bool)',\n  4102557348: '(bool,bool,address,address)',\n  2617143996: '(bool,address,uint,uint)',\n  2691192883: '(bool,address,uint,string)',\n  4002252402: '(bool,address,uint,bool)',\n  1760647349: '(bool,address,uint,address)',\n  194640930: '(bool,address,string,uint)',\n  2805734838: '(bool,address,string,string)',\n  3804222987: '(bool,address,string,bool)',\n  1870422078: '(bool,address,string,address)',\n  1287000017: '(bool,address,bool,uint)',\n  1248250676: '(bool,address,bool,string)',\n  1788626827: '(bool,address,bool,bool)',\n  474063670: '(bool,address,bool,address)',\n  1384430956: '(bool,address,address,uint)',\n  3625099623: '(bool,address,address,string)',\n  1180699616: '(bool,address,address,bool)',\n  487903233: '(bool,address,address,address)',\n  1024368100: '(address,uint,uint,uint)',\n  2301889963: '(address,uint,uint,string)',\n  3964381346: '(address,uint,uint,bool)',\n  519451700: '(address,uint,uint,address)',\n  4111650715: '(address,uint,string,uint)',\n  2119616147: '(address,uint,string,string)',\n  2751614737: '(address,uint,string,bool)',\n  3698927108: '(address,uint,string,address)',\n  1770996626: '(address,uint,bool,uint)',\n  2391690869: '(address,uint,bool,string)',\n  4272018778: '(address,uint,bool,bool)',\n  602229106: '(address,uint,bool,address)',\n  2782496616: '(address,uint,address,uint)',\n  1567749022: '(address,uint,address,string)',\n  4051804649: '(address,uint,address,bool)',\n  3961816175: '(address,uint,address,address)',\n  2764647008: '(address,string,uint,uint)',\n  1561552329: '(address,string,uint,string)',\n  2116357467: '(address,string,uint,bool)',\n  3755464715: '(address,string,uint,address)',\n  2706362425: '(address,string,string,uint)',\n  1560462603: '(address,string,string,string)',\n  900007711: '(address,string,string,bool)',\n  2689478535: '(address,string,string,address)',\n  3877655068: '(address,string,bool,uint)',\n  3154862590: '(address,string,bool,string)',\n  1595759775: '(address,string,bool,bool)',\n  542667202: '(address,string,bool,address)',\n  2350461865: '(address,string,address,uint)',\n  4158874181: '(address,string,address,string)',\n  233909110: '(address,string,address,bool)',\n  221706784: '(address,string,address,address)',\n  3255869470: '(address,bool,uint,uint)',\n  2606272204: '(address,bool,uint,string)',\n  2244855215: '(address,bool,uint,bool)',\n  227337758: '(address,bool,uint,address)',\n  2652011374: '(address,bool,string,uint)',\n  1197235251: '(address,bool,string,string)',\n  1353532957: '(address,bool,string,bool)',\n  436029782: '(address,bool,string,address)',\n  3484780374: '(address,bool,bool,uint)',\n  3754205928: '(address,bool,bool,string)',\n  3401856121: '(address,bool,bool,bool)',\n  3476636805: '(address,bool,bool,address)',\n  3698398930: '(address,bool,address,uint)',\n  769095910: '(address,bool,address,string)',\n  2801077007: '(address,bool,address,bool)',\n  1711502813: '(address,bool,address,address)',\n  1425929188: '(address,address,uint,uint)',\n  2647731885: '(address,address,uint,string)',\n  3270936812: '(address,address,uint,bool)',\n  3603321462: '(address,address,uint,address)',\n  69767936: '(address,address,string,uint)',\n  566079269: '(address,address,string,string)',\n  1863997774: '(address,address,string,bool)',\n  2406706454: '(address,address,string,address)',\n  2513854225: '(address,address,bool,uint)',\n  2858762440: '(address,address,bool,string)',\n  752096074: '(address,address,bool,bool)',\n  2669396846: '(address,address,bool,address)',\n  3982404743: '(address,address,address,uint)',\n  4161329696: '(address,address,address,string)',\n  238520724: '(address,address,address,bool)',\n  1717301556: '(address,address,address,address)',\n  4133908826: '(uint,uint)',\n  3054400204: '(string,uint)',\n\n  // Latest method signatures after updating uint to uint256 and int to int256\n\n  760966329: '(int256)',\n  4163653873: '(uint256)',\n  1681903839: '(uint256, string)',\n  480083635: '(uint256, bool)',\n  1764191366: '(uint256, address)',\n  965833939: '(bool, uint256)',\n  2198464680: '(address, uint256)',\n  3522001468: '(uint256, uint256, uint256)',\n  1909476082: '(uint256, uint256, string)',\n  1197922930: '(uint256, uint256, bool)',\n  1553380145: '(uint256, uint256, address)',\n  933920076: '(uint256, string, uint256)',\n  2970968351: '(uint256, string, string)',\n  1290643290: '(uint256, string, bool)',\n  2063255897: '(uint256, string, address)',\n  537493524: '(uint256, bool, uint256)',\n  2239189025: '(uint256, bool, string)',\n  544310864: '(uint256, bool, bool)',\n  889741179: '(uint256, bool, address)',\n  1520131797: '(uint256, address, uint256)',\n  1674265081: '(uint256, address, string)',\n  2607726658: '(uint256, address, bool)',\n  3170737120: '(uint256, address, address)',\n  3393701099: '(string, uint256, uint256)',\n  1500569737: '(string, uint256, string)',\n  3396809649: '(string, uint256, bool)',\n  478069832: '(string, uint256, address)',\n  1478619041: '(string, string, uint256)',\n  3378075862: '(string, bool, uint256)',\n  220641573: '(string, address, uint256)',\n  923808615: '(bool, uint256, uint256)',\n  3288086896: '(bool, uint256, string)',\n  3906927529: '(bool, uint256, bool)',\n  143587794: '(bool, uint256, address)',\n  278130193: '(bool, string, uint256)',\n  317855234: '(bool, bool, uint256)',\n  1601936123: '(bool, address, uint256)',\n  3063663350: '(address, uint256, uint256)',\n  2717051050: '(address, uint256, string)',\n  1736575400: '(address, uint256, bool)',\n  2076235848: '(address, uint256, address)',\n  1742565361: '(address, string, uint256)',\n  2622462459: '(address, bool, uint256)',\n  402547077: '(address, address, uint256)',\n  423606272: '(uint256, uint256, uint256, uint256)',\n  1506790371: '(uint256, uint256, uint256, string)',\n  4202792367: '(uint256, uint256, uint256, address)',\n  1570936811: '(uint256, uint256, string, uint256)',\n  668512210: '(uint256, uint256, string, string)',\n  2062986021: '(uint256, uint256, string, bool)',\n  1121066423: '(uint256, uint256, string, address)',\n  3950997458: '(uint256, uint256, bool, uint256)',\n  2780101785: '(uint256, uint256, bool, string)',\n  2869451494: '(uint256, uint256, bool, bool)',\n  2592172675: '(uint256, uint256, bool, address)',\n  2297881778: '(uint256, uint256, address, uint256)',\n  1826504888: '(uint256, uint256, address, string)',\n  365610102: '(uint256, uint256, address, bool)',\n  1453707697: '(uint256, uint256, address, address)',\n  2193775476: '(uint256, string, uint256, uint256)',\n  3082360010: '(uint256, string, uint256, string)',\n  1763348340: '(uint256, string, uint256, bool)',\n  992115124: '(uint256, string, uint256, address)',\n  2955463101: '(uint256, string, string, uint256)',\n  564987523: '(uint256, string, string, string)',\n  3014047421: '(uint256, string, string, bool)',\n  3582182914: '(uint256, string, string, address)',\n  3472922752: '(uint256, string, bool, uint256)',\n  3537118157: '(uint256, string, bool, string)',\n  3126025628: '(uint256, string, bool, bool)',\n  2922300801: '(uint256, string, bool, address)',\n  3906142605: '(uint256, string, address, uint256)',\n  2621104033: '(uint256, string, address, string)',\n  2428701270: '(uint256, string, address, bool)',\n  1634266465: '(uint256, string, address, address)',\n  3333212072: '(uint256, bool, uint256, uint256)',\n  3724797812: '(uint256, bool, uint256, string)',\n  2443193898: '(uint256, bool, uint256, bool)',\n  2295029825: '(uint256, bool, uint256, address)',\n  740099910: '(uint256, bool, string, uint256)',\n  1757984957: '(uint256, bool, string, string)',\n  3952250239: '(uint256, bool, string, bool)',\n  4015165464: '(uint256, bool, string, address)',\n  1952763427: '(uint256, bool, bool, uint256)',\n  3722155361: '(uint256, bool, bool, string)',\n  3069540257: '(uint256, bool, bool, bool)',\n  1768164185: '(uint256, bool, bool, address)',\n  125994997: '(uint256, bool, address, uint256)',\n  2917159623: '(uint256, bool, address, string)',\n  1162695845: '(uint256, bool, address, bool)',\n  2716814523: '(uint256, bool, address, address)',\n  211605953: '(uint256, address, uint256, uint256)',\n  3719324961: '(uint256, address, uint256, string)',\n  1601452668: '(uint256, address, uint256, bool)',\n  364980149: '(uint256, address, uint256, address)',\n  1182952285: '(uint256, address, string, uint256)',\n  1041403043: '(uint256, address, string, string)',\n  3425872647: '(uint256, address, string, bool)',\n  2629472255: '(uint256, address, string, address)',\n  1522374954: '(uint256, address, bool, uint256)',\n  2432370346: '(uint256, address, bool, string)',\n  3813741583: '(uint256, address, bool, bool)',\n  4017276179: '(uint256, address, bool, address)',\n  1936653238: '(uint256, address, address, uint256)',\n  52195187: '(uint256, address, address, string)',\n  153090805: '(uint256, address, address, bool)',\n  612938772: '(uint256, address, address, address)',\n  2812835923: '(string, uint256, uint256, uint256)',\n  2236298390: '(string, uint256, uint256, string)',\n  1982258066: '(string, uint256, uint256, bool)',\n  3793609336: '(string, uint256, uint256, address)',\n  3330189777: '(string, uint256, string, uint256)',\n  1522028063: '(string, uint256, string, string)',\n  2099530013: '(string, uint256, string, bool)',\n  2084975268: '(string, uint256, string, address)',\n  3827003247: '(string, uint256, bool, uint256)',\n  2885106328: '(string, uint256, bool, string)',\n  894187222: '(string, uint256, bool, bool)',\n  3773389720: '(string, uint256, bool, address)',\n  1325727174: '(string, uint256, address, uint256)',\n  2684039059: '(string, uint256, address, string)',\n  2182163010: '(string, uint256, address, bool)',\n  1587722158: '(string, uint256, address, address)',\n  4099767596: '(string, string, uint256, uint256)',\n  1562023706: '(string, string, uint256, string)',\n  3282609748: '(string, string, uint256, bool)',\n  270792626: '(string, string, uint256, address)',\n  2393878571: '(string, string, string, uint256)',\n  3601791698: '(string, string, bool, uint256)',\n  2093204999: '(string, string, address, uint256)',\n  1689631591: '(string, bool, uint256, uint256)',\n  1949134567: '(string, bool, uint256, string)',\n  2331496330: '(string, bool, uint256, bool)',\n  2472413631: '(string, bool, uint256, address)',\n  620303461: '(string, bool, string, uint256)',\n  2386524329: '(string, bool, bool, uint256)',\n  1560853253: '(string, bool, address, uint256)',\n  4176812830: '(string, address, uint256, uint256)',\n  1514632754: '(string, address, uint256, string)',\n  4232594928: '(string, address, uint256, bool)',\n  1677429701: '(string, address, uint256, address)',\n  2446397742: '(string, address, string, uint256)',\n  1050642026: '(string, address, bool, uint256)',\n  2398352281: '(string, address, address, uint256)',\n  927708338: '(bool, uint256, uint256, uint256)',\n  2389310301: '(bool, uint256, uint256, string)',\n  3197649747: '(bool, uint256, uint256, bool)',\n  14518201: '(bool, uint256, uint256, address)',\n  1779538402: '(bool, uint256, string, uint256)',\n  4122747465: '(bool, uint256, string, string)',\n  3857124139: '(bool, uint256, string, bool)',\n  4275904511: '(bool, uint256, string, address)',\n  2437143473: '(bool, uint256, bool, string)',\n  3468031191: '(bool, uint256, bool, bool)',\n  2597139990: '(bool, uint256, bool, address)',\n  355982471: '(bool, uint256, address, uint256)',\n  464760986: '(bool, uint256, address, string)',\n  3032683775: '(bool, uint256, address, bool)',\n  653615272: '(bool, uint256, address, address)',\n  679886795: '(bool, string, uint256, uint256)',\n  450457062: '(bool, string, uint256, string)',\n  1796103507: '(bool, string, uint256, bool)',\n  362193358: '(bool, string, uint256, address)',\n  2078327787: '(bool, string, string, uint256)',\n  369533843: '(bool, string, bool, uint256)',\n  196087467: '(bool, bool, uint256, uint256)',\n  2111099104: '(bool, bool, uint256, string)',\n  1637764366: '(bool, bool, uint256, bool)',\n  1420274080: '(bool, bool, uint256, address)',\n  3819555375: '(bool, bool, string, uint256)',\n  1836074433: '(bool, bool, bool, uint256)',\n  1276263767: '(bool, bool, address, uint256)',\n  2079424929: '(bool, address, uint256, uint256)',\n  1374724088: '(bool, address, uint256, string)',\n  3590430492: '(bool, address, uint256, bool)',\n  325780957: '(bool, address, uint256, address)',\n  3256837319: '(bool, address, string, uint256)',\n  126031106: '(bool, address, bool, uint256)',\n  208064958: '(bool, address, address, uint256)',\n  888202806: '(address, uint256, uint256, uint256)',\n  1244184599: '(address, uint256, uint256, string)',\n  1727118439: '(address, uint256, uint256, bool)',\n  551786573: '(address, uint256, uint256, address)',\n  3204577425: '(address, uint256, string, uint256)',\n  2292761606: '(address, uint256, string, string)',\n  3474460764: '(address, uint256, string, bool)',\n  1547898183: '(address, uint256, string, address)',\n  586594713: '(address, uint256, bool, uint256)',\n  3316483577: '(address, uint256, bool, string)',\n  1005970743: '(address, uint256, bool, bool)',\n  2736520652: '(address, uint256, bool, address)',\n  269444366: '(address, uint256, address, uint256)',\n  497649386: '(address, uint256, address, string)',\n  2713504179: '(address, uint256, address, bool)',\n  1200430178: '(address, uint256, address, address)',\n  499704248: '(address, string, uint256, uint256)',\n  1149776040: '(address, string, uint256, string)',\n  251125840: '(address, string, uint256, bool)',\n  1662531192: '(address, string, uint256, address)',\n  362776871: '(address, string, string, uint256)',\n  1365129398: '(address, string, bool, uint256)',\n  1166009295: '(address, string, address, uint256)',\n  946861556: '(address, bool, uint256, uint256)',\n  178704301: '(address, bool, uint256, string)',\n  3294903840: '(address, bool, uint256, bool)',\n  3438776481: '(address, bool, uint256, address)',\n  2162598411: '(address, bool, string, uint256)',\n  2353946086: '(address, bool, bool, uint256)',\n  2807847390: '(address, bool, address, uint256)',\n  3193255041: '(address, address, uint256, uint256)',\n  4256496016: '(address, address, uint256, string)',\n  2604815586: '(address, address, uint256, bool)',\n  2376523509: '(address, address, uint256, address)',\n  4011651047: '(address, address, string, uint256)',\n  963766156: '(address, address, bool, uint256)',\n  2485456247: '(address, address, address, uint256)',\n}\n","'use strict'\nimport { bytesToHex } from '@ethereumjs/util'\nimport { isHexString } from 'ethjs-util'\nimport { BN } from 'bn.js'\nimport { isBigInt } from 'web3-validator'\n\nfunction convertToPrefixedHex (input) {\n  if (input === undefined || input === null || isHexString(input)) {\n    return input\n  }\n  if ((input.constructor && input.constructor.name === 'BigNumber')\n      || BN.isBN(input)\n      || isBigInt(input)\n      || typeof input === 'number') {\n    return '0x' + input.toString(16)\n  }\n\n  try {\n    return bytesToHex(input)\n  } catch (e) {\n    console.log(e)\n  }\n\n  try {\n    // BigNumber\n    return '0x' + input.toString(16)\n  } catch (e) {\n    console.log(e)\n  }\n\n  return input\n}\n\n/*\n txResult.result can be 3 different things:\n - VM call or tx: ethereumjs-vm result object\n - Node transaction: object returned from eth.getTransactionReceipt()\n - Node call: return value from function call (not an object)\n\n Also, VM results use BN and Buffers, Node results use hex strings/ints,\n So we need to normalize the values to prefixed hex strings\n*/\nexport function resultToRemixTx (txResult, execResult?) {\n  const { receipt, transactionHash, result } = txResult\n  const { status, gasUsed, contractAddress } = receipt\n  let returnValue, errorMessage\n\n  if (isHexString(result)) {\n    returnValue = result\n  } else if (execResult !== undefined) {\n    returnValue = execResult.returnValue\n    errorMessage = execResult.exceptionError\n  }\n\n  return {\n    transactionHash,\n    status: convertToPrefixedHex(status),\n    gasUsed: convertToPrefixedHex(gasUsed),\n    error: errorMessage,\n    return: returnValue ? convertToPrefixedHex(returnValue) : undefined,\n    createdAddress: convertToPrefixedHex(contractAddress)\n  }\n}\n","'use strict'\nexport function formatMemory (mem, width) {\n  const ret = {}\n  if (!mem) {\n    return ret\n  }\n\n  if (!mem.substr) {\n    mem = mem.join('') // geth returns an array, eth return raw string\n  }\n\n  for (let k = 0; k < mem.length; k += (width * 2)) {\n    const memory = mem.substr(k, width * 2)\n    const content = tryConvertAsciiFormat(memory)\n    ret['0x' + (k / 2).toString(16)] = content.raw + '\\t' + content.ascii\n  }\n  return ret\n}\n\nexport function tryConvertAsciiFormat (memorySlot) {\n  const ret = { ascii: '', raw: '' }\n  for (let k = 0; k < memorySlot.length; k += 2) {\n    const raw = memorySlot.substr(k, 2)\n    let ascii = String.fromCharCode(parseInt(raw, 16))\n    ascii = ascii.replace(/[^\\w\\s]/, '?')\n    if (ascii === '') {\n      ascii = '?'\n    }\n    ret.ascii += ascii\n    ret.raw += raw\n  }\n  return ret\n}\n\n/**\n * format @args css1, css2, css3 to css inline style\n *\n * @param {Object} css1 - css inline declaration\n * @param {Object} css2 - css inline declaration\n * @param {Object} css3 - css inline declaration\n * @param {Object} ...\n * @return {String} css inline style\n *                  if the key start with * the value is directly appended to the inline style (which should be already inline style formatted)\n *                  used if multiple occurrences of the same key is needed\n */\nexport function formatCss (css1, css2) {\n  let ret = ''\n  for (const arg in arguments) { // eslint-disable-line\n    for (const k in arguments[arg]) { // eslint-disable-line\n      if (arguments[arg][k] && ret.indexOf(k) === -1) { // eslint-disable-line\n        if (k.indexOf('*') === 0) {\n          ret += arguments[arg][k] // eslint-disable-line\n        } else {\n          ret += k + ':' + arguments[arg][k] + ';' // eslint-disable-line\n        }\n      }\n    }\n  }\n  return ret\n}\n\nexport function normalizeHex (hex) {\n  if (hex.indexOf('0x') === 0) {\n    hex = hex.replace('0x', '')\n  }\n  hex = hex.replace(/^0+/, '')\n  return '0x' + hex\n}\n\nexport function normalizeHexAddress (hex) {\n  if (hex.indexOf('0x') === 0) hex = hex.replace('0x', '')\n  if (hex.length >= 40) {\n    const reg = /(.{40})$/.exec(hex)\n    if (reg) {\n      return '0x' + reg[0]\n    }\n  } else {\n    return '0x' + (new Array(40 - hex.length + 1).join('0')) + hex\n  }\n}\n\nexport function runInBrowser () {\n  return typeof window !== 'undefined'\n}\n","import { EventManager } from './eventManager'\nimport * as uiHelper from './helpers/uiHelper'\nimport * as compilerHelper from './helpers/compilerHelper'\nimport * as util from './util'\nimport * as hash from './hash'\nimport { Storage } from './storage'\nimport { EventsDecoder } from './execution/eventsDecoder'\nimport * as txExecution from './execution/txExecution'\nimport * as txHelper from './execution/txHelper'\nimport * as txFormat from './execution/txFormat'\nimport { TxListener } from './execution/txListener'\nimport { TxRunner } from './execution/txRunner'\nimport { LogsManager } from './execution/logsManager'\nimport { forkAt } from './execution/forkAt'\nimport * as typeConversion from './execution/typeConversion'\nimport { TxRunnerVM } from './execution/txRunnerVM'\nimport { TxRunnerWeb3 } from './execution/txRunnerWeb3'\nimport * as txResultHelper from './helpers/txResultHelper'\nexport { ConsoleLogs } from './helpers/hhconsoleSigs'\nexport { ICompilerApi, ConfigurationSettings, iSolJsonBinData, iSolJsonBinDataBuild } from './types/ICompilerApi'\nexport { QueryParams } from './query-params'\nexport { VMexecutionResult } from './execution/txRunnerVM'\nexport { Registry } from './registry'\n\nconst helpers = {\n  ui: uiHelper,\n  compiler: compilerHelper,\n  txResultHelper\n}\nconst execution = {\n  EventsDecoder: EventsDecoder,\n  txExecution: txExecution,\n  txHelper: txHelper,\n  txFormat: txFormat,\n  txListener: TxListener,\n  TxRunner: TxRunner,\n  TxRunnerWeb3: TxRunnerWeb3,\n  TxRunnerVM: TxRunnerVM,\n  typeConversion: typeConversion,\n  LogsManager,\n  forkAt\n}\nexport { EventManager, helpers, Storage, util, execution, hash }\n","'use strict'\n\nexport class QueryParams {\n\n  update (params) {\n    const currentParams = this.get()\n    const keys = Object.keys(params)\n    for (const x in keys) {\n      currentParams[keys[x]] = params[keys[x]]\n    }\n    let queryString = '#'\n    const updatedKeys = Object.keys(currentParams)\n    for (const y in updatedKeys) {\n      queryString += updatedKeys[y] + '=' + currentParams[updatedKeys[y]] + '&'\n    }\n    window.location.hash = queryString.slice(0, -1)\n  }\n\n  get () {\n    const qs = window.location.hash.substr(1)\n\n    if (window.location.search.length > 0) {\n      // use legacy query params instead of hash\n      window.location.hash = window.location.search.substr(1)\n      window.location.search = ''\n    }\n\n    const params = {}\n    const parts = qs.split('&')\n    for (const x in parts) {\n      const keyValue = parts[x].split('=')\n      if (keyValue[0] !== '') {\n        params[keyValue[0]] = keyValue[1]\n      }\n    }\n    return params\n  }\n}\n","type registryEntry = {\n    api: any,\n    name: string\n}\n\nexport class Registry {\n  private static instance: Registry;\n  private state: any\n\n  private constructor () {\n    this.state = {}\n  }\n\n  public static getInstance (): Registry {\n    if (!Registry.instance) {\n      Registry.instance = new Registry()\n    }\n\n    return Registry.instance\n  }\n\n  public put (entry: registryEntry) {\n    if (this.state[entry.name]) return this.state[entry.name]\n    const server = {\n      // uid: serveruid,\n      api: entry.api\n    }\n    this.state[entry.name] = { server }\n    return server\n  }\n\n  public get (name: string): registryEntry {\n    const state = this.state[name]\n    if (!state) return\n    const server = state.server\n    return server\n  }\n}\n","'use strict'\n\nexport class Storage {\n  prefix\n\n  constructor (prefix) {\n    this.prefix = prefix\n\n    // on startup, upgrade the old storage layout\n    if (typeof window !== 'undefined') {\n      this.safeKeys().forEach(function (name) {\n        if (name.indexOf('sol-cache-file-', 0) === 0) {\n          const content = window.localStorage.getItem(name)\n          window.localStorage.setItem(name.replace(/^sol-cache-file-/, 'sol:'), content)\n          window.localStorage.removeItem(name)\n        }\n      })\n    }\n\n    // remove obsolete key\n    if (typeof window !== 'undefined') {\n      window.localStorage.removeItem('editor-size-cache')\n    }\n  }\n\n  exists (name) {\n    if (typeof window !== 'undefined') {\n      return this.get(name) !== null\n    }\n  }\n\n  get (name) {\n    if (typeof window !== 'undefined') {\n      return window.localStorage.getItem(this.prefix + name)\n    }\n  }\n\n  set (name, content) {\n    try {\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(this.prefix + name, content)\n      }\n    } catch (exception) {\n      return false\n    }\n    return true\n  }\n\n  remove (name) {\n    if (typeof window !== 'undefined') {\n      window.localStorage.removeItem(this.prefix + name)\n    }\n    return true\n  }\n\n  rename (originalName, newName) {\n    const content = this.get(originalName)\n    if (!this.set(newName, content)) {\n      return false\n    }\n    this.remove(originalName)\n    return true\n  }\n\n  safeKeys () {\n    // NOTE: this is a workaround for some browsers\n    if (typeof window !== 'undefined') {\n      return Object.keys(window.localStorage).filter(function (item) { return item !== null && item !== undefined })\n    }\n    return []\n  }\n\n  keys () {\n    return this.safeKeys()\n      // filter any names not including the prefix\n      .filter(item => item.indexOf(this.prefix, 0) === 0)\n      // remove prefix from filename and add the 'browser' path\n      .map(item => item.substr(this.prefix.length))\n  }\n}\n","'use strict'\nimport { hash } from '@remix-project/remix-lib'\nimport { bytesToHex, setLengthLeft, toBytes, addHexPrefix } from '@ethereumjs/util'\nimport stringSimilarity from 'string-similarity'\nimport { BN } from 'bn.js'\nimport { isBigInt } from 'web3-validator'\n\n/*\n contains misc util: @TODO should be split\n  - hex conversion\n  - binary search\n  - CALL related look up\n  - sha3 calculation\n  - swarm hash extraction\n  - bytecode comparison\n*/\n/*\n    ints: IntArray\n  */\n\n/**\n   * Converts a hex string to an array of integers.\n   */\nexport function hexToIntArray (hexString) {\n  if (hexString.slice(0, 2) === '0x') {\n    hexString = hexString.slice(2)\n  }\n  const integers = []\n  for (let i = 0; i < hexString.length; i += 2) {\n    integers.push(parseInt(hexString.slice(i, i + 2), 16))\n  }\n  return integers\n}\n\n/*\n    ints: list of BNs\n  */\nexport function hexListFromBNs (bnList) {\n  const ret = []\n  for (const k in bnList) {\n    const v = bnList[k].toString(16)\n    ret.push('0x' + v.padStart(64, '0'))\n  }\n  return ret\n}\n\nexport function toHexPaddedString(v: bigint | string): string {\n  if (v) {\n    if (typeof v === 'string') {\n      return v.startsWith('0x') ? v : '0x' + v\n    } else {\n      return '0x' + v.toString(16).padStart(64, '0')\n    }\n  }\n  else\n    return '0x' + '0'.padStart(64, '0')\n}\n\n/*\n  ints: ints: IntArray\n*/\nexport function formatMemory (mem) {\n  const hexMem = bytesToHex(mem).substr(2)\n  const ret = []\n  for (let k = 0; k < hexMem.length; k += 32) {\n    const row = hexMem.substr(k, 32)\n    ret.push(row)\n  }\n  return ret\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return largest i such that array[i] <= target; return -1 if array[0] > target || array is empty\n*/\nexport function findLowerBound (target, array) {\n  let start = 0\n  let length = array.length\n  while (length > 0) {\n    const half = length >> 1\n    const middle = start + half\n    if (array[middle] <= target) {\n      length = length - 1 - half\n      start = middle + 1\n    } else {\n      length = half\n    }\n  }\n  return start - 1\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return largest array[i] such that array[i] <= target; return null if array[0] > target || array is empty\n*/\nexport function findLowerBoundValue (target, array) {\n  const index = findLowerBound(target, array)\n  return index >= 0 ? array[index] : null\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return Return i such that |array[i] - target| is smallest among all i and -1 for an empty array.\n  Returns the smallest i for multiple candidates.\n*/\nexport function findClosestIndex (target, array): number {\n  if (array.length === 0) {\n    return -1\n  }\n  const index = findLowerBound(target, array)\n  if (index < 0) {\n    return 0\n  } else if (index >= array.length - 1) {\n    return array.length - 1\n  } else {\n    const middle = (array[index] + array[index + 1]) / 2\n    return target <= middle ? index : index + 1\n  }\n}\n\n/**\n  * Find the call from @args rootCall which contains @args index (recursive)\n  *\n  * @param {Int} index - index of the vmtrace\n  * @param {Object} rootCall  - call tree, built by the trace analyser\n  * @return {Object} - return the call which include the @args index\n  */\nexport function findCall (index, rootCall) {\n  const ret = buildCallPath(index, rootCall)\n  return ret[ret.length - 1]\n}\n\n/**\n  * Find calls path from @args rootCall which leads to @args index (recursive)\n  *\n  * @param {Int} index - index of the vmtrace\n  * @param {Object} rootCall  - call tree, built by the trace analyser\n  * @return {Array} - return the calls path to @args index\n  */\nexport function buildCallPath (index, rootCall) {\n  const ret = []\n  findCallInternal(index, rootCall, ret)\n  return ret\n}\n\n/**\n  * sha3 the given @arg value (left pad to 32 bytes)\n  *\n  * @param {String} value - value to sha3\n  * @return {Object} - return sha3ied value\n  */\n// eslint-disable-next-line camelcase\nexport function sha3_256 (value) {\n  if ((value.constructor && value.constructor.name === 'BigNumber') || BN.isBN(value) || isBigInt(value)) {\n    value = value.toString(16)\n  }\n  if (typeof value === 'number') {\n    value = value.toString(16)\n  }\n  value = toBytes(addHexPrefix(value))\n  const retInBuffer: Uint8Array = hash.keccak(Buffer.from(setLengthLeft(value, 32)))\n  return bytesToHex(retInBuffer)\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode.\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtraction () {\n  return /a165627a7a72305820([0-9a-f]{64})0029$/\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode, from POC 0.3\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtractionPOC31 () {\n  return /a265627a7a72315820([0-9a-f]{64})64736f6c6343([0-9a-f]{6})0032$/\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode, from POC 0.3\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtractionPOC32 () {\n  return /a265627a7a72305820([0-9a-f]{64})64736f6c6343([0-9a-f]{6})0032$/\n}\n\n/**\n  * return a regex which extract the cbor encoded metadata : {\"ipfs\": <IPFS hash>, \"solc\": <compiler version>} from the bytecode.\n  * ref https://solidity.readthedocs.io/en/v0.6.6/metadata.html?highlight=ipfs#encoding-of-the-metadata-hash-in-the-bytecode\n  * @return {RegEx}\n  */\nexport function cborEncodedValueExtraction () {\n  return /64697066735822([0-9a-f]{68})64736f6c6343([0-9a-f]{6})0033$/\n}\n\n/**\n  * return a regex which extract the input parameters from the bytecode\n  *\n  * @return {RegEx}\n  */\nexport function inputParametersExtraction () {\n  return /64697066735822[0-9a-f]{68}64736f6c6343[0-9a-f]{6}0033(.*)$/\n}\n\nexport function extractcborMetadata (value) {\n  const cbor = value.match(cborEncodedValueExtraction())\n  if (cbor && cbor[0]) value = value.replace(cbor[0], '')\n  return value\n}\n\nexport function extractSwarmHash (value) {\n  value = value.replace(swarmHashExtraction(), '')\n  value = value.replace(swarmHashExtractionPOC31(), '')\n  value = value.replace(swarmHashExtractionPOC32(), '')\n  return value\n}\n\nexport function extractinputParameters (value) {\n  const inputsParam = getinputParameters(value)\n  if (inputsParam) value = value.replace(inputsParam, '')\n  return value\n}\n\nexport function getinputParameters (value) {\n  const regex = value.match(inputParametersExtraction())\n  if (regex && regex[1]) {\n    return regex[1]\n  } else\n    return ''\n}\n\n/**\n  * Compare bytecode. return true if the code is equal (handle swarm hash and library references)\n  * @param {String} code1 - the bytecode that is actually deployed (contains resolved library reference and a potentially different swarmhash)\n  * @param {String} code2 - the bytecode generated by the compiler (contains unresolved library reference and a potentially different swarmhash)\n                            this will return false if the generated bytecode is empty (abstract contract cannot be deployed)\n  *\n  * @return {bool}\n  */\nexport function compareByteCode (code1, code2) {\n  if (code1 === code2) return true\n  if (code2 === '0x') return false // abstract contract. see comment\n  if (code1 === '0x00' || code2 === '0x00' && code1 !== code2) return false // // This can be removed some time once YUL returns correct bytecode\n\n  if (code2.substr(2, 46) === '7300000000000000000000000000000000000000003014') {\n    // testing the following signature: PUSH20 00..00 ADDRESS EQ\n    // in the context of a library, that slot contains the address of the library (pushed by the compiler to avoid calling library other than with a DELEGATECALL)\n    // if code2 is not a library, well we still suppose that the comparison remain relevant even if we remove some information from `code1`\n    code1 = replaceLibReference(code1, 4)\n  }\n  let pos = -1\n  while ((pos = code2.search(/__(.*)__/)) !== -1) {\n    code2 = replaceLibReference(code2, pos)\n    code1 = replaceLibReference(code1, pos)\n  }\n\n  code1 = removeImmutableReference(code1, code2)\n  code1 = extractinputParameters(code1)\n  code1 = extractSwarmHash(code1)\n  code1 = extractcborMetadata(code1)\n  code2 = extractinputParameters(code2)\n  code2 = extractSwarmHash(code2)\n  code2 = extractcborMetadata(code2)\n\n  if (code1 && code2) {\n    if (code1.length !== code2.length) {\n      // if the length isn't the same, we have an issue with extracting the metadata hash.\n      const minLength = code1.length > code2.length ? code2.length: code1.length\n      code1 = code1.substr(0, minLength - 10)\n      code2 = code2.substr(0, minLength - 10)\n    }\n    const compare = stringSimilarity.compareTwoStrings(code1, code2)\n    return compare == 1\n  }\n\n  return false\n}\n/* util extracted out from remix-ide. @TODO split this file, cause it mix real util fn with solidity related stuff ... */\nexport function groupBy (arr, key) {\n  return arr.reduce((sum, item) => {\n    const groupByVal = item[key]\n    const groupedItems = sum[groupByVal] || []\n    groupedItems.push(item)\n    sum[groupByVal] = groupedItems\n    return sum\n  }, {})\n}\n\nexport function concatWithSeparator (list, separator) {\n  return list.reduce((sum, item) => sum + item + separator, '').slice(0, -separator.length)\n}\n\nexport function escapeRegExp (str) {\n  return str.replace(/[-[\\]/{}()+?.\\\\^$|]/g, '\\\\$&')\n}\n\nfunction replaceLibReference (code, pos) {\n  return code.substring(0, pos) + '0000000000000000000000000000000000000000' + code.substring(pos + 40)\n}\n\nfunction removeByIndex (code, index, length, emptyRef) {\n  if (!code) return code\n  return code.slice(0, index) + emptyRef + code.slice(index + length)\n}\n\nfunction removeImmutableReference (code1, code2) {\n  try {\n    const refOccurrence = code2.match(/7f0000000000000000000000000000000000000000000000000000000000000000/g)\n    if (!refOccurrence) return code1\n    let offset = 0\n    refOccurrence.map((value) => {\n      offset = code2.indexOf(value, offset)\n      code1 = removeByIndex(code1, offset, value.length, '7f0000000000000000000000000000000000000000000000000000000000000000')\n      offset = offset + 1\n    })\n  } catch (e) {\n    console.log('error removeImmutableReference', e)\n  }\n  return code1\n}\n\nfunction findCallInternal (index, rootCall, callsPath) {\n  const calls = Object.keys(rootCall.calls)\n  const ret = rootCall\n  callsPath.push(rootCall)\n  for (const k in calls) {\n    const subCall = rootCall.calls[calls[k]]\n    if (index >= subCall.start && index <= subCall.return) {\n      findCallInternal(index, subCall, callsPath)\n      break\n    }\n  }\n  return ret\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [\"default-node_modules_https-browserify_index_js-node_modules_path-browserify_index_js\",\"default-libs_remix-simulator_src_index_ts\",\"default-node_modules_nrwl_js_node_modules_babel_runtime_helpers_interopRequireDefault_js-node-da9996\",\"vendors-node_modules_babel_runtime_regenerator_index_js-node_modules_ethereumjs_block_dist_cj-67200f\"], () => (__webpack_require__(58689)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".0.52.0-dev.1720620484381.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_blockchain_providers_worker-vm_ts-libs_remix-lib_src_util_ts\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\"default-node_modules_https-browserify_index_js-node_modules_path-browserify_index_js\",\"default-libs_remix-simulator_src_index_ts\",\"default-node_modules_nrwl_js_node_modules_babel_runtime_helpers_interopRequireDefault_js-node-da9996\",\"vendors-node_modules_babel_runtime_regenerator_index_js-node_modules_ethereumjs_block_dist_cj-67200f\"].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":["provider","self","onmessage","e","data","cmd","Provider","fork","nodeUrl","blockNumber","stateDb","blocks","init","then","postMessage","stamp","error","sendAsync","query","result","Accounts","_addAccount","privateKey","balance","newAccount","address","EventManager","registered","anonymous","eventName","obj","func","Function","reg","toString","splice","push","args","listener","l","apply","EventsDecoder","resolveReceipt","tx","contractName","compiledContracts","cb","isCall","decoded","raw","receipt","_decodeLogs","contract","contracts","logs","_decodeEvents","eventABI","abi","ethers","utils","Interface","events","event","getEvent","getEventTopic","replace","name","inputs","object","eventsABI","visitContracts","_eventABI","hash","k","input","type","baseType","value","_isBigNumber","undefined","_ethersType","Array","isArray","map","item","_stringifyEvent","_stringifyBigNumber","_eventsABI","i","log","topicId","topics","eventAbis","_event","eventAbi","decodedlog","parseLog","v","from","topic","forkAt","networkId","forks","currentForkName","number","LogsManager","notificationCallbacks","subscriptions","filters","filterTracking","oldLogs","block","web3","eachOf","transactions","next","txHash","bytesToHex","eth","getTransactionReceipt","_error","txNumber","getSubscriptionsFor","subscriptionId","logIndex","blockHash","transactionHash","transactionIndex","response","jsonrpc","method","params","subscription","transmit","_err","changeEvent","queryType","queryFilter","filter","logTopic","indexOf","length","fromBlock","parseInt","toBlock","Number","MAX_VALUE","targetAddress","toChecksumAddress","matchedSubscriptions","Object","keys","subscriptionParams","eventMatchesFilter","_queryType","getLogsFor","forEach","callback","_type","randomBytes","filterType","filterId","logsOnly","tracking","x","results","createContract","gasLimit","txRunner","callbacks","finalCallback","confirmationCb","gasEstimationForceSend","promptCb","to","useCall","rawRun","txResult","callFunction","funAbi","stateMutability","constant","checkError","execResult","errorCode","OUT_OF_GAS","STACK_UNDERFLOW","STACK_OVERFLOW","INVALID_JUMP","INVALID_OPCODE","REVERT","STATIC_STATE_CHANGE","INTERNAL_ERROR","CREATE_COLLISION","STOP","REFUND_EXHAUSTED","ret","message","errorMessage","exceptionError","msg","includes","returnData","errorData","returnDataHex","slice","customError","decodedCustomErrorInputsClean","file","fn","getFunctionFragment","sign","getSighash","functionDesc","getFunction","decodedCustomErrorInputs","decodeFunctionData","devdoc","functions","functionSignature","errors","console","userdoc","notice","inputIndex","inputKey","documentation","JSON","stringify","abiCoder","AbiCoder","reason","decode","encodeData","funABI","values","contractbyteCode","encoded","encodedHex","encodeParamsHelper","encodeFunctionId","encodeParams","Promise","resolve","reject","dataHex","funArgs","Buffer","parseFunctionParams","encodeFunctionCall","encodedParam","encodeConstructorCallAndLinkLibraries","linkLibrariesAddresses","linkReferences","linkLibraries","bytecodeToDeploy","contractBytecode","evm","bytecode","libFile","lib","isValidAddress","linkLibraryStandardFromlinkReferences","encodeConstructorCallAndDeployLibraries","callbackStep","callbackDeployLibrary","linkBytecode","err","buildData","isConstructor","atAddress","linkBytecodeStandard","eachOfSeries","libs","cbFile","libRef","libName","cbLibDeployed","library","deployLibrary","hexAddress","linkLibraryStandard","linkBytecodeLegacy","libraryRefMatch","match","libraryName","libraryShortName","linkLibrary","contractABI","contractAddress","setLibraryAddress","bytecodeToLink","positions","pos","regpos","RegExp","start","linkBytecodeSolc","addHexPrefix","decodeResponse","fnabi","outputs","outputTypes","makeFullTypeDefinition","Uint8Array","decodedObj","json","startIndex","isArrayOrStringStart","charAt","endQuoteIndex","j","normalizeParam","substring","Error","bracketCount","param","trim","startsWith","test","regSci","REGEX_SCIENTIFIC","exec","exponents","REGEX_DECIMAL","paramTrimmed","fromExponential","str","index","typeDef","components","innerTypes","innerType","join","extractSize","types","encode","sortAbiFunction","contractabi","isConstant","sort","a","b","localeCompare","getConstructorInterface","payable","parse","serializeInputs","fnAbi","serialized","size","getFunctionLiner","detailTuple","fullType","fnName","getFallbackInterface","getReceiveInterface","getContract","inputParametersDeclarationToString","abiinputs","inp","addExecutionCosts","returnValue","executionGasUsed","executionCost","gasUsed","transactionCost","TxListener","opt","executionContext","_api","api","_resolvedTransactions","_resolvedContracts","_isListening","_listenOnNetwork","_loopId","register","context","stopListening","startListening","udapp","lookupOnly","isVM","remix","getExecutionResultFromSimulator","toBytes","call","envMode","getProvider","_resolveTx","resolvedData","trigger","getTransaction","status","_resolve","listenOnNetwork","clearInterval","_startListenOnNetwork","lastSeenBlock","lastBlock","BigInt","processingBlock","processBlocks","currentLoopId","current","_manageBlock","setInterval","getBlock","_newBlock","assign","_resolveAsync","fun","code","_tryResolveContract","_resolveFunction","creationAddress","getCode","isCtor","inputData","methodIdentifiers","_decodeInputParams","decodedReturnValue","getinputParameters","codeToResolve","isCreation","found","bytes","deployedBytecode","compareByteCode","inputTypes","TxRunner","internalRunner","pendingTxs","queusTxs","run","timestamp","Date","now","execute","pop","TxRunnerVM","vmaccounts","getVMObject","logsManager","commonContext","common","nextNonceForCall","vm","Block","fromRLPSerializedBlock","blockParentHash","blockchain","genesisBlock","serialize","runInVm","account","stateManager","getAccount","Address","fromString","res","EIP1559","hardfork","LegacyTransaction","fromTxData","nonce","gasPrice","hexToBytes","FeeMarketEIP1559Transaction","maxPriorityFeePerGas","maxFeePerGas","coinbases","difficulties","difficulty","consensusType","ConsensusType","ProofOfStake","fromBlockData","header","getTime","coinbase","baseFeePerGas","parentHash","standaloneTx","getStateRoot","root","runBlockInVm","setStateRoot","putBlock","runTx","skipNonce","skipBlockValidation","skipBalance","runBlock","generate","TxRunnerWeb3","getWeb3","currentblockGasLimit","network","txFee","toHex","toWei","maxPriorityFee","maxFee","currentDateTime","resp","listenOnResponse","tryTillReceiptAvailable","tryTillTxAvailable","end","txData","personalMode","personal","sendTransaction","checkRevertBeforeSending","ignoreGasPricing","runInNode","confirmCb","registerCallId","detectNetwork","errNetWork","txCopy","Math","ceil","toBigInt","estimateGas","gasEstimation","config","getUnpersistedProperty","_executeTx","defaultGasLimit","txhash","pause","setTimeout","toInt","h","BN","constructor","isBN","isBigInt","convertToString","_hex","_isBuffer","retObject","createHash","require","keccak","bits","keccak224","k256","keccak384","keccak512","keccak256","keccakFromString","assertIsString","buf","keccakFromHexString","assertIsHexString","keccakFromArray","assertIsArray","_sha256","update","digest","sha256","assertIsBuffer","sha256FromString","sha256FromArray","_ripemd160","padded","setLengthLeft","ripemd160","ripemd160FromString","ripemd160FromArray","rlphash","isHexString","isBuffer","compilerInput","language","sources","content","settings","optimizer","enabled","runs","outputSelection","ConsoleLogs","convertToPrefixedHex","resultToRemixTx","createdAddress","formatMemory","mem","width","substr","memory","tryConvertAsciiFormat","ascii","memorySlot","String","fromCharCode","formatCss","css1","css2","arg","arguments","normalizeHex","hex","normalizeHexAddress","runInBrowser","window","helpers","ui","uiHelper","compiler","compilerHelper","txResultHelper","execution","txExecution","txHelper","txFormat","txListener","typeConversion","QueryParams","currentParams","get","queryString","updatedKeys","y","location","qs","search","parts","split","keyValue","Registry","state","entry","server","instance","Storage","prefix","safeKeys","localStorage","getItem","setItem","removeItem","exception","originalName","newName","set","remove","hexToIntArray","hexString","integers","hexListFromBNs","bnList","padStart","toHexPaddedString","hexMem","row","findLowerBound","target","array","half","middle","findLowerBoundValue","findClosestIndex","findCall","rootCall","buildCallPath","findCallInternal","sha3_256","retInBuffer","swarmHashExtraction","swarmHashExtractionPOC31","swarmHashExtractionPOC32","cborEncodedValueExtraction","inputParametersExtraction","extractcborMetadata","cbor","extractSwarmHash","extractinputParameters","inputsParam","regex","code1","code2","replaceLibReference","removeImmutableReference","minLength","compare","stringSimilarity","compareTwoStrings","groupBy","arr","key","reduce","sum","groupByVal","groupedItems","concatWithSeparator","list","separator","escapeRegExp","removeByIndex","emptyRef","refOccurrence","offset","callsPath","calls","subCall"],"sourceRoot":""}