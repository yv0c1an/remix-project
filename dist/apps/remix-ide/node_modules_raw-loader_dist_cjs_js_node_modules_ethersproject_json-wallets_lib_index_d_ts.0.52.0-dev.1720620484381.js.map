{"version":3,"file":"node_modules_raw-loader_dist_cjs_js_node_modules_ethersproject_json-wallets_lib_index_d_ts.0.52.0-dev.1720620484381.js","mappings":";;;;;;;;;;AAAA,iEAAe,UAAU,QAAQ,8BAA8B,WAAW,yBAAyB,wCAAwC,WAAW,8BAA8B,qBAAqB,WAAW,4DAA4D,mBAAmB,WAAW,+HAA+H,oBAAoB,mJAAmJ,yGAAyG,WAAW,kNAAkN,sCAAsC","sources":["webpack:///../../node_modules/@ethersproject/json-wallets/lib/index.d.ts"],"sourcesContent":["export default \"import { Bytes } from \\\"@ethersproject/bytes\\\";\\nimport { ExternallyOwnedAccount } from \\\"@ethersproject/abstract-signer\\\";\\nimport { decrypt as decryptCrowdsale } from \\\"./crowdsale\\\";\\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \\\"./inspect\\\";\\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \\\"./keystore\\\";\\ndeclare function decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount>;\\ndeclare function decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount;\\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, ProgressCallback, EncryptOptions, };\\n//# sourceMappingURL=index.d.ts.map\";"],"names":[],"sourceRoot":""}