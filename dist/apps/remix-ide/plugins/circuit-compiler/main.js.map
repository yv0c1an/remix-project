{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/actions/index.ts","webpack:///./src/app/app.tsx","webpack:///./src/app/components/actions.tsx","webpack:///./src/app/components/compileBtn.tsx","webpack:///./src/app/components/configToggler.tsx","webpack:///./src/app/components/configurations.tsx","webpack:///./src/app/components/container.tsx","webpack:///./src/app/components/feedback.tsx","webpack:///./src/app/components/feedbackAlert.tsx","webpack:///./src/app/components/options.tsx","webpack:///./src/app/components/r1csBtn.tsx","webpack:///./src/app/components/versions.tsx","webpack:///./src/app/components/witness.tsx","webpack:///./src/app/components/witnessToggler.tsx","webpack:///./src/app/contexts/index.ts","webpack:///./src/app/reducers/state.ts","webpack:///./src/app/services/circomPluginClient.ts","webpack:///./src/main.tsx","webpack:///../../libs/remix-lib/src/eventManager.ts","webpack:///../../libs/remix-lib/src/execution/eventsDecoder.ts","webpack:///../../libs/remix-lib/src/execution/forkAt.ts","webpack:///../../libs/remix-lib/src/execution/logsManager.ts","webpack:///../../libs/remix-lib/src/execution/txExecution.ts","webpack:///../../libs/remix-lib/src/execution/txFormat.ts","webpack:///../../libs/remix-lib/src/execution/txHelper.ts","webpack:///../../libs/remix-lib/src/execution/txListener.ts","webpack:///../../libs/remix-lib/src/execution/txRunner.ts","webpack:///../../libs/remix-lib/src/execution/txRunnerVM.ts","webpack:///../../libs/remix-lib/src/execution/txRunnerWeb3.ts","webpack:///../../libs/remix-lib/src/execution/typeConversion.ts","webpack:///../../libs/remix-lib/src/hash.ts","webpack:///../../libs/remix-lib/src/helpers/compilerHelper.ts","webpack:///../../libs/remix-lib/src/helpers/hhconsoleSigs.ts","webpack:///../../libs/remix-lib/src/helpers/txResultHelper.ts","webpack:///../../libs/remix-lib/src/helpers/uiHelper.ts","webpack:///../../libs/remix-lib/src/index.ts","webpack:///../../libs/remix-lib/src/query-params.ts","webpack:///../../libs/remix-lib/src/registry.ts","webpack:///../../libs/remix-lib/src/storage.ts","webpack:///../../libs/remix-lib/src/types/ICompilerApi.ts","webpack:///../../libs/remix-lib/src/util.ts","webpack:///../../libs/remix-ui/clipboard/src/index.ts","webpack:///../../libs/remix-ui/clipboard/src/lib/copy-to-clipboard/copy-to-clipboard.tsx","webpack:///../../libs/remix-ui/helper/src/index.ts","webpack:///../../libs/remix-ui/helper/src/lib/bleach.ts","webpack:///../../libs/remix-ui/helper/src/lib/components/PluginViewWrapper.tsx","webpack:///../../libs/remix-ui/helper/src/lib/components/custom-dropdown.tsx","webpack:///../../libs/remix-ui/helper/src/lib/components/custom-tooltip.tsx","webpack:///../../libs/remix-ui/helper/src/lib/helper-components.tsx","webpack:///../../libs/remix-ui/helper/src/lib/remix-ui-helper.ts","webpack:///../../libs/remix-ui/clipboard/src/lib/copy-to-clipboard/copy-to-clipboard.css?b97f","webpack:///ignored|/workspaces/remix-project/node_modules/@ethereumjs/trie/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/@ethereumjs/trie/node_modules/readable-stream/lib|util","webpack:///ignored|/workspaces/remix-project/node_modules/@ethersproject/bignumber/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/asn1.js/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/brorand|crypto","webpack:///ignored|/workspaces/remix-project/node_modules/browserify-sign/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/browserify-sign/node_modules/readable-stream/lib|util","webpack:///ignored|/workspaces/remix-project/node_modules/create-ecdh/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/diffie-hellman/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/hash-base/node_modules/readable-stream/lib|util","webpack:///ignored|/workspaces/remix-project/node_modules/keccak/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/keccak/node_modules/readable-stream/lib|util","webpack:///ignored|/workspaces/remix-project/node_modules/miller-rabin/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/public-encrypt/node_modules/bn.js/lib|buffer","webpack:///ignored|/workspaces/remix-project/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/workspaces/remix-project/node_modules/stream-browserify/node_modules/readable-stream/lib|util"],"sourcesContent":["import type { CircomPluginClient } from \"../services/circomPluginClient\"\nimport { Actions, AppState } from \"../types\"\n\nexport const compileCircuit = async (plugin: CircomPluginClient, appState: AppState) => {\n  try {\n    if (appState.status !== \"compiling\") {\n      await plugin.compile(appState.filePath, { version: appState.version, prime: appState.primeValue })\n    } else {\n      console.log('Existing circuit compilation in progress')\n    }\n  } catch (e) {\n    plugin.internalEvents.emit('circuit_compiling_errored', e)\n    console.error(e)\n  }\n}\n\nexport const generateR1cs = async (plugin: CircomPluginClient, appState: AppState) => {\n  try {\n    if (appState.status !== \"generating\") {\n      await plugin.generateR1cs(appState.filePath, { version: appState.version, prime: appState.primeValue })\n    } else {\n      console.log('Existing r1cs generation in progress')\n    }\n  } catch (e) {\n    plugin.internalEvents.emit('circuit_generating_r1cs_errored', e)\n    console.error('Generating R1CS failed: ', e)\n  }\n}\n\nexport const computeWitness = async (plugin: CircomPluginClient, status: string, witnessValues: Record<string, string>) => {\n  try {\n    if (status !== \"computing\") {\n      const input = JSON.stringify(witnessValues)\n\n      await plugin.computeWitness(input)\n    } else {\n      console.log('Existing witness computation in progress')\n    }\n  } catch (e) {\n    plugin.internalEvents.emit('circuit_computing_witness_errored', e)\n    console.error('Computing witness failed: ', e)\n  }\n}\n","import React, {useEffect, useReducer, useState} from 'react'\nimport {RenderIf} from '@remix-ui/helper'\nimport {IntlProvider} from 'react-intl'\n\nimport { Container } from './components/container'\nimport {CircuitAppContext} from './contexts'\nimport {appInitialState, appReducer} from './reducers/state'\nimport {CircomPluginClient} from './services/circomPluginClient'\nimport { compileCircuit } from './actions'\n\nconst plugin = new CircomPluginClient()\n\nfunction App() {\n  const [appState, dispatch] = useReducer(appReducer, appInitialState)\n  const [locale, setLocale] = useState<{code: string; messages: any}>({\n    code: 'en',\n    messages: null\n  })\n  const [isContentChanged, setIsContentChanged] = useState<boolean>(false)\n  const [isPluginActivated, setIsPluginActivated] = useState<boolean>(false)\n\n  useEffect(() => {\n    plugin.internalEvents.on('circom_activated', () => {\n      // @ts-ignore\n      plugin.on('locale', 'localeChanged', (locale: any) => {\n        setLocale(locale)\n      })\n      plugin.on('fileManager', 'currentFileChanged', (filePath) => {\n        if (filePath.endsWith('.circom')) {\n          dispatch({ type: 'SET_FILE_PATH', payload: filePath })\n          plugin.parse(filePath)\n        }\n      })\n      // @ts-ignore\n      plugin.on('editor', 'contentChanged', async (path: string, content: string) => {\n        setIsContentChanged(true)\n        if (path.endsWith('.circom')) {\n          plugin.parse(path, content)\n        }\n      })\n      setIsPluginActivated(true)\n    })\n\n    // compiling events\n    plugin.internalEvents.on('circuit_compiling_start', () => dispatch({ type: 'SET_COMPILER_STATUS', payload: 'compiling' }))\n    plugin.internalEvents.on('circuit_compiling_done', (signalInputs: string[]) => {\n      signalInputs = (signalInputs || []).filter(input => input)\n      dispatch({ type: 'SET_SIGNAL_INPUTS', payload: signalInputs })\n      dispatch({ type: 'SET_COMPILER_STATUS', payload: 'idle' })\n    })\n    plugin.internalEvents.on('circuit_compiling_errored', compilerErrored)\n\n    // r1cs events\n    plugin.internalEvents.on('circuit_generating_r1cs_start', () => dispatch({ type: 'SET_COMPILER_STATUS', payload: 'generating' }))\n    plugin.internalEvents.on('circuit_generating_r1cs_done', () => dispatch({ type: 'SET_COMPILER_STATUS', payload: 'idle' }))\n    plugin.internalEvents.on('circuit_generating_r1cs_errored', compilerErrored)\n\n    // witness events\n    plugin.internalEvents.on('circuit_computing_witness_start', () => dispatch({ type: 'SET_COMPILER_STATUS', payload: 'computing' }))\n    plugin.internalEvents.on('circuit_computing_witness_done', () => {\n      dispatch({ type: 'SET_COMPILER_STATUS', payload: 'idle' })\n      dispatch({ type: 'SET_COMPILER_FEEDBACK', payload: null })\n    })\n    plugin.internalEvents.on('circuit_computing_witness_errored', compilerErrored)\n\n    // parsing events\n    plugin.internalEvents.on('circuit_parsing_done', (_, filePathToId) => {\n      dispatch({ type: 'SET_FILE_PATH_TO_ID', payload: filePathToId })\n      dispatch({ type: 'SET_COMPILER_FEEDBACK', payload: null })\n    })\n    plugin.internalEvents.on('circuit_parsing_errored', (report, filePathToId) => {\n      dispatch({ type: 'SET_FILE_PATH_TO_ID', payload: filePathToId })\n      dispatch({ type: 'SET_COMPILER_STATUS', payload: 'errored' })\n      dispatch({ type: 'SET_COMPILER_FEEDBACK', payload: report })\n    })\n    plugin.internalEvents.on('circuit_parsing_warning', (report, filePathToId) => {\n      dispatch({ type: 'SET_FILE_PATH_TO_ID', payload: filePathToId })\n      dispatch({ type: 'SET_COMPILER_STATUS', payload: 'warning' })\n      dispatch({ type: 'SET_COMPILER_FEEDBACK', payload: report })\n    })\n  }, [])\n\n  useEffect(() => {\n    if (isContentChanged) {\n      (async () => {\n        if (appState.autoCompile) await compileCircuit(plugin, appState)\n      })()\n      setIsContentChanged(false)\n    }\n  }, [appState.autoCompile, isContentChanged])\n\n  useEffect(() => {\n    if (isPluginActivated) {\n      setCurrentLocale()\n    }\n  }, [isPluginActivated])\n\n  useEffect(() => {\n    if (appState.filePath) {\n      (async () => {\n        if (appState.autoCompile) await compileCircuit(plugin, appState)\n      })()\n      dispatch({ type: 'SET_SIGNAL_INPUTS', payload: [] })\n      dispatch({ type: 'SET_COMPILER_STATUS', payload: 'idle' })\n      dispatch({ type: 'SET_COMPILER_FEEDBACK', payload: null })\n    }\n  }, [appState.filePath])\n\n  const setCurrentLocale = async () => {\n    // @ts-ignore\n    const currentLocale = await plugin.call('locale', 'currentLocale')\n\n    setLocale(currentLocale)\n  }\n\n  const compilerErrored = (err: ErrorEvent) => {\n    dispatch({ type: 'SET_COMPILER_STATUS', payload: 'errored' })\n    try {\n      const report = JSON.parse(err.message)\n\n      dispatch({ type: 'SET_COMPILER_FEEDBACK', payload: report })\n    } catch (e) {\n      dispatch({ type: 'SET_COMPILER_FEEDBACK', payload: err.message })\n    }\n  }\n\n  const value = {\n    appState,\n    dispatch,\n    plugin\n  }\n\n  return (\n    <div className=\"circuit_compiler_app\">\n      <RenderIf condition={locale.messages}>\n        <IntlProvider locale={locale.code} messages={locale.messages}>\n          <CircuitAppContext.Provider value={value}>\n            <Container />\n          </CircuitAppContext.Provider>\n        </IntlProvider>\n      </RenderIf>\n    </div>\n  )\n}\n\nexport default App\n","import { CompileBtn } from \"./compileBtn\";\nimport { R1CSBtn } from \"./r1csBtn\";\n\nexport function CircuitActions () {\n  return (\n    <div className=\"pb-3\">\n      <CompileBtn />\n      <R1CSBtn />\n    </div>\n  )\n}","import { CustomTooltip, RenderIf, RenderIfNot, extractNameFromKey } from \"@remix-ui/helper\";\nimport { useContext } from \"react\";\nimport { CircuitAppContext } from \"../contexts\";\nimport { FormattedMessage } from \"react-intl\";\nimport { compileCircuit } from \"../actions\";\n\nexport function CompileBtn () {\n  const { plugin, appState } = useContext(CircuitAppContext)\n\n  return (\n    <CustomTooltip\n      placement=\"auto\"\n      tooltipId=\"overlay-tooltip-compile\"\n      tooltipText={\n        <div className=\"text-left\">\n          <div>\n            <b>Ctrl+S</b> to compile {appState.filePath}\n          </div>\n        </div>\n      }\n    >\n      <button\n        className=\"btn btn-primary btn-block d-block w-100 text-break mb-1 mt-3\"\n        onClick={() => { compileCircuit(plugin, appState) }}\n        disabled={(appState.filePath === \"\") || (appState.status === \"compiling\") || (appState.status === \"generating\")}\n        data-id=\"compile_circuit_btn\"\n      >\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <RenderIf condition={appState.status === 'compiling'}>\n            <i className=\"fas fa-sync fa-spin mr-2\" aria-hidden=\"true\"></i>\n          </RenderIf>\n          <RenderIfNot condition={appState.status === 'compiling'}>\n            <i className=\"fas fa-sync mr-2\" aria-hidden=\"true\"></i>\n          </RenderIfNot>\n          <div className=\"text-truncate overflow-hidden text-nowrap\">\n            <span>\n              <FormattedMessage id=\"circuit.compile\" />\n            </span>\n            <span className=\"ml-1 text-nowrap\">\n              <RenderIf condition={appState.filePath === \"\"}>\n                <FormattedMessage id=\"circuit.noFileSelected\" />\n              </RenderIf>\n              <RenderIfNot condition={appState.filePath === \"\"}>\n                <>{extractNameFromKey(appState.filePath)}</>\n              </RenderIfNot>\n            </span>\n          </div>\n        </div>\n      </button>\n    </CustomTooltip>\n  )\n}","import { useState } from \"react\"\nimport { FormattedMessage } from \"react-intl\"\nimport { RenderIf, RenderIfNot } from \"@remix-ui/helper\"\n\nexport function ConfigToggler ({ children }: { children: JSX.Element }) {\n  const [toggleExpander, setToggleExpander] = useState<boolean>(false)\n\n  const toggleConfigurations = () => {\n    setToggleExpander(!toggleExpander)\n  }\n\n  return (\n    <div>\n      <div className=\"d-flex circuit_config_section justify-content-between\" onClick={toggleConfigurations}>\n        <div className=\"d-flex\">\n          <label className=\"mt-1 circuit_config_section\">\n            <FormattedMessage id=\"circuit.advancedConfigurations\" />\n          </label>\n        </div>\n        <div>\n          <span data-id=\"scConfigExpander\" onClick={toggleConfigurations}>\n            <RenderIf condition={toggleExpander}>\n              <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n            </RenderIf>\n            <RenderIfNot condition={toggleExpander}>\n              <i className=\"fas fa-angle-right\" aria-hidden=\"true\"></i>\n            </RenderIfNot>\n          </span>\n        </div>\n      </div>\n      <RenderIf condition={toggleExpander}>\n        { children }\n      </RenderIf>\n    </div>\n  )\n}","import { CustomTooltip, RenderIf } from \"@remix-ui/helper\"\nimport { FormattedMessage } from \"react-intl\"\nimport { ConfigurationsProps, PrimeValue } from \"../types\"\n\nexport function Configurations ({primeValue, setPrimeValue, versionValue}: ConfigurationsProps) {\n  return (\n    <div className=\"pb-2 border-bottom flex-column\">\n      <div className=\"flex-column d-flex\">\n        <div className=\"mb-2 ml-0\">\n          <label className=\"circuit_inner_label form-check-label\" htmlFor=\"circuitPrimeSelector\">\n            <FormattedMessage id=\"circuit.prime\" />\n          </label>\n          <CustomTooltip\n            placement={\"auto\"}\n            tooltipId=\"circuitPrimeLabelTooltip\"\n            tooltipClasses=\"text-nowrap\"\n            tooltipText={<span>{'To choose the prime number to use to generate the circuit. Receives the name of the curve (bn128, bls12381, goldilocks, grumpkin, pallas, vesta)'}</span>}\n          >\n            <div>\n              <select\n                onChange={(e) => setPrimeValue(e.target.value as PrimeValue)}\n                value={primeValue}\n                className=\"custom-select\"\n                style={{\n                  pointerEvents: 'auto'\n                }}\n              >\n                <RenderIf condition={versionValue === '2.1.5'}>\n                  <>\n                    <option value=\"bn128\">bn128</option>\n                    <option value=\"bls12381\">bls12381</option>\n                    <option value=\"goldilocks\">goldilocks</option>\n                  </>\n                </RenderIf>\n                <RenderIf condition={versionValue === '2.1.6'}>\n                  <>\n                    <option value=\"bn128\">bn128</option>\n                    <option value=\"bls12381\">bls12381</option>\n                    <option value=\"goldilocks\">goldilocks</option>\n                    <option value=\"grumpkin\">grumpkin</option>\n                    <option value=\"pallas\">pallas</option>\n                    <option value=\"vesta\">vesta</option>\n                  </>\n                </RenderIf>\n                <RenderIf condition={versionValue === '2.1.7'}>\n                  <>\n                    <option value=\"bn128\">bn128</option>\n                    <option value=\"bls12381\">bls12381</option>\n                    <option value=\"goldilocks\">goldilocks</option>\n                    <option value=\"grumpkin\">grumpkin</option>\n                    <option value=\"pallas\">pallas</option>\n                    <option value=\"vesta\">vesta</option>\n                  </>\n                </RenderIf>\n                <RenderIf condition={versionValue === '2.1.8'}>\n                  <>\n                    <option value=\"bn128\">bn128</option>\n                    <option value=\"bls12381\">bls12381</option>\n                    <option value=\"goldilocks\">goldilocks</option>\n                    <option value=\"grumpkin\">grumpkin</option>\n                    <option value=\"pallas\">pallas</option>\n                    <option value=\"vesta\">vesta</option>\n                    <option value=\"secq256r1\">secq256r1</option>\n                  </>\n                </RenderIf>\n              </select>\n            </div>\n          </CustomTooltip>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useContext } from 'react'\nimport { CustomTooltip, RenderIf } from '@remix-ui/helper'\nimport {FormattedMessage} from 'react-intl'\nimport { CircuitAppContext } from '../contexts'\nimport { CompileOptions } from './options'\nimport { VersionList } from './versions'\nimport { ConfigToggler } from './configToggler'\nimport { Configurations } from './configurations'\nimport { CircuitActions } from './actions'\nimport { WitnessToggler } from './witnessToggler'\nimport { WitnessSection } from './witness'\nimport { CompilerFeedback } from './feedback'\nimport { CompilerReport, PrimeValue } from '../types'\n\nexport function Container () {\n  const circuitApp = useContext(CircuitAppContext)\n\n  const showCompilerLicense = async (message = 'License not available') => {\n    try {\n      const response = await fetch('https://raw.githubusercontent.com/iden3/circom/master/COPYING')\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`)\n      const content = await response.text()\n      // @ts-ignore\n      circuitApp.plugin.call('notification', 'modal', { id: 'modal_circuit_compiler_license', title: 'Compiler License', message: content })\n    } catch (e) {\n      // @ts-ignore\n      circuitApp.plugin.call('notification', 'modal', { id: 'modal_circuit_compiler_license', title: 'Compiler License', message })\n    }\n  }\n\n  const handleVersionSelect = (version: string) => {\n    circuitApp.plugin.compilerVersion = version\n    circuitApp.dispatch({ type: 'SET_COMPILER_VERSION', payload: version })\n  }\n\n  const handleOpenErrorLocation = async (location: string, startRange: string) => {\n    if (location) {\n      const fullPathLocation = await circuitApp.plugin.resolveReportPath(location)\n\n      await circuitApp.plugin.call('fileManager', 'open', fullPathLocation)\n      // @ts-ignore\n      const startPosition: { lineNumber: number; column: number } = await circuitApp.plugin.call('editor', 'getPositionAt', startRange)\n      // @ts-ignore\n      await circuitApp.plugin.call('editor', 'gotoLine', startPosition.lineNumber - 1, startPosition.column)\n    }\n  }\n\n  const handlePrimeChange = (value: PrimeValue) => {\n    circuitApp.plugin.compilerPrime = value\n    circuitApp.dispatch({ type: 'SET_PRIME_VALUE', payload: value as PrimeValue })\n  }\n\n  const handleCircuitAutoCompile = (value: boolean) => {\n    circuitApp.dispatch({ type: 'SET_AUTO_COMPILE', payload: value })\n  }\n\n  const handleCircuitHideWarnings = (value: boolean) => {\n    circuitApp.dispatch({ type: 'SET_HIDE_WARNINGS', payload: value })\n  }\n\n  const askGPT = async (report: CompilerReport) => {\n    if (report.labels.length > 0) {\n      const location = circuitApp.appState.filePathToId[report.labels[0].file_id]\n      const error = report.labels[0].message\n\n      if (location) {\n        const fullPathLocation = await circuitApp.plugin.resolveReportPath(location)\n        const content = await circuitApp.plugin.call('fileManager', 'readFile', fullPathLocation)\n        const message = `\n          circom code: ${content}\n          error message: ${error}\n          full circom error: ${JSON.stringify(report, null, 2)}\n          explain why the error occurred and how to fix it.\n          `\n        // @ts-ignore\n        await circuitApp.plugin.call('solcoder', 'error_explaining', message)\n      } else {\n        const message = `\n          error message: ${error}\n          full circom error: ${JSON.stringify(report, null, 2)}\n          explain why the error occurred and how to fix it.\n          `\n        // @ts-ignore\n        await circuitApp.plugin.call('solcoder', 'error_explaining', message)\n      }\n    } else {\n      const error = report.message\n      const message = `\n      error message: ${error}\n      full circom error: ${JSON.stringify(report, null, 2)}\n      explain why the error occurred and how to fix it.\n      `\n      // @ts-ignore\n      await circuitApp.plugin.call('solcoder', 'error_explaining', message)\n    }\n  }\n\n  return (\n    <section>\n      <article>\n        <div className=\"pt-0 circuit_section\">\n          <div className=\"mb-1\">\n            <label className=\"circuit_label form-check-label\">\n              <FormattedMessage id=\"circuit.compiler\" />\n            </label>\n            <CustomTooltip\n              placement=\"bottom\"\n              tooltipId=\"showCircumCompilerTooltip\"\n              tooltipClasses=\"text-nowrap\"\n              tooltipText='See compiler license'\n            >\n              <span className=\"far fa-file-certificate border-0 p-0 ml-2\" onClick={() => showCompilerLicense()}></span>\n            </CustomTooltip>\n            <VersionList setVersion={handleVersionSelect} versionList={circuitApp.appState.versionList} currentVersion={circuitApp.appState.version} />\n            <CompileOptions setCircuitAutoCompile={handleCircuitAutoCompile} setCircuitHideWarnings={handleCircuitHideWarnings} autoCompile={circuitApp.appState.autoCompile} hideWarnings={circuitApp.appState.hideWarnings} />\n            <ConfigToggler>\n              <Configurations setPrimeValue={handlePrimeChange} primeValue={circuitApp.appState.primeValue} versionValue={circuitApp.appState.version} />\n            </ConfigToggler>\n            <CircuitActions />\n            <RenderIf condition={circuitApp.appState.signalInputs.length > 0}>\n              <WitnessToggler>\n                <WitnessSection plugin={circuitApp.plugin} signalInputs={circuitApp.appState.signalInputs} status={circuitApp.appState.status} />\n              </WitnessToggler>\n            </RenderIf>\n            <RenderIf condition={(circuitApp.appState.status !== 'compiling') && (circuitApp.appState.status !== 'computing') && (circuitApp.appState.status !== 'generating')}>\n              <CompilerFeedback feedback={circuitApp.appState.feedback} filePathToId={circuitApp.appState.filePathToId} openErrorLocation={handleOpenErrorLocation} hideWarnings={circuitApp.appState.hideWarnings} askGPT={askGPT} />\n            </RenderIf>\n          </div>\n        </div>\n      </article>\n    </section>\n  )\n}","import { useState } from 'react'\nimport { CompilerFeedbackProps, CompilerReport } from '../types'\nimport { RenderIf } from '@remix-ui/helper'\nimport {CopyToClipboard} from '@remix-ui/clipboard'\nimport { FeedbackAlert } from './feedbackAlert'\n\nexport function CompilerFeedback ({ feedback, filePathToId, hideWarnings, openErrorLocation, askGPT }: CompilerFeedbackProps) {\n  const [ showException, setShowException ] = useState<boolean>(true)\n\n  const handleCloseException = () => {\n    setShowException(false)\n  }\n\n  const handleOpenError = (report: CompilerReport) => {\n    if (report.labels.length > 0) {\n      openErrorLocation(filePathToId[report.labels[0].file_id], report.labels[0].range.start)\n    }\n  }\n\n  const handleAskGPT = (report: CompilerReport) => {\n    askGPT(report)\n  }\n\n  return (\n    <div>\n      <div className=\"circuit_errors_box py-4\">\n        <RenderIf condition={ (typeof feedback === \"string\") && showException }>\n          <div className=\"circuit_feedback error alert alert-danger\" data-id=\"circuit_feedback\">\n            <span> <>{ feedback }</> </span>\n            <div className=\"close\" data-id=\"renderer\" onClick={handleCloseException}>\n              <i className=\"fas fa-times\"></i>\n            </div>\n            <div className=\"d-flex pt-1 flex-row-reverse\">\n              <span className=\"ml-3 pt-1 py-1\" >\n                <CopyToClipboard content={feedback} className=\"p-0 m-0 far fa-copy error\" direction={'top'} />\n              </span>\n            </div>\n          </div>\n        </RenderIf>\n        <RenderIf condition={ Array.isArray(feedback) }>\n          <>\n            {\n              Array.isArray(feedback) && feedback.map((response, index) => (\n                <div key={index} onClick={() => handleOpenError(response)}>\n                  <RenderIf condition={response.type === 'Error'}>\n                    <div className={`circuit_feedback ${response.type.toLowerCase()} alert alert-danger`} data-id=\"circuit_feedback\">\n                      <FeedbackAlert\n                        message={response.message + (response.labels[0] ? \": \" + response.labels[0].message + ` ${filePathToId[response.labels[0].file_id]}:${response.labels[0].range.start}:${response.labels[0].range.end}` : '')}\n                        askGPT={ () => handleAskGPT(response) } />\n                    </div>\n                  </RenderIf>\n                  <RenderIf condition={(response.type === 'Warning') && !hideWarnings}>\n                    <div className={`circuit_feedback ${response.type.toLowerCase()} alert alert-warning`} data-id=\"circuit_feedback\">\n                      <FeedbackAlert\n                        message={response.message}\n                        askGPT={() => { handleAskGPT(response) }} />\n                    </div>\n                  </RenderIf>\n                </div>\n              )\n              )\n            }\n          </>\n        </RenderIf>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { FeedbackAlertProps } from '../types'\nimport { RenderIf } from '@remix-ui/helper'\nimport {CopyToClipboard} from '@remix-ui/clipboard'\n\nexport function FeedbackAlert ({ message, askGPT }: FeedbackAlertProps) {\n  const [ showAlert, setShowAlert] = useState<boolean>(true)\n\n  const handleCloseAlert = () => {\n    setShowAlert(false)\n  }\n\n  return (\n    <RenderIf condition={showAlert}>\n      <>\n        <span> { message } </span>\n        <div className=\"close\" data-id=\"renderer\" onClick={handleCloseAlert}>\n          <i className=\"fas fa-times\"></i>\n        </div>\n        <div className=\"d-flex pt-1 flex-row-reverse\">\n          <span className=\"ml-3 pt-1 py-1\" >\n            <CopyToClipboard content={message} className=\"p-0 m-0 far fa-copy error\" direction={'top'} />\n          </span>\n          <span className=\"border border-success text-success btn-sm\" onClick={(e) => {\n            e.stopPropagation()\n            askGPT()\n          }}>Ask RemixAI</span>\n        </div>\n      </>\n    </RenderIf>\n  )\n}\n","import {FormattedMessage} from 'react-intl'\nimport { CompileOptionsProps } from '../types'\n\nexport function CompileOptions ({autoCompile, hideWarnings, setCircuitAutoCompile, setCircuitHideWarnings}: CompileOptionsProps) {\n\n  return (\n    <div className='pb-2'>\n      <div className=\"mt-2 custom-control custom-checkbox\">\n        <input\n          className=\"custom-control-input\"\n          type=\"checkbox\"\n          onChange={(e) => setCircuitAutoCompile(e.target.checked)}\n          title=\"Auto compile\"\n          checked={autoCompile}\n          id=\"autoCompileCircuit\"\n        />\n        <label className=\"form-check-label custom-control-label\" htmlFor=\"autoCompileCircuit\" data-id=\"auto_compile_circuit_checkbox_input\">\n          <FormattedMessage id=\"circuit.autoCompile\" />\n        </label>\n      </div>\n      <div className=\"mt-1 mb-2 circuit_warnings_box custom-control custom-checkbox\">\n        <input\n          className=\"custom-control-input\"\n          onChange={(e) => setCircuitHideWarnings(e.target.checked)}\n          id=\"hideCircuitWarnings\"\n          type=\"checkbox\"\n          title=\"Hide warnings\"\n          checked={hideWarnings}\n        />\n        <label className=\"form-check-label custom-control-label\" htmlFor=\"hideCircuitWarnings\" data-id=\"hide_circuit_warnings_checkbox_input\">\n          <FormattedMessage id=\"solidity.hideWarnings\" />\n        </label>\n      </div>\n    </div>\n  )\n}","import { CustomTooltip, RenderIf, RenderIfNot } from \"@remix-ui/helper\";\nimport { useContext } from \"react\";\nimport { CircuitAppContext } from \"../contexts\";\nimport { FormattedMessage } from \"react-intl\";\nimport { generateR1cs } from \"../actions\";\n\nexport function R1CSBtn () {\n  const { plugin, appState } = useContext(CircuitAppContext)\n\n  return (\n    <button\n      className=\"btn btn-secondary btn-block d-block w-100 text-break mb-1 mt-2\"\n      onClick={() => { generateR1cs(plugin, appState) }}\n      disabled={(appState.filePath === \"\") || (appState.status === \"compiling\") || (appState.status === \"generating\") || (appState.status === \"computing\")}\n      data-id=\"generate_r1cs_btn\"\n    >\n      <CustomTooltip\n        placement=\"auto\"\n        tooltipId=\"overlay-tooltip-compile\"\n        tooltipText={\n          <div className=\"text-left\">\n            <div>\n              Outputs the constraints in r1cs format\n            </div>\n          </div>\n        }\n      >\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <RenderIf condition={appState.status === 'generating'}>\n            <i className=\"fas fa-sync fa-spin mr-2\" aria-hidden=\"true\"></i>\n          </RenderIf>\n          <RenderIfNot condition={appState.status === 'generating'}>\n            <i className=\"fas fa-sync mr-2\" aria-hidden=\"true\"></i>\n          </RenderIfNot>\n          <div className=\"text-truncate overflow-hidden text-nowrap\">\n            <span>\n              <FormattedMessage id=\"circuit.generateR1cs\" />\n            </span>\n          </div>\n        </div>\n      </CustomTooltip>\n    </button>\n  )\n}","import { RenderIf } from \"@remix-ui/helper\";\nimport { AppState } from \"../types\";\n\nexport function VersionList ({ currentVersion, versionList, setVersion }: { versionList: AppState['versionList'], currentVersion: string, setVersion: (version: string) => void }) {\n  const versionListKeys = Object.keys(versionList)\n  \n  return (\n    <select\n      value={currentVersion}\n      onChange={(e) => setVersion(e.target.value)}\n      className=\"custom-select\"\n    >\n      <RenderIf condition={versionListKeys.length > 0}>\n        <>\n          {\n            versionListKeys.map((version, index) => (\n              <option value={version} key={index}>\n                { versionList[version].name }\n              </option>\n            ))\n          }\n        </>\n      </RenderIf>\n    </select>\n  )\n}\n","import { RenderIf, RenderIfNot } from \"@remix-ui/helper\";\nimport { FormattedMessage } from \"react-intl\";\nimport { CompilerStatus } from \"../types\";\nimport { computeWitness } from \"../actions\";\nimport { useState } from \"react\";\nimport type { CircomPluginClient } from \"../services/circomPluginClient\";\nimport * as remixLib from '@remix-project/remix-lib'\n\nexport function WitnessSection ({ plugin, signalInputs, status }: {plugin: CircomPluginClient, signalInputs: string[], status: CompilerStatus}) {\n  const [witnessValues, setWitnessValues] = useState<Record<string, string>>({})\n\n  const handleSignalInput = (e: any) => {\n    let value = e.target.value\n\n    if (value.startsWith('[') && value.endsWith(']')) {\n      try {\n        value = remixLib.execution.txFormat.parseFunctionParams(value)\n      } catch (e) {\n      // do nothing\n      }\n    } else if (value.startsWith('[') && !value.endsWith(']')) {\n      // do nothing\n    } else {\n      try {\n        value = remixLib.execution.txFormat.parseFunctionParams(value)\n      } catch (e) {\n      // do nothing\n      }\n    }\n    setWitnessValues({\n      ...witnessValues,\n      [e.target.name]: value[0]\n    })\n  }\n\n  return (\n    <div className=\"pb-2 border-bottom flex-column\">\n      <div className=\"flex-column d-flex\">\n        <RenderIf condition={signalInputs.length > 0}>\n          <>\n            {\n              signalInputs.map((input, index) => (\n                <div className=\"mb-2 ml-0\" key={index}>\n                  <label className=\"circuit_inner_label form-check-label\" htmlFor=\"circuitPrimeSelector\">\n                    <FormattedMessage id=\"circuit.signalInput\" /> { input }\n                  </label>\n                  <input className=\"form-control m-0 txinput\" placeholder={input} name={input} onChange={handleSignalInput} data-id={`circuit_input_${input}`} />\n                </div>\n              ))\n            }\n            <button\n              className=\"btn btn-sm btn-secondary\"\n              onClick={() => { computeWitness(plugin, status, witnessValues) }}\n              disabled={(status === \"compiling\") || (status === \"generating\") || (status === \"computing\")}\n              data-id=\"compute_witness_btn\"\n            >\n              <RenderIf condition={status === 'computing'}>\n                <i className=\"fas fa-sync fa-spin mr-2\" aria-hidden=\"true\"></i>\n              </RenderIf>\n              <RenderIfNot condition={status === 'computing'}>\n                <i className=\"fas fa-sync mr-2\" aria-hidden=\"true\"></i>\n              </RenderIfNot>\n              <FormattedMessage id=\"circuit.compute\" />\n            </button>\n          </>\n        </RenderIf>\n      </div>\n    </div>\n  )\n}","import { useState } from \"react\"\nimport { FormattedMessage } from \"react-intl\"\nimport { RenderIf, RenderIfNot } from \"@remix-ui/helper\"\n\nexport function WitnessToggler ({ children }: { children: JSX.Element }) {\n  const [toggleExpander, setToggleExpander] = useState<boolean>(false)\n\n  const toggleConfigurations = () => {\n    setToggleExpander(!toggleExpander)\n  }\n\n  return (\n    <div>\n      <div className=\"d-flex circuit_config_section justify-content-between\" onClick={toggleConfigurations} data-id=\"witness_toggler\">\n        <div className=\"d-flex\">\n          <label className=\"mt-1 circuit_config_section\">\n            <FormattedMessage id=\"circuit.computeWitness\" />\n          </label>\n        </div>\n        <div>\n          <span data-id=\"scConfigExpander\" onClick={toggleConfigurations}>\n            <RenderIf condition={toggleExpander}>\n              <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n            </RenderIf>\n            <RenderIfNot condition={toggleExpander}>\n              <i className=\"fas fa-angle-right\" aria-hidden=\"true\"></i>\n            </RenderIfNot>\n          </span>\n        </div>\n      </div>\n      <RenderIf condition={toggleExpander}>\n        { children }\n      </RenderIf>\n    </div>\n  )\n}","import { createContext } from 'react'\nimport { ICircuitAppContext } from '../types'\n\nexport const CircuitAppContext = createContext<ICircuitAppContext>({} as ICircuitAppContext)\n","import { Actions, AppState } from '../types'\nimport { compiler_list } from 'circom_wasm'\n\nexport const appInitialState: AppState = {\n  version: compiler_list.latest,\n  versionList: compiler_list.wasm_builds,\n  filePath: \"\",\n  filePathToId: {},\n  status: \"idle\",\n  primeValue: \"bn128\",\n  autoCompile: false,\n  hideWarnings: false,\n  signalInputs: [],\n  feedback: null\n}\n\nexport const appReducer = (state = appInitialState, action: Actions): AppState => {\n  switch (action.type) {\n\n  case 'SET_COMPILER_VERSION':\n    return {\n      ...state,\n      version: action.payload\n    }\n\n  case 'SET_FILE_PATH':\n    return {\n      ...state,\n      filePath: action.payload\n    }\n\n  case 'SET_COMPILER_STATUS':\n    return {\n      ...state,\n      status: action.payload\n    }\n\n  case 'SET_PRIME_VALUE':\n    return {\n      ...state,\n      primeValue: action.payload\n    }\n\n  case 'SET_AUTO_COMPILE':\n    return {\n      ...state,\n      autoCompile: action.payload\n    }\n\n  case 'SET_HIDE_WARNINGS':\n    return {\n      ...state,\n      hideWarnings: action.payload\n    }\n\n  case 'SET_SIGNAL_INPUTS':\n    return {\n      ...state,\n      signalInputs: action.payload\n    }\n\n  case 'SET_COMPILER_FEEDBACK':\n    return {\n      ...state,\n      feedback: action.payload\n    }\n\n  case 'SET_FILE_PATH_TO_ID':\n    return {\n      ...state,\n      filePathToId: action.payload\n    }\n\n  default:\n    throw new Error()\n  }\n}\n","import { PluginClient } from '@remixproject/plugin'\nimport { createClient } from '@remixproject/plugin-webview'\nimport EventManager from 'events'\nimport pathModule from 'path'\nimport { compiler_list, parse, compile, generate_r1cs, generate_witness } from 'circom_wasm'\nimport * as compilerV218 from 'circom_wasm/v2.1.8'\nimport * as compilerV217 from 'circom_wasm/v2.1.7'\nimport * as compilerV216 from 'circom_wasm/v2.1.6'\nimport * as compilerV215 from 'circom_wasm/v2.1.5'\nimport { extractNameFromKey, extractParentFromKey } from '@remix-ui/helper'\nimport { CompilationConfig, CompilerReport, PrimeValue, ResolverOutput } from '../types'\n\n// @ts-ignore\nconst _paq = (window._paq = window._paq || [])\nexport class CircomPluginClient extends PluginClient {\n  public internalEvents: EventManager\n  private _compilationConfig: CompilationConfig = {\n    version: \"2.1.8\",\n    prime: \"bn128\"\n  }\n  private lastCompiledCircuitPath: string = ''\n  private lastParsedFiles: Record<string, string> = {}\n  private lastCompiledFile: string = ''\n  private compiler: typeof compilerV215 & typeof compilerV216 & typeof compilerV217 & typeof compilerV218\n\n  constructor() {\n    super()\n    this.methods = ['init', 'parse', 'compile', 'generateR1cs', 'resolveDependencies']\n    createClient(this)\n    this.internalEvents = new EventManager()\n    this.onload()\n  }\n\n  init(): void {\n    console.log('initializing circom plugin...')\n  }\n\n  onActivation(): void {\n    this.internalEvents.emit('circom_activated')\n  }\n\n  set compilerVersion (version: string) {\n    if (!compiler_list.versions.includes(version)) throw new Error(\"Unsupported compiler version\")\n    this._compilationConfig.version = version\n    if (version === '2.1.5') this.compiler = compilerV215\n    else if (version === '2.1.6') this.compiler = compilerV216\n    else if (version === '2.1.7') this.compiler = compilerV217\n    else if (version === '2.1.8') this.compiler = compilerV218\n    else this.compiler = null\n  }\n\n  set compilerPrime (prime: PrimeValue) {\n    if ((prime !== \"bn128\") && (prime !== \"bls12381\") && (prime !== \"goldilocks\") && (this._compilationConfig.version === '2.1.5')) throw new Error('Invalid prime value')\n    if ((prime !== \"bn128\") && (prime !== \"bls12381\") && (prime !== \"goldilocks\") && (prime !== \"grumpkin\") && (prime !== \"pallas\") && (prime !== \"vesta\") && (this._compilationConfig.version === '2.1.6')) throw new Error('Invalid prime value')\n    if ((prime !== \"bn128\") && (prime !== \"bls12381\") && (prime !== \"goldilocks\") && (prime !== \"grumpkin\") && (prime !== \"pallas\") && (prime !== \"vesta\") && (this._compilationConfig.version === '2.1.7')) throw new Error('Invalid prime value')\n    if ((prime !== \"bn128\") && (prime !== \"bls12381\") && (prime !== \"goldilocks\") && (prime !== \"grumpkin\") && (prime !== \"pallas\") && (prime !== \"vesta\") && (prime !== \"secq256r1\") && (this._compilationConfig.version === '2.1.8')) throw new Error('Invalid prime value')\n    this._compilationConfig.prime = prime\n  }\n\n  async parse(path: string, fileContent?: string): Promise<[CompilerReport[], Record<string, string>]> {\n    if (!fileContent) {\n      // @ts-ignore\n      fileContent = await this.call('fileManager', 'readFile', path)\n    }\n    this.lastParsedFiles = await this.resolveDependencies(path, fileContent)\n    const parsedOutput = this.compiler ? this.compiler.parse(path, this.lastParsedFiles) : parse(path, this.lastParsedFiles)\n\n    try {\n      const result: CompilerReport[] = JSON.parse(parsedOutput.report())\n      const mapReportFilePathToId: Record<string, string> = {}\n\n      if (result.length === 0) {\n        // @ts-ignore\n        await this.call('editor', 'clearErrorMarkers', [path])\n      } else {\n        const markers = []\n\n        for (const report of result) {\n          for (const label in report.labels) {\n            const file_id = report.labels[label].file_id\n\n            mapReportFilePathToId[file_id] = parsedOutput.get_report_name(parseInt(file_id))\n            if (file_id === '0') {\n              // @ts-ignore\n              const startPosition: { lineNumber: number; column: number } = await this.call(\n                'editor',\n                // @ts-ignore\n                'getPositionAt',\n                report.labels[label].range.start\n              )\n              // @ts-ignore\n              const endPosition: { lineNumber: number; column: number } = await this.call(\n                'editor',\n                // @ts-ignore\n                'getPositionAt',\n                report.labels[label].range.end\n              )\n\n              markers.push({\n                message: report.message,\n                severity: report.type.toLowerCase(),\n                position: {\n                  start: {\n                    line: startPosition.lineNumber,\n                    column: startPosition.column,\n                  },\n                  end: {\n                    line: endPosition.lineNumber,\n                    column: endPosition.column,\n                  },\n                },\n                file: path,\n              })\n            }\n          }\n        }\n\n        if (markers.length > 0) {\n          // @ts-ignore\n          await this.call('editor', 'addErrorMarker', markers)\n        } else {\n          // @ts-ignore\n          await this.call('editor', 'clearErrorMarkers', [path])\n          this.emit('statusChanged', { key: 'none' })\n        }\n      }\n\n      return [result, mapReportFilePathToId]\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n\n  async compile(path: string, compilationConfig?: CompilationConfig): Promise<void> {\n    this.internalEvents.emit('circuit_compiling_start')\n    this.emit('statusChanged', { key: 'loading', title: 'Compiling...', type: 'info' })\n    // @ts-ignore\n    this.call('terminal', 'log', { type: 'log', value: 'Compiling ' + path })\n    const [parseErrors, filePathToId] = await this.parse(path)\n\n    if (parseErrors && (parseErrors.length > 0)) {\n      if (parseErrors[0].type === 'Error') {\n        this.internalEvents.emit('circuit_parsing_errored', parseErrors, filePathToId)\n        this.logCompilerReport(parseErrors)\n        return\n      } else if (parseErrors[0].type === 'Warning') {\n        this.internalEvents.emit('circuit_parsing_warning', parseErrors, filePathToId)\n        this.logCompilerReport(parseErrors)\n      }\n    } else {\n      this.internalEvents.emit('circuit_parsing_done', parseErrors, filePathToId)\n      this.emit('statusChanged', { key: 'succeed', title: 'circuit compiled successfully', type: 'success' })\n    }\n    if (compilationConfig) {\n      const { prime, version } = compilationConfig\n\n      this.compilerVersion = version\n      this.compilerPrime = prime\n    }\n    const circuitApi = this.compiler ? this.compiler.compile(path, this.lastParsedFiles, { prime: this._compilationConfig.prime }) : compile(path, this.lastParsedFiles, { prime: this._compilationConfig.prime })\n    const circuitProgram = circuitApi.program()\n\n    if (circuitProgram.length < 1) {\n      const circuitErrors = circuitApi.report()\n\n      this.logCompilerReport(circuitErrors)\n      _paq.push(['trackEvent', 'circuit-compiler', 'compile', 'Compilation failed'])\n      throw new Error(circuitErrors)\n    } else {\n      this.lastCompiledFile = path\n      const fileName = extractNameFromKey(path)\n\n      this.lastCompiledCircuitPath = extractParentFromKey(path) + \"/.bin/\" + fileName.replace('circom', 'wasm')\n      // @ts-ignore\n      await this.call('fileManager', 'writeFile', this.lastCompiledCircuitPath, circuitProgram, { encoding: null })\n      const fileContent = this.lastParsedFiles[path]\n      const searchComponentName = fileContent.match(/component\\s+main\\s*(?:{[^{}]*})?\\s*=\\s*([A-Za-z_]\\w*)\\s*\\(.*\\)/)\n\n      if (searchComponentName) {\n        const componentName = searchComponentName[1]\n        const signals = circuitApi.input_signals(componentName)\n\n        this.internalEvents.emit('circuit_compiling_done', signals)\n      } else {\n        this.internalEvents.emit('circuit_compiling_done', [])\n      }\n      _paq.push(['trackEvent', 'circuit-compiler', 'compile', 'Compilation successful'])\n      circuitApi.log().map(log => {\n        log && this.call('terminal', 'log', { type: 'log', value: log })\n      })\n      // @ts-ignore\n      this.call('terminal', 'log', { type: 'typewritersuccess', value: 'Everything went okay' })\n    }\n  }\n\n  async generateR1cs (path: string, compilationConfig?: CompilationConfig): Promise<void> {\n    this.internalEvents.emit('circuit_generating_r1cs_start')\n    this.emit('statusChanged', { key: 'loading', title: 'Generating...', type: 'info' })\n    // @ts-ignore\n    this.call('terminal', 'log', { type: 'log', value: 'Generating R1CS for ' + path })\n    const [parseErrors, filePathToId] = await this.parse(path)\n\n    if (parseErrors && (parseErrors.length > 0)) {\n      if (parseErrors[0].type === 'Error') {\n        this.internalEvents.emit('circuit_parsing_errored', parseErrors)\n        this.logCompilerReport(parseErrors)\n        return\n      } else if (parseErrors[0].type === 'Warning') {\n        this.internalEvents.emit('circuit_parsing_warning', parseErrors)\n        this.logCompilerReport(parseErrors)\n      }\n    } else {\n      this.internalEvents.emit('circuit_parsing_done', parseErrors, filePathToId)\n      this.emit('statusChanged', { key: 'succeed', title: 'r1cs generated successfully', type: 'success' })\n    }\n    if (compilationConfig) {\n      const { prime, version } = compilationConfig\n\n      this.compilerVersion = version\n      this.compilerPrime = prime\n    }\n    const r1csApi = this.compiler ? this.compiler.generate_r1cs(path, this.lastParsedFiles, { prime: this._compilationConfig.prime }) : generate_r1cs(path, this.lastParsedFiles, { prime: this._compilationConfig.prime })\n    const r1csProgram = r1csApi.program()\n\n    if (r1csProgram.length < 1) {\n      const r1csErrors = r1csApi.report()\n\n      this.logCompilerReport(r1csErrors)\n      _paq.push(['trackEvent', 'circuit-compiler', 'generateR1cs', 'R1CS Generation failed'])\n      throw new Error(r1csErrors)\n    } else {\n      this.internalEvents.emit('circuit_generating_r1cs_done')\n      const fileName = extractNameFromKey(path)\n      const writePath = extractParentFromKey(path) + \"/.bin/\" + fileName.replace('circom', 'r1cs')\n\n      // @ts-ignore\n      await this.call('fileManager', 'writeFile', writePath, r1csProgram, true)\n      _paq.push(['trackEvent', 'circuit-compiler', 'generateR1cs', 'R1CS Generation successful'])\n      r1csApi.log().map(log => {\n        log && this.call('terminal', 'log', { type: 'log', value: log })\n      })\n      // @ts-ignore\n      this.call('terminal', 'log', { type: 'typewritersuccess', value: 'Everything went okay' })\n    }\n  }\n\n  async computeWitness (input: string): Promise<void> {\n    this.internalEvents.emit('circuit_computing_witness_start')\n    this.emit('statusChanged', { key: 'loading', title: 'Computing...', type: 'info' })\n    const wasmPath = this.lastCompiledCircuitPath\n\n    if (!wasmPath) throw new Error('No wasm file found')\n    // @ts-ignore\n    const buffer: any = await this.call('fileManager', 'readFile', wasmPath, { encoding: null })\n    const dataRead = new Uint8Array(buffer)\n    const witness = this.compiler ? await this.compiler.generate_witness(dataRead, input) : await generate_witness(dataRead, input)\n    // @ts-ignore\n    await this.call('fileManager', 'writeFile', wasmPath.replace('.wasm', '.wtn'), witness, true)\n    _paq.push(['trackEvent', 'circuit-compiler', 'computeWitness', 'Witness computing successful'])\n    this.internalEvents.emit('circuit_computing_witness_done')\n    this.emit('statusChanged', { key: 'succeed', title: 'witness computed successfully', type: 'success' })\n  }\n\n  async resolveDependencies(filePath: string, fileContent: string, output?: Record<string, string>, depPath: string = '', blackPath: string[] = []): Promise<Record<string, string>> {\n    if (!output) output = { [filePath]: fileContent }\n    // extract all includes\n    const includes = (fileContent.match(/include ['\"].*['\"]/g) || []).map((include) => include.replace(/include ['\"]/g, '').replace(/['\"]/g, ''))\n\n    await Promise.all(\n      includes.map(async (include) => {\n        // fix for endless recursive includes\n        if (blackPath.includes(include)) return\n        let dependencyContent = ''\n        let path = include.replace(/(\\.\\.\\/)+/g, '')\n        // @ts-ignore\n        const pathExists = await this.call('fileManager', 'exists', path)\n\n        if (pathExists) {\n          // fetch file content if include import (path) exists within same level as current file opened in editor\n          dependencyContent = await this.call('fileManager', 'readFile', path)\n        } else {\n          // if include import (path) does not exist, try to construct relative path using the original file path (current file opened in editor)\n          let relativePath = pathModule.resolve(filePath.slice(0, filePath.lastIndexOf('/')), include)\n          if (relativePath.indexOf('/') === 0) relativePath = relativePath.slice(1)\n          const relativePathExists = await this.call(\n            'fileManager',\n            // @ts-ignore\n            'exists',\n            relativePath\n          )\n\n          if (relativePathExists) {\n            // fetch file content if include import exists as a relative path\n            path = relativePath\n            dependencyContent = await this.call('fileManager', 'readFile', relativePath)\n          } else {\n            if (include.startsWith('circomlib')) {\n              const splitInclude = include.split('/')\n              const version = splitInclude[1].match(/v[0-9]+.[0-9]+.[0-9]+/g)\n\n              try {\n                // try to resolve include import from .deps folder\n                if (version && version[0]) {\n                  path = `.deps/https/raw.githubusercontent.com/iden3/circomlib/${version[0]}/${splitInclude.slice(2).join('/')}`\n                  dependencyContent = await this.call('contentImport', 'resolveAndSave', path, null)\n                } else {\n                  path = `.deps/https/raw.githubusercontent.com/iden3/circomlib/master/${splitInclude.slice(1).join('/')}`\n                  dependencyContent = await this.call('contentImport', 'resolveAndSave', path, null)\n                }\n              } catch (e) {\n                // try to resolve include import from github if it is a circomlib dependency\n                if (version && version[0]) {\n                  path = `https://raw.githubusercontent.com/iden3/circomlib/${version[0]}/${splitInclude.slice(2).join('/')}`\n                  dependencyContent = await this.call('contentImport', 'resolveAndSave', path, null)\n                } else {\n                  path = `https://raw.githubusercontent.com/iden3/circomlib/master/${splitInclude.slice(1).join('/')}`\n                  dependencyContent = await this.call('contentImport', 'resolveAndSave', path, null)\n                }\n              }\n            } else {\n              if (depPath) {\n                // resolves relative dependencies for .deps folder\n                path = pathModule.resolve(depPath.slice(0, depPath.lastIndexOf('/')), include)\n                path = path.replace('https:/', 'https://')\n                if (path.indexOf('/') === 0) path = path.slice(1)\n                dependencyContent = await this.call('contentImport', 'resolveAndSave', path, null)\n              } else {\n                // If all import cases are not true, use the default import to try fetching from node_modules and unpkg\n                dependencyContent = await this.call('contentImport', 'resolveAndSave', path, null)\n              }\n            }\n          }\n        }\n        if (path.indexOf('https://') === 0) {\n          // Regular expression to match include statements and make deps imports uniform\n          const includeRegex = /include \"(.+?)\";/g\n          const replacement = 'include \"circomlib/circuits/$1\";'\n\n          dependencyContent = dependencyContent.replace(includeRegex, replacement)\n        } else {\n          if (!include.startsWith('circomlib') && !pathModule.isAbsolute(filePath) && !pathModule.isAbsolute(path)) {\n          // if include is not absolute, resolve it using the parent path of the current file opened in editor\n            const absIncludePath = pathModule.resolve('/' + filePath.slice(0, filePath.lastIndexOf('/')), '/' + path)\n\n            output[filePath] = output[filePath].replace(`${include}`, `${absIncludePath}`)\n            include = absIncludePath\n          }\n        }\n        // extract all includes from the dependency content\n        const dependencyIncludes = (dependencyContent.match(/include ['\"].*['\"]/g) || []).map((childInclude) => {\n          const includeName = childInclude.replace(/include ['\"]/g, '').replace(/['\"]/g, '')\n          let absFilePath = pathModule.resolve(include.slice(0, include.lastIndexOf('/')), includeName)\n\n          absFilePath = include.startsWith('circomlib') ? absFilePath.substring(1) : absFilePath\n          if (!blackPath.includes(absFilePath)) {\n            if (!includeName.startsWith('circomlib')) {\n              dependencyContent = dependencyContent.replace(`${includeName}`, `${absFilePath}`)\n              return absFilePath\n            }\n            return includeName\n          } else {\n            // if include already exists in output, remove it from the dependency content\n            const includePattern = new RegExp(`include \"\\\\s*${includeName}\\\\s*\";`, 'g')\n\n            dependencyContent = dependencyContent.replace(includePattern, '')\n            return\n          }\n        }).filter((childInclude) => childInclude)\n        blackPath.push(include)\n        // recursively resolve all dependencies of the dependency\n        if (dependencyIncludes.length > 0) {\n          await this.resolveDependencies(filePath, dependencyContent, output, path, blackPath)\n          output[include] = dependencyContent\n        } else {\n          output[include] = dependencyContent\n        }\n      })\n    )\n    return output\n  }\n\n  async resolveReportPath (path: string): Promise<string> {\n    // @ts-ignore\n    const pathExists = await this.call('fileManager', 'exists', path)\n\n    if (pathExists) return path\n    else {\n      // if include import (path) does not exist, try to construct relative path using the original file path (current file opened in editor)\n      let relativePath = pathModule.resolve(this.lastCompiledFile.slice(0, this.lastCompiledFile.lastIndexOf('/')), path)\n      if (relativePath.indexOf('/') === 0) relativePath = relativePath.slice(1)\n      // @ts-ignore\n      const relativePathExists = await this.call('fileManager', 'exists', relativePath)\n\n      if (relativePathExists) return relativePath\n      else {\n        if (path.startsWith('circomlib')) {\n          // try to resolve include import from github if it is a circomlib dependency\n          const splitInclude = path.split('/')\n          const version = splitInclude[1].match(/v[0-9]+.[0-9]+.[0-9]+/g)\n\n          if (version && version[0]) {\n            path = `/.deps/https/raw.githubusercontent.com/iden3/circomlib/${version[0]}/${splitInclude.slice(2).join('/')}`\n          } else {\n            path = `/.deps/https/raw.githubusercontent.com/iden3/circomlib/master/${splitInclude.slice(1).join('/')}`\n          }\n          // @ts-ignore\n          const exists = await this.call('fileManager', 'exists', path)\n\n          if (exists) return path\n          else throw new Error(`Report path ${path} do no exist in the Remix FileSystem`)\n        } else {\n          throw new Error(`Report path ${path} do no exist in the Remix FileSystem`)\n        }\n      }\n    }\n  }\n\n  async logCompilerReport (report: CompilerReport[]): Promise<void> {\n    this.call('terminal', 'log', { type: 'log', value: JSON.stringify(report, null, 2) })\n    if (report[0].type === 'Error') {\n      this.call('terminal', 'log', { type: 'error', value: 'previous errors were found' })\n      this.emit('statusChanged', { key: report.length, title: `You have ${report.length} problem${report.length === 1 ? '' : 's'}`, type: 'error' })\n    }\n    if (report[0].type === 'Warning') {\n      this.call('terminal', 'log', { type: 'log', value: 'previous warnings were found' })\n      this.emit('statusChanged', { key: report.length, title: `You have ${report.length} problem${report.length === 1 ? '' : 's'}`, type: 'warning' })\n    }\n  }\n}\n","import React from 'react'\nimport { createRoot } from 'react-dom/client';\nimport App from './app/app'\n\nconst container = document.getElementById('root');\n\nif (container) {\n  createRoot(container).render(<App />);\n}","'use strict'\n\nexport class EventManager {\n  registered\n  anonymous\n\n  constructor () {\n    this.registered = {}\n    this.anonymous = {}\n  }\n\n  /*\n    * Unregister a listener.\n    * Note that if obj is a function. the unregistration will be applied to the dummy obj {}.\n    *\n    * @param {String} eventName  - the event name\n    * @param {Object or Func} obj - object that will listen on this event\n    * @param {Func} func         - function of the listeners that will be executed\n  */\n  unregister (eventName, obj, func) {\n    if (!this.registered[eventName]) {\n      return\n    }\n    if (obj instanceof Function) {\n      func = obj\n      obj = this.anonymous\n    }\n    for (const reg in this.registered[eventName]) {\n      if ((this.registered[eventName][reg].obj === obj) && (this.registered[eventName][reg].func.toString() === func.toString())) {\n        this.registered[eventName].splice(reg, 1)\n      }\n    }\n  }\n\n  /*\n    * Register a new listener.\n    * Note that if obj is a function, the function registration will be associated with the dummy object {}\n    *\n    * @param {String} eventName  - the event name\n    * @param {Object or Func} obj - object that will listen on this event\n    * @param {Func} func         - function of the listeners that will be executed\n  */\n  register (eventName, obj, func?) {\n    if (!this.registered[eventName]) {\n      this.registered[eventName] = []\n    }\n    if (obj instanceof Function) {\n      func = obj\n      obj = this.anonymous\n    }\n    this.registered[eventName].push({ obj, func })\n  }\n\n  /*\n    * trigger event.\n    * Every listener have their associated function executed\n    *\n    * @param {String} eventName  - the event name\n    * @param {Array}j - argument that will be passed to the executed function.\n  */\n  trigger (eventName, args) {\n    if (!this.registered[eventName]) {\n      return\n    }\n    for (const listener in this.registered[eventName]) {\n      const l = this.registered[eventName][listener]\n      if (l.func) l.func.apply(l.obj === this.anonymous ? {} : l.obj, args)\n    }\n  }\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { visitContracts } from './txHelper'\n\n/**\n  * Register to txListener and extract events\n  *\n  */\nexport class EventsDecoder {\n  resolveReceipt\n\n  constructor ({ resolveReceipt }) {\n    this.resolveReceipt = resolveReceipt\n  }\n\n  /**\n  * use Transaction Receipt to decode logs. assume that the transaction as already been resolved by txListener.\n  * logs are decoded only if the contract if known by remix.\n  *\n  * @param {Object} tx - transaction object\n  * @param {Function} cb - callback\n  */\n  parseLogs (tx, contractName, compiledContracts, cb) {\n    if (tx.isCall) return cb(null, { decoded: [], raw: []})\n    this.resolveReceipt(tx, (error, receipt) => {\n      if (error) return cb(error)\n      this._decodeLogs(tx, receipt, contractName, compiledContracts, cb)\n    })\n  }\n\n  _decodeLogs (tx, receipt, contract, contracts, cb) {\n    if (!contract || !receipt) {\n      return cb('cannot decode logs - contract or receipt not resolved ')\n    }\n    if (!receipt.logs) {\n      return cb(null, { decoded: [], raw: []})\n    }\n    this._decodeEvents(tx, receipt.logs, contract, contracts, cb)\n  }\n\n  _eventABI (contract): Record<string, { event, inputs, object, abi }> {\n    const eventABI: Record<string, { event, inputs, object, abi }> = {}\n    const abi = new ethers.utils.Interface(contract.abi)\n    for (const e in abi.events) {\n      const event = abi.getEvent(e)\n      eventABI[abi.getEventTopic(e).replace('0x', '')] = { event: event.name, inputs: event.inputs, object: event, abi: abi }\n    }\n    return eventABI\n  }\n\n  _eventsABI (compiledContracts): Record<string, unknown> {\n    const eventsABI: Record<string, unknown> = {}\n    visitContracts(compiledContracts, (contract) => {\n      eventsABI[contract.name] = this._eventABI(contract.object)\n    })\n    return eventsABI\n  }\n\n  _event (hash, eventsABI) {\n    // get all the events responding to that hash.\n    const contracts = []\n    for (const k in eventsABI) {\n      if (eventsABI[k][hash]) {\n        const event = eventsABI[k][hash]\n        for (const input of event.inputs) {\n          if (input.type === 'function') {\n            input.type = 'bytes24'\n            input.baseType = 'bytes24'\n          }\n        }\n        contracts.push(event)\n      }\n    }\n    return contracts\n  }\n\n  _stringifyBigNumber (value): string {\n    return value._isBigNumber ? value.toString() : value\n  }\n\n  _stringifyEvent (value) {\n    if (value === null || value === undefined) return ' - '\n    if (value._ethersType) value.type = value._ethersType\n    if (Array.isArray(value)) {\n      // for struct && array\n      return value.map((item) => { return this._stringifyEvent(item) })\n    } else {\n      return this._stringifyBigNumber(value)\n    }\n  }\n\n  _decodeEvents (tx, logs, contractName, compiledContracts, cb) {\n    const eventsABI = this._eventsABI(compiledContracts)\n    const events = []\n    for (const i in logs) {\n      // [address, topics, mem]\n      const log = logs[i]\n      const topicId = log.topics[0]\n      const eventAbis = this._event(topicId.replace('0x', ''), eventsABI)\n      for (const eventAbi of eventAbis) {\n        try {\n          if (eventAbi) {\n            const decodedlog = eventAbi.abi.parseLog(log)\n            const decoded = {}\n            for (const v in decodedlog.args) {\n              decoded[v] = this._stringifyEvent(decodedlog.args[v])\n            }\n            events.push({ from: log.address, topic: topicId, event: eventAbi.event, args: decoded })\n          } else {\n            events.push({ from: log.address, data: log.data, topics: log.topics })\n          }\n          break // if one of the iteration is successful\n        } catch (e) {\n          continue\n        }\n      }\n    }\n    cb(null, { decoded: events, raw: logs })\n  }\n}\n","'use strict'\n\n/**\n  * returns the fork name for the @argument networkId and @argument blockNumber\n  *\n  * @param {Object} networkId - network Id (1 for VM, 3 for Ropsten, 4 for Rinkeby, 5 for Goerli)\n  * @param {Object} blockNumber - block number\n  * @return {String} - fork name (Berlin, Istanbul, ...)\n  */\nexport function forkAt (networkId, blockNumber) {\n  if (forks[networkId]) {\n    let currentForkName = forks[networkId][0].name\n    for (const fork of forks[networkId]) {\n      if (blockNumber >= fork.number) {\n        currentForkName = fork.name\n      }\n    }\n    return currentForkName\n  }\n  return 'london'\n}\n\n// see https://github.com/ethereum/go-ethereum/blob/master/params/config.go\nconst forks = {\n  1: [\n    {\n      number: 4370000,\n      name: 'byzantium'\n    },\n    {\n      number: 7280000,\n      name: 'constantinople'\n    },\n    {\n      number: 7280000,\n      name: 'petersburg'\n    },\n    {\n      number: 9069000,\n      name: 'istanbul'\n    },\n    {\n      number: 9200000,\n      name: 'muirglacier'\n    },\n    {\n      number: 12244000,\n      name: 'berlin'\n    },\n    {\n      number: 12965000,\n      name: 'london'\n    },\n    {\n      number: 13773000,\n      name: 'arrowGlacier'\n    },\n    {\n      number: 15050000,\n      name: 'grayGlacier'\n    },\n    {\n      number: 15537394,\n      name: 'paris'\n    },\n    {\n      number: 17034870,\n      name: 'shanghai'\n    },\n    {\n      number: 19426587,\n      name: 'cancun'\n    }\n  ],\n  3: [\n    {\n      number: 1700000,\n      name: 'byzantium'\n    },\n    {\n      number: 4230000,\n      name: 'constantinople'\n    },\n    {\n      number: 4939394,\n      name: 'petersburg'\n    },\n    {\n      number: 6485846,\n      name: 'istanbul'\n    },\n    {\n      number: 7117117,\n      name: 'muirglacier'\n    },\n    {\n      number: 9812189,\n      name: 'berlin'\n    },\n    {\n      number: 10499401,\n      name: 'london'\n    }\n  ],\n  4: [\n    {\n      number: 1035301,\n      name: 'byzantium'\n    },\n    {\n      number: 3660663,\n      name: 'constantinople'\n    },\n    {\n      number: 4321234,\n      name: 'petersburg'\n    },\n    {\n      number: 5435345,\n      name: 'istanbul'\n    },\n    {\n      number: 8290928,\n      name: 'berlin'\n    },\n    {\n      number: 8897988,\n      name: 'london'\n    }\n  ],\n  5: [\n    {\n      number: 1561651,\n      name: 'istanbul'\n    },\n    {\n      number: 4460644,\n      name: 'berlin'\n    },\n    {\n      number: 5062605,\n      name: 'london'\n    }\n  ]\n}\n","import { eachOf } from 'async'\nimport { randomBytes } from 'crypto'\nimport { toChecksumAddress, bytesToHex } from '@ethereumjs/util'\n\nexport class LogsManager {\n  notificationCallbacks\n  subscriptions\n  filters\n  filterTracking\n  oldLogs\n\n  constructor () {\n    this.notificationCallbacks = []\n    this.subscriptions = {}\n    this.filters = {}\n    this.filterTracking = {}\n    this.oldLogs = []\n  }\n\n  checkBlock (blockNumber, block, web3) {\n    eachOf(block.transactions, (tx: any, i, next) => {\n      const txHash = bytesToHex(tx.hash())\n      web3.eth.getTransactionReceipt(txHash, (_error, receipt) => {\n        if (!receipt) return next()\n        for (const log of receipt.logs) {\n          this.oldLogs.push({ type: 'block', blockNumber, block, tx, log, txNumber: i, receipt })\n          const subscriptions = this.getSubscriptionsFor({ type: 'block', blockNumber, block, tx, log, receipt })\n          for (const subscriptionId of subscriptions) {\n            const result = {\n              logIndex: '0x1', // 1\n              blockNumber: blockNumber,\n              blockHash: bytesToHex(block.hash()),\n              transactionHash: bytesToHex(tx.hash()),\n              transactionIndex: '0x' + i.toString(16),\n              // TODO: if it's a contract deploy, it should be that address instead\n              address: log.address,\n              data: log.data,\n              topics: log.topics\n            }\n\n            if (result.address === '0x') {\n              delete result.address\n            }\n\n            const response = { jsonrpc: '2.0', method: 'eth_subscription', params: { result: result, subscription: subscriptionId } }\n            this.transmit(response)\n          }\n        }\n      })\n    }, (_err) => {\n    })\n  }\n\n  eventMatchesFilter (changeEvent, queryType, queryFilter) {\n    if (queryFilter.topics.filter((logTopic) => changeEvent.log.topics.indexOf(logTopic) >= 0).length === 0) return false\n\n    if (queryType === 'logs') {\n      const fromBlock = parseInt(queryFilter.fromBlock || '0x0')\n      let toBlock\n      if (queryFilter.toBlock === 'latest' || !queryFilter.toBlock) toBlock = Number.MAX_VALUE\n      else toBlock = parseInt(queryFilter.toBlock)\n      const targetAddress = toChecksumAddress(queryFilter.address)\n      if ((toBlock >= parseInt(changeEvent.blockNumber)) && (fromBlock <= parseInt(changeEvent.blockNumber))) {\n        if (changeEvent.log && changeEvent.log.address === targetAddress) {\n          return true\n        }\n      }\n      return false\n    }\n    return false\n  }\n\n  getSubscriptionsFor (changeEvent) {\n    const matchedSubscriptions = []\n    for (const subscriptionId of Object.keys(this.subscriptions)) {\n      const subscriptionParams = this.subscriptions[subscriptionId]\n      const [queryType, queryFilter] = subscriptionParams\n\n      if (this.eventMatchesFilter(changeEvent, queryType, queryFilter || { topics: []})) {\n        matchedSubscriptions.push(subscriptionId)\n      }\n    }\n    return matchedSubscriptions\n  }\n\n  getLogsForSubscription (subscriptionId) {\n    const subscriptionParams = this.subscriptions[subscriptionId]\n    const [_queryType, queryFilter] = subscriptionParams // eslint-disable-line\n\n    return this.getLogsFor(queryFilter)\n  }\n\n  transmit (result) {\n    this.notificationCallbacks.forEach((callback) => {\n      if (result.params.result.raw) {\n        result.params.result.data = result.params.result.raw.data\n        result.params.result.topics = result.params.result.raw.topics\n      }\n      callback(result)\n    })\n  }\n\n  addListener (_type, cb) {\n    this.notificationCallbacks.push(cb)\n  }\n\n  subscribe (params) {\n    const subscriptionId = '0x' + randomBytes(16).toString('hex')\n    this.subscriptions[subscriptionId] = params\n    return subscriptionId\n  }\n\n  unsubscribe (subscriptionId) {\n    delete this.subscriptions[subscriptionId]\n  }\n\n  newFilter (filterType, params) {\n    const filterId = '0x' + randomBytes(16).toString('hex')\n    if (filterType === 'block' || filterType === 'pendingTransactions') {\n      this.filters[filterId] = { filterType }\n    }\n    if (filterType === 'filter') {\n      this.filters[filterId] = { filterType, params }\n    }\n    this.filterTracking[filterId] = {}\n    return filterId\n  }\n\n  uninstallFilter (filterId) {\n    delete this.filters[filterId]\n  }\n\n  getLogsForFilter (filterId, logsOnly) {\n    const { filterType, params } = this.filters[filterId]\n    const tracking = this.filterTracking[filterId]\n\n    if (logsOnly || filterType === 'filter') {\n      return this.getLogsFor(params || { topics: []})\n    }\n    if (filterType === 'block') {\n      const blocks = this.oldLogs.filter(x => x.type === 'block').filter(x => tracking.block === undefined || x.blockNumber >= tracking.block)\n      tracking.block = blocks[blocks.length - 1]\n      return blocks.map(block => bytesToHex(block.hash()))\n    }\n    if (filterType === 'pendingTransactions') {\n      return []\n    }\n  }\n\n  getLogsByTxHash (hash) {\n    return this.oldLogs.filter((log) => bytesToHex(log.tx.hash()) === hash)\n      .map((log) => {\n        return {\n          logIndex: '0x1', // 1\n          blockNumber: log.blockNumber,\n          blockHash: bytesToHex(log.block.hash()),\n          transactionHash: bytesToHex(log.tx.hash()),\n          transactionIndex: '0x' + log.txNumber.toString(16),\n          // TODO: if it's a contract deploy, it should be that address instead\n          address: log.log.address,\n          data: log.log.data,\n          topics: log.log.topics\n        }\n      })\n  }\n\n  getLogsFor (params) {\n    const results = []\n    for (const log of this.oldLogs) {\n      if (this.eventMatchesFilter(log, 'logs', params)) {\n        results.push({\n          logIndex: '0x1', // 1\n          blockNumber: log.blockNumber,\n          blockHash: bytesToHex(log.block.hash()),\n          transactionHash: bytesToHex(log.tx.hash()),\n          transactionIndex: '0x' + log.txNumber.toString(16),\n          // TODO: if it's a contract deploy, it should be that address instead\n          address: log.log.address,\n          data: log.log.data,\n          topics: log.log.topics\n        })\n      }\n    }\n\n    return results\n  }\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { getFunctionFragment } from './txHelper'\n\n/**\n  * deploy the given contract\n  *\n  * @param {String} from    - sender address\n  * @param {String} data    - data to send with the transaction ( return of txFormat.buildData(...) ).\n  * @param {String} value    - decimal representation of value.\n  * @param {String} gasLimit    - decimal representation of gas limit.\n  * @param {Object} txRunner    - TxRunner.js instance\n  * @param {Object} callbacks    - { confirmationCb, gasEstimationForceSend, promptCb }\n  *     [validate transaction] confirmationCb (network, tx, gasEstimation, continueTxExecution, cancelCb)\n  *     [transaction failed, force send] gasEstimationForceSend (error, continueTxExecution, cancelCb)\n  *     [personal mode enabled, need password to continue] promptCb (okCb, cancelCb)\n  * @param {Function} finalCallback    - last callback.\n  */\nexport function createContract (from, data, value, gasLimit, txRunner, callbacks, finalCallback) {\n  if (!callbacks.confirmationCb || !callbacks.gasEstimationForceSend || !callbacks.promptCb) {\n    return finalCallback('all the callbacks must have been defined')\n  }\n  const tx = { from: from, to: null, data: data, useCall: false, value: value, gasLimit: gasLimit }\n  txRunner.rawRun(tx, callbacks.confirmationCb, callbacks.gasEstimationForceSend, callbacks.promptCb, (error, txResult) => {\n    // see universaldapp.js line 660 => 700 to check possible values of txResult (error case)\n    finalCallback(error, txResult)\n  })\n}\n\n/**\n  * call the current given contract ! that will create a transaction !\n  *\n  * @param {String} from    - sender address\n  * @param {String} to    - recipient address\n  * @param {String} data    - data to send with the transaction ( return of txFormat.buildData(...) ).\n  * @param {String} value    - decimal representation of value.\n  * @param {String} gasLimit    - decimal representation of gas limit.\n  * @param {Object} txRunner    - TxRunner.js instance\n  * @param {Object} callbacks    - { confirmationCb, gasEstimationForceSend, promptCb }\n  *     [validate transaction] confirmationCb (network, tx, gasEstimation, continueTxExecution, cancelCb)\n  *     [transaction failed, force send] gasEstimationForceSend (error, continueTxExecution, cancelCb)\n  *     [personal mode enabled, need password to continue] promptCb (okCb, cancelCb)\n  * @param {Function} finalCallback    - last callback.\n  */\nexport function callFunction (from, to, data, value, gasLimit, funAbi, txRunner, callbacks, finalCallback) {\n  const useCall = funAbi.stateMutability === 'view' || funAbi.stateMutability === 'pure' || funAbi.constant\n  const tx = { from, to, data, useCall, value, gasLimit }\n  txRunner.rawRun(tx, callbacks.confirmationCb, callbacks.gasEstimationForceSend, callbacks.promptCb, (error, txResult) => {\n    // see universaldapp.js line 660 => 700 to check possible values of txResult (error case)\n    finalCallback(error, txResult)\n  })\n}\n\n/**\n  * check if the vm has errored\n  *\n  * @param {Object} execResult    - execution result given by the VM, contain errorMessage and errorDate\n  * @param {Object} compiledContracts - Object containing contract compilation details\n  * @return {Object} -  { error: true/false, message: DOMNode }\n  */\nexport function checkError (execResult, compiledContracts) {\n  const errorCode = {\n    OUT_OF_GAS: 'out of gas',\n    STACK_UNDERFLOW: 'stack underflow',\n    STACK_OVERFLOW: 'stack overflow',\n    INVALID_JUMP: 'invalid JUMP',\n    INVALID_OPCODE: 'invalid opcode',\n    REVERT: 'revert',\n    STATIC_STATE_CHANGE: 'static state change',\n    INTERNAL_ERROR: 'internal error',\n    CREATE_COLLISION: 'create collision',\n    STOP: 'stop',\n    REFUND_EXHAUSTED: 'refund exhausted'\n  }\n  const ret = {\n    error: false,\n    message: ''\n  }\n  if (!execResult.errorMessage) {\n    return ret\n  }\n  const exceptionError = execResult.errorMessage || ''\n  const error = `Error occurred: ${execResult.errorMessage}.\\n`\n  let msg = ''\n  if (exceptionError.includes(errorCode.INVALID_OPCODE)) {\n    msg = '\\t\\n\\tThe execution might have thrown OR the EVM version used by the selected environment is not compatible with the compiler EVM version.\\n'\n    ret.error = true\n  } else if (exceptionError === errorCode.OUT_OF_GAS) {\n    msg = '\\tThe transaction ran out of gas. Please increase the Gas Limit.\\n'\n    ret.error = true\n  } else if (exceptionError === errorCode.REVERT || exceptionError === 'execution reverted') {\n    const returnData = execResult.errorData || '0x00000000'\n    const returnDataHex = returnData.slice(2, 10)\n    let customError\n    if (compiledContracts) {\n      let decodedCustomErrorInputsClean\n      for (const file of Object.keys(compiledContracts)) {\n        for (const contractName of Object.keys(compiledContracts[file])) {\n          const contract = compiledContracts[file][contractName]\n          for (const item of contract.abi) {\n            if (item.type === 'error') {\n              // ethers doesn't crash anymore if \"error\" type is specified, but it doesn't extract the errors. see:\n              // https://github.com/ethers-io/ethers.js/commit/bd05aed070ac9e1421a3e2bff2ceea150bedf9b7\n              // we need here to fake the type, so the \"getSighash\" function works properly\n              const fn = getFunctionFragment({ ...item, type: 'function', stateMutability: 'nonpayable' })\n              if (!fn) continue\n              const sign = fn.getSighash(item.name)\n              if (!sign) continue\n              if (returnDataHex === sign.replace('0x', '')) {\n                customError = item.name\n                const functionDesc = fn.getFunction(item.name)\n                // decoding error parameters\n                const decodedCustomErrorInputs = fn.decodeFunctionData(functionDesc, returnData)\n                decodedCustomErrorInputsClean = {}\n                let devdoc = {}\n                // \"contract\" represents the compilation result containing the NATSPEC documentation\n                if (contract && fn.functions && Object.keys(fn.functions).length) {\n                  const functionSignature = Object.keys(fn.functions)[0]\n                  // we check in the 'devdoc' if there's a developer documentation for this error\n                  try {\n                    devdoc = (contract.devdoc.errors && contract.devdoc.errors[functionSignature][0]) || {}\n                  } catch (e) {\n                    console.error(e.message)\n                  }\n                  // we check in the 'userdoc' if there's an user documentation for this error\n                  try {\n                    const userdoc = (contract.userdoc.errors && contract.userdoc.errors[functionSignature][0]) || {}\n                    if (userdoc && (userdoc as any).notice) customError += ' : ' + (userdoc as any).notice // we append the user doc if any\n                  } catch (e) {\n                    console.error(e.message)\n                  }\n                }\n                let inputIndex = 0\n                for (const input of functionDesc.inputs) {\n                  const inputKey = input.name || inputIndex\n                  const v = decodedCustomErrorInputs[inputKey]\n\n                  decodedCustomErrorInputsClean[inputKey] = {\n                    value: v.toString ? v.toString() : v\n                  }\n                  if (devdoc && (devdoc as any).params) {\n                    decodedCustomErrorInputsClean[input.name].documentation = (devdoc as any).params[inputKey] // we add the developer documentation for this input parameter if any\n                  }\n                  inputIndex++\n                }\n                break\n              }\n            }\n          }\n        }\n      }\n      if (decodedCustomErrorInputsClean) {\n        msg = '\\tThe transaction has been reverted to the initial state.\\nError provided by the contract:'\n        msg += `\\n${customError}`\n        msg += '\\nParameters:'\n        msg += `\\n${JSON.stringify(decodedCustomErrorInputsClean, null, ' ')}`\n      }\n    }\n    if (!customError) {\n      // It is the hash of Error(string)\n      if (returnData && (returnDataHex === '08c379a0')) {\n        const abiCoder = new ethers.utils.AbiCoder()\n        const reason = abiCoder.decode(['string'], '0x' + returnData.slice(10))[0]\n        msg = `\\tThe transaction has been reverted to the initial state.\\nReason provided by the contract: \"${reason}\".`\n      } else {\n        msg = '\\tThe transaction has been reverted to the initial state.\\nNote: The called function should be payable if you send value and the value you send should be less than your current balance.'\n      }\n    }\n    ret.error = true\n  } else if (exceptionError === errorCode.STATIC_STATE_CHANGE) {\n    msg = '\\tState changes is not allowed in Static Call context\\n'\n    ret.error = true\n  }\n  ret.message = `${error}\\n${exceptionError}\\n${msg}\\nYou may want to cautiously increase the gas limit if the transaction went out of gas.`\n  return ret\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { encodeParams as encodeParamsHelper, encodeFunctionId, makeFullTypeDefinition } from './txHelper'\nimport { eachOfSeries } from 'async'\nimport { linkBytecode as linkBytecodeSolc } from 'solc/linker'\nimport { isValidAddress, addHexPrefix } from '@ethereumjs/util'\nimport fromExponential from 'from-exponential';\n\n/**\n  * build the transaction data\n  *\n  * @param {Object} function abi\n  * @param {Object} values to encode\n  * @param {String} contractbyteCode\n  */\nexport function encodeData (funABI, values, contractbyteCode) {\n  let encoded\n  let encodedHex\n  try {\n    encoded = encodeParamsHelper(funABI, values)\n    encodedHex = encoded.toString('hex')\n  } catch (e) {\n    return { error: 'cannot encode arguments' }\n  }\n  if (contractbyteCode) {\n    return { data: '0x' + contractbyteCode + encodedHex.replace('0x', '') }\n  } else {\n    return { data: encodeFunctionId(funABI) + encodedHex.replace('0x', '') }\n  }\n}\n\n/**\n* encode function / constructor parameters\n*\n* @param {Object} params    - input parameter of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n*/\nexport function encodeParams (params, funAbi, callback?) {\n  return new Promise((resolve, reject) => {\n    let data: Buffer | string = ''\n    let dataHex = ''\n    let funArgs = []\n    if (Array.isArray(params)) {\n      funArgs = params\n      if (funArgs.length > 0) {\n        try {\n          data = encodeParamsHelper(funAbi, funArgs)\n          dataHex = data.toString()\n        } catch (e) {\n          reject('Error encoding arguments: ' + e)\n          return callback && callback('Error encoding arguments: ' + e)\n        }\n      }\n      if (data.slice(0, 9) === 'undefined') {\n        dataHex = data.slice(9)\n      }\n      if (data.slice(0, 2) === '0x') {\n        dataHex = data.slice(2)\n      }\n    } else if (params.indexOf('raw:0x') === 0) {\n      // in that case we consider that the input is already encoded and *does not* contain the method signature\n      dataHex = params.replace('raw:0x', '')\n      data = Buffer.from(dataHex, 'hex')\n    } else {\n      try {\n        funArgs = parseFunctionParams(params)\n      } catch (e) {\n        reject('Error encoding arguments: ' + e)\n        return callback && callback('Error encoding arguments: ' + e)\n      }\n      try {\n        if (funArgs.length > 0) {\n          data = encodeParamsHelper(funAbi, funArgs)\n          dataHex = data.toString()\n        }\n      } catch (e) {\n        reject('Error encoding arguments: ' + e)\n        return callback && callback('Error encoding arguments: ' + e)\n      }\n      if (data.slice(0, 9) === 'undefined') {\n        dataHex = data.slice(9)\n      }\n      if (data.slice(0, 2) === '0x') {\n        dataHex = data.slice(2)\n      }\n    }\n    const result = { data: data, dataHex: dataHex, funArgs: funArgs }\n    callback && callback(null, result)\n    resolve(result)\n  })\n}\n\n/**\n* encode function call (function id + encoded parameters)\n*\n* @param {Object} params    - input parameter of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n*/\nexport function encodeFunctionCall (params, funAbi, callback) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    callback(null, { dataHex: encodeFunctionId(funAbi) + encodedParam.dataHex, funAbi, funArgs: encodedParam.funArgs })\n  })\n}\n\n/**\n* encode constructor creation and link with provided libraries if needed\n*\n* @param {Object} contract    - input parameter of the function to call\n* @param {Object} params    - input parameter of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Object} linkLibraries    - contains {linkReferences} object which list all the addresses to be linked\n* @param {Object} linkReferences    - given by the compiler, contains the proper linkReferences\n* @param {Function} callback    - callback\n*/\nexport function encodeConstructorCallAndLinkLibraries (contract, params, funAbi, linkLibrariesAddresses, linkReferences, callback) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    linkLibraries(contract, linkLibrariesAddresses, linkReferences, (error, bytecodeToDeploy) => {\n      callback(error, { dataHex: bytecodeToDeploy + encodedParam.dataHex, funAbi, funArgs: encodedParam.funArgs, contractBytecode: contract.evm.bytecode.object })\n    })\n  })\n}\n\n/**\n* link with provided libraries if needed\n*\n* @param {Object} contract    - input parameter of the function to call\n* @param {Object} linkLibraries    - contains {linkReferences} object which list all the addresses to be linked\n* @param {Object} linkReferences    - given by the compiler, contains the proper linkReferences\n* @param {Function} callback    - callback\n*/\nexport function linkLibraries (contract, linkLibraries, linkReferences, callback) {\n  let bytecodeToDeploy = contract.evm.bytecode.object\n  if (bytecodeToDeploy.indexOf('_') >= 0) {\n    if (linkLibraries && linkReferences) {\n      for (const libFile in linkLibraries) {\n        for (const lib in linkLibraries[libFile]) {\n          const address = linkLibraries[libFile][lib]\n          if (!isValidAddress(address)) return callback(address + ' is not a valid address. Please check the provided address is valid.')\n          bytecodeToDeploy = linkLibraryStandardFromlinkReferences(lib, address.replace('0x', ''), bytecodeToDeploy, linkReferences)\n        }\n      }\n    }\n  }\n  if (bytecodeToDeploy.indexOf('_') >= 0) {\n    return callback('Failed to link some libraries')\n  }\n  return callback(null, bytecodeToDeploy)\n}\n\n/**\n* encode constructor creation and deploy libraries if needed\n*\n* @param {String} contractName    - current contract name\n* @param {Object} contract    - input parameter of the function to call\n* @param {Object} contracts    - map of all compiled contracts.\n* @param {Object} params    - input parameter of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n* @param {Function} callbackStep  - callbackStep\n* @param {Function} callbackDeployLibrary  - callbackDeployLibrary\n* @param {Function} callback    - callback\n*/\nexport function encodeConstructorCallAndDeployLibraries (contractName, contract, contracts, params, funAbi, callback, callbackStep, callbackDeployLibrary) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    let dataHex = ''\n    const contractBytecode = contract.evm.bytecode.object\n    let bytecodeToDeploy = contract.evm.bytecode.object\n    if (bytecodeToDeploy.indexOf('_') >= 0) {\n      linkBytecode(contract, contracts, (err, bytecode) => {\n        if (err) {\n          callback('Error deploying required libraries: ' + err)\n        } else {\n          bytecodeToDeploy = bytecode + dataHex\n          return callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs: encodedParam.funArgs, contractBytecode, contractName: contractName })\n        }\n      }, callbackStep, callbackDeployLibrary)\n      return\n    } else {\n      dataHex = bytecodeToDeploy + encodedParam.dataHex\n    }\n    callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs: encodedParam.funArgs, contractBytecode, contractName: contractName })\n  })\n}\n\n/**\n* (DEPRECATED) build the transaction data\n*\n* @param {String} contractName\n* @param {Object} contract    - abi definition of the current contract.\n* @param {Object} contracts    - map of all compiled contracts.\n* @param {Bool} isConstructor    - isConstructor.\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Object} params    - input parameter of the function to call\n* @param {Function} callback    - callback\n* @param {Function} callbackStep  - callbackStep\n* @param {Function} callbackDeployLibrary  - callbackDeployLibrary\n*/\nexport function buildData (contractName, contract, contracts, isConstructor, funAbi, params, callback, callbackStep, callbackDeployLibrary) {\n  let funArgs = []\n  let data: Buffer | string = ''\n  let dataHex = ''\n\n  if (params.indexOf('raw:0x') === 0) {\n    // in that case we consider that the input is already encoded and *does not* contain the method signature\n    dataHex = params.replace('raw:0x', '')\n    data = Buffer.from(dataHex, 'hex')\n  } else {\n    try {\n      if (params.length > 0) {\n        funArgs = parseFunctionParams(params)\n      }\n    } catch (e) {\n      return callback('Error encoding arguments: ' + e)\n    }\n    try {\n      data = encodeParamsHelper(funAbi, funArgs)\n      dataHex = data.toString()\n    } catch (e) {\n      return callback('Error encoding arguments: ' + e)\n    }\n    if (data.slice(0, 9) === 'undefined') {\n      dataHex = data.slice(9)\n    }\n    if (data.slice(0, 2) === '0x') {\n      dataHex = data.slice(2)\n    }\n  }\n  let contractBytecode\n  if (isConstructor) {\n    contractBytecode = contract.evm.bytecode.object\n    let bytecodeToDeploy = contract.evm.bytecode.object\n    if (bytecodeToDeploy.indexOf('_') >= 0) {\n      linkBytecode(contract, contracts, (err, bytecode) => {\n        if (err) {\n          callback('Error deploying required libraries: ' + err)\n        } else {\n          bytecodeToDeploy = bytecode + dataHex\n          return callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs, contractBytecode, contractName: contractName })\n        }\n      }, callbackStep, callbackDeployLibrary)\n      return\n    } else {\n      dataHex = bytecodeToDeploy + dataHex\n    }\n  } else {\n    dataHex = encodeFunctionId(funAbi) + dataHex\n  }\n  callback(null, { dataHex, funAbi, funArgs, contractBytecode, contractName: contractName })\n}\n\nexport function atAddress () {}\n\nexport function linkBytecodeStandard (contract, contracts, callback, callbackStep, callbackDeployLibrary) {\n  let contractBytecode = contract.evm.bytecode.object\n  eachOfSeries(contract.evm.bytecode.linkReferences, (libs, file, cbFile) => {\n    eachOfSeries(contract.evm.bytecode.linkReferences[file], (libRef, libName, cbLibDeployed) => {\n      const library = contracts[file][libName]\n      if (library) {\n        deployLibrary(file + ':' + libName, libName, library, contracts, (error, address) => {\n          if (error) {\n            return cbLibDeployed(error)\n          }\n          let hexAddress = address.toString('hex')\n          if (hexAddress.slice(0, 2) === '0x') {\n            hexAddress = hexAddress.slice(2)\n          }\n          contractBytecode = linkLibraryStandard(libName, hexAddress, contractBytecode, contract)\n          cbLibDeployed()\n        }, callbackStep, callbackDeployLibrary)\n      } else {\n        //@ts-ignore\n        cbLibDeployed('Cannot find compilation data of library ' + libName)\n      }\n    }, (error) => {\n      cbFile(error)\n    })\n  }, (error) => {\n    if (error) {\n      callbackStep(error)\n    }\n    callback(error, contractBytecode)\n  })\n}\n\nexport function linkBytecodeLegacy (contract, contracts, callback, callbackStep, callbackDeployLibrary) {\n  const libraryRefMatch = contract.evm.bytecode.object.match(/__([^_]{1,36})__/)\n  if (!libraryRefMatch) {\n    return callback('Invalid bytecode format.')\n  }\n  const libraryName = libraryRefMatch[1]\n  // file_name:library_name\n  const libRef = libraryName.match(/(.*):(.*)/)\n  if (!libRef) {\n    return callback('Cannot extract library reference ' + libraryName)\n  }\n  if (!contracts[libRef[1]] || !contracts[libRef[1]][libRef[2]]) {\n    return callback('Cannot find library reference ' + libraryName)\n  }\n  const libraryShortName = libRef[2]\n  const library = contracts[libRef[1]][libraryShortName]\n  if (!library) {\n    return callback('Library ' + libraryName + ' not found.')\n  }\n  deployLibrary(libraryName, libraryShortName, library, contracts, (err, address) => {\n    if (err) {\n      return callback(err)\n    }\n    let hexAddress = address.toString('hex')\n    if (hexAddress.slice(0, 2) === '0x') {\n      hexAddress = hexAddress.slice(2)\n    }\n    contract.evm.bytecode.object = linkLibrary(libraryName, hexAddress, contract.evm.bytecode.object)\n    linkBytecode(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  }, callbackStep, callbackDeployLibrary)\n}\n\nexport function linkBytecode (contract, contracts, callback?, callbackStep?, callbackDeployLibrary?) {\n  if (contract.evm.bytecode.object.indexOf('_') < 0) {\n    return callback(null, contract.evm.bytecode.object)\n  }\n  if (contract.evm.bytecode.linkReferences && Object.keys(contract.evm.bytecode.linkReferences).length) {\n    linkBytecodeStandard(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  } else {\n    linkBytecodeLegacy(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  }\n}\n\nexport function deployLibrary (libraryName, libraryShortName, library, contracts, callback, callbackStep, callbackDeployLibrary) {\n  const address = library.address\n  if (address) {\n    return callback(null, address)\n  }\n  const bytecode = library.evm.bytecode.object\n  if (bytecode.indexOf('_') >= 0) {\n    linkBytecode(library, contracts, (err, bytecode) => {\n      if (err) callback(err)\n      else {\n        library.evm.bytecode.object = bytecode\n        deployLibrary(libraryName, libraryShortName, library, contracts, callback, callbackStep, callbackDeployLibrary)\n      }\n    }, callbackStep, callbackDeployLibrary)\n  } else {\n    callbackStep(`creation of library ${libraryName} pending...`)\n    const data = { dataHex: bytecode, funAbi: { type: 'constructor' }, funArgs: [], contractBytecode: bytecode, contractName: libraryShortName, contractABI: library.abi }\n    callbackDeployLibrary({ data: data, useCall: false }, (err, txResult) => {\n      if (err) {\n        return callback(err)\n      }\n      const address = txResult.receipt.contractAddress\n      library.address = address\n      callback(err, address)\n    })\n  }\n}\n\nexport function linkLibraryStandardFromlinkReferences (libraryName, address, bytecode, linkReferences) {\n  for (const file in linkReferences) {\n    for (const libName in linkReferences[file]) {\n      if (libraryName === libName) {\n        bytecode = setLibraryAddress(address, bytecode, linkReferences[file][libName])\n      }\n    }\n  }\n  return bytecode\n}\n\nexport function linkLibraryStandard (libraryName, address, bytecode, contract) {\n  return linkLibraryStandardFromlinkReferences(libraryName, address, bytecode, contract.evm.bytecode.linkReferences)\n}\n\nexport function setLibraryAddress (address, bytecodeToLink, positions) {\n  if (positions) {\n    for (const pos of positions) {\n      const regpos = bytecodeToLink.match(new RegExp(`(.{${2 * pos.start}})(.{${2 * pos.length}})(.*)`))\n      if (regpos) {\n        bytecodeToLink = regpos[1] + address + regpos[3]\n      }\n    }\n  }\n  return bytecodeToLink\n}\n\nexport function linkLibrary (libraryName, address, bytecodeToLink) {\n  return linkBytecodeSolc(bytecodeToLink, { [libraryName]: addHexPrefix(address) })\n}\n\nexport function decodeResponse (response, fnabi) {\n  // Only decode if there supposed to be fields\n  if (fnabi.outputs && fnabi.outputs.length > 0) {\n    try {\n      let i\n      const outputTypes = []\n      for (i = 0; i < fnabi.outputs.length; i++) {\n        const type = fnabi.outputs[i].type\n        outputTypes.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(fnabi.outputs[i]) : type)\n      }\n      if (!response || !response.length) response = new Uint8Array(32 * fnabi.outputs.length) // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not enough data\n      // decode data\n      const abiCoder = new ethers.utils.AbiCoder()\n      const decodedObj = abiCoder.decode(outputTypes, response)\n\n      const json = {}\n      for (i = 0; i < outputTypes.length; i++) {\n        const name = fnabi.outputs[i].name\n        json[i] = outputTypes[i] + ': ' + (name ? name + ' ' + decodedObj[i] : decodedObj[i])\n      }\n\n      return json\n    } catch (e) {\n      return { error: 'Failed to decode output: ' + e }\n    }\n  }\n  return {}\n}\n\nexport function parseFunctionParams (params) {\n  const args = []\n  // Check if parameter string starts with array or string\n  let startIndex = isArrayOrStringStart(params, 0) ? -1 : 0\n  for (let i = 0; i < params.length; i++) {\n    // If a quote is received\n    if (params.charAt(i) === '\"') {\n      startIndex = -1\n      let endQuoteIndex = false\n      // look for closing quote. On success, push the complete string in arguments list\n      for (let j = i + 1; !endQuoteIndex; j++) {\n        if (params.charAt(j) === '\"') {\n          args.push(normalizeParam(params.substring(i + 1, j)))\n          endQuoteIndex = true\n          i = j\n        }\n        // Throw error if end of params string is arrived but couldn't get end quote\n        if (!endQuoteIndex && j === params.length - 1) {\n          throw new Error('invalid params')\n        }\n      }\n    } else if (params.charAt(i) === '[') { // If an array/struct opening bracket is received\n      startIndex = -1\n      let bracketCount = 1\n      let j\n      for (j = i + 1; bracketCount !== 0; j++) {\n        // Increase count if another array opening bracket is received (To handle nested array)\n        if (params.charAt(j) === '[') {\n          bracketCount++\n        } else if (params.charAt(j) === ']') { // // Decrease count if an array closing bracket is received (To handle nested array)\n          bracketCount--\n        }\n        // Throw error if end of params string is arrived but couldn't get end of tuple\n        if (bracketCount !== 0 && j === params.length - 1) {\n          throw new Error('invalid tuple params')\n        }\n        if (bracketCount === 0) break\n      }\n      args.push(parseFunctionParams(params.substring(i + 1, j)))\n      i = j - 1\n    } else if (params.charAt(i) === ',' || i === params.length - 1) { // , or end of string\n      // if startIndex >= 0, it means a parameter was being parsed, it can be first or other parameter\n      if (startIndex >= 0) {\n        let param = params.substring(startIndex, i === params.length - 1 ? undefined : i)\n        param = normalizeParam(param)\n        args.push(param)\n      }\n      // Register start index of a parameter to parse\n      startIndex = isArrayOrStringStart(params, i + 1) ? -1 : i + 1\n    }\n  }\n  return args\n}\n\nexport const normalizeParam = (param) => {\n  param = param.trim()\n  if (param.startsWith('0x')) param = `${param}`\n  if (/[0-9]/g.test(param)) param = `${param}`\n\n  // fromExponential\n  if (!param.startsWith('0x')) {\n    const regSci = REGEX_SCIENTIFIC.exec(param)\n    const exponents = regSci ? regSci[2] : null\n    if (regSci && REGEX_DECIMAL.exec(exponents)) {\n      try {\n        let paramTrimmed = param.replace(/^'/g, '').replace(/'$/g, '')\n        paramTrimmed = paramTrimmed.replace(/^\"/g, '').replace(/\"$/g, '')\n        param = fromExponential(paramTrimmed)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  if (typeof param === 'string') {\n    if (param === 'true') param = true\n    if (param === 'false') param = false\n  }\n  return param\n}\n\nexport const REGEX_SCIENTIFIC = /^-?(\\d+\\.?\\d*)e\\d*(\\d+)$/\n\nexport const REGEX_DECIMAL = /^\\d*/\n\nexport function isArrayOrStringStart (str, index) {\n  return str.charAt(index) === '\"' || str.charAt(index) === '['\n}\n","'use strict'\nimport { ethers } from 'ethers'\n\nexport function makeFullTypeDefinition (typeDef) {\n  if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n    const innerTypes = typeDef.components.map((innerType) => { return makeFullTypeDefinition(innerType) })\n    return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}`\n  }\n  return typeDef.type\n}\n\nexport function encodeParams (funABI, args) {\n  const types = []\n  if (funABI.inputs && funABI.inputs.length) {\n    for (let i = 0; i < funABI.inputs.length; i++) {\n      const type = funABI.inputs[i].type\n      if (type === 'bool') {\n        if (args[i] === false || args[i] === 'false' || args[i] === '0' || args[i] === 0) args[i] = false\n        else if (args[i] === true || args[i] === 'true' || args[i] === '1' || args[i] === 1) args[i] = true\n        else throw new Error(`provided value for boolean is invalid: ${args[i]}`)\n      }\n      types.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(funABI.inputs[i]) : type)\n      if (args.length < types.length) {\n        args.push('')\n      }\n    }\n  }\n\n  // NOTE: the caller will concatenate the bytecode and this\n  //       it could be done here too for consistency\n  const abiCoder = new ethers.utils.AbiCoder()\n  return abiCoder.encode(types, args)\n}\n\nexport function encodeFunctionId (funABI) {\n  if (funABI.type === 'fallback' || funABI.type === 'receive') return '0x'\n  const abi = new ethers.utils.Interface([funABI])\n  return abi.getSighash(funABI.name)\n}\n\nexport function getFunctionFragment (funABI): ethers.utils.Interface {\n  if (funABI.type === 'fallback' || funABI.type === 'receive') return null\n  return new ethers.utils.Interface([funABI])\n}\n\nexport function sortAbiFunction (contractabi) {\n  // Check if function is constant (introduced with Solidity 0.6.0)\n  const isConstant = ({ stateMutability }) => stateMutability === 'view' || stateMutability === 'pure'\n  // Sorts the list of ABI entries. Constant functions will appear first,\n  // followed by non-constant functions. Within those t wo groupings, functions\n  // will be sorted by their names.\n  return contractabi.sort(function (a, b) {\n    if (isConstant(a) && !isConstant(b)) {\n      return 1\n    } else if (isConstant(b) && !isConstant(a)) {\n      return -1\n    }\n    // If we reach here, either a and b are both constant or both not; sort by name then\n    // special case for fallback, receive and constructor function\n    if (a.type === 'function' && typeof a.name !== 'undefined') {\n      return a.name.localeCompare(b.name)\n    } else if (a.type === 'constructor' || a.type === 'fallback' || a.type === 'receive') {\n      return 1\n    }\n  })\n}\n\nexport function getConstructorInterface (abi) {\n  const funABI = { name: '', inputs: [], type: 'constructor', payable: false, outputs: []}\n  if (typeof abi === 'string') {\n    try {\n      abi = JSON.parse(abi)\n    } catch (e) {\n      console.log('exception retrieving ctor abi ' + abi)\n      return funABI\n    }\n  }\n\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'constructor') {\n      funABI.inputs = abi[i].inputs || []\n      funABI.payable = abi[i].payable\n      funABI['stateMutability'] = abi[i].stateMutability\n      break\n    }\n  }\n\n  return funABI\n}\n\nexport function serializeInputs (fnAbi) {\n  let serialized = '('\n  if (fnAbi.inputs && fnAbi.inputs.length) {\n    serialized += fnAbi.inputs.map((input) => { return input.type }).join(',')\n  }\n  serialized += ')'\n  return serialized\n}\n\nexport function extractSize (type) {\n  const size = type.match(/([a-zA-Z0-9])(\\[.*\\])/)\n  return size ? size[2] : ''\n}\n\nexport function getFunctionLiner (fn, detailTuple: boolean = true) {\n  /*\n    if detailsTuple is True, this will return something like fnName((uint, string))\n    if detailsTuple is False, this will return something like fnName(tuple)\n  */\n  return fn.name + '(' + fn.inputs.map((value) => {\n    if (detailTuple && value.components) {\n      const fullType = makeFullTypeDefinition(value)\n      return fullType.replace(/tuple/g, '') // return of makeFullTypeDefinition might contain `tuple`, need to remove it cause `methodIdentifier` (fnName) does not include `tuple` keyword\n    } else {\n      return value.type\n    }\n  }).join(',') + ')'\n}\n\nexport function getFunction (abi, fnName) {\n  for (let i = 0; i < abi.length; i++) {\n    const fn = abi[i]\n    if (fn.type === 'function' && (fnName === getFunctionLiner(fn, true) || fnName === getFunctionLiner(fn, false))) {\n      return fn\n    }\n  }\n  return null\n}\n\nexport function getFallbackInterface (abi) {\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'fallback') {\n      return abi[i]\n    }\n  }\n}\n\nexport function getReceiveInterface (abi) {\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'receive') {\n      return abi[i]\n    }\n  }\n}\n\n/**\n  * return the contract obj of the given @arg name. Uses last compilation result.\n  * return null if not found\n  * @param {String} name    - contract name\n  * @returns contract obj and associated file: { contract, file } or null\n  */\nexport function getContract (contractName, contracts) {\n  for (const file in contracts) {\n    if (contracts[file][contractName]) {\n      return { object: contracts[file][contractName], file: file }\n    }\n  }\n  return null\n}\n\n/**\n  * call the given @arg cb (function) for all the contracts. Uses last compilation result\n  * stop visiting when cb return true\n  * @param {Function} cb    - callback\n  */\nexport function visitContracts (contracts, cb) {\n  for (const file in contracts) {\n    for (const name in contracts[file]) {\n      if (cb({ name: name, object: contracts[file][name], file: file })) return\n    }\n  }\n}\n\nexport function inputParametersDeclarationToString (abiinputs) {\n  const inputs = (abiinputs || []).map((inp) => inp.type + ' ' + inp.name)\n  return inputs.join(', ')\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { toBytes, addHexPrefix } from '@ethereumjs/util'\nimport { EventManager } from '../eventManager'\nimport { compareByteCode, getinputParameters } from '../util'\nimport { decodeResponse } from './txFormat'\nimport { getFunction, getReceiveInterface, getConstructorInterface, visitContracts, makeFullTypeDefinition } from './txHelper'\n\nfunction addExecutionCosts (txResult, tx, execResult) {\n  if (txResult) {\n    if (execResult) {\n      tx.returnValue = execResult.returnValue\n      if (execResult.executionGasUsed) tx.executionCost = execResult.executionGasUsed.toString(10)\n    }\n    if (txResult.receipt && txResult.receipt.gasUsed) tx.transactionCost = txResult.receipt.gasUsed.toString(10)\n  }\n}\n\n/**\n  * poll web3 each 2s if web3\n  * listen on transaction executed event if VM\n  * attention: blocks returned by the event `newBlock` have slightly different json properties whether web3 or the VM is used\n  * trigger 'newBlock'\n  *\n  */\nexport class TxListener {\n  event\n  executionContext\n  _resolvedTransactions\n  _api\n  _resolvedContracts\n  _isListening: boolean\n  _listenOnNetwork:boolean\n  _loopId\n  blocks\n\n  constructor (opt, executionContext) {\n    this.event = new EventManager()\n    // has a default for now for backwards compatibility\n    this.executionContext = executionContext\n    this._api = opt.api\n    this._resolvedTransactions = {}\n    this._resolvedContracts = {}\n    this._isListening = false\n    this._listenOnNetwork = false\n    this._loopId = null\n    this.init()\n    this.executionContext.event.register('contextChanged', (context) => {\n      if (this._isListening) {\n        this.stopListening()\n        this.startListening()\n      }\n    })\n\n    opt.event.udapp.register('callExecuted', async (error, from, to, data, lookupOnly, txResult) => {\n      if (error) return\n      // we go for that case if\n      // in VM mode\n      // in web3 mode && listen remix txs only\n      if (!this._isListening) return // we don't listen\n      if (this._loopId) return // we seems to already listen on a \"web3\" network\n\n      let returnValue\n      let execResult\n      if (this.executionContext.isVM()) {\n        execResult = await this.executionContext.web3().remix.getExecutionResultFromSimulator(txResult.transactionHash)\n        returnValue = toBytes(execResult.returnValue)\n      } else {\n        returnValue = toBytes(addHexPrefix(txResult.result))\n      }\n      const call = {\n        from: from,\n        to: to,\n        input: data,\n        hash: txResult.transactionHash ? txResult.transactionHash : 'call' + (from || '') + to + data,\n        isCall: true,\n        returnValue,\n        envMode: this.executionContext.getProvider()\n      }\n\n      addExecutionCosts(txResult, call, execResult)\n      this._resolveTx(call, call, (error, resolvedData) => {\n        if (!error) {\n          this.event.trigger('newCall', [call])\n        }\n      })\n    })\n\n    opt.event.udapp.register('transactionExecuted', (error, from, to, data, lookupOnly, txResult) => {\n      if (error) return\n      if (lookupOnly) return\n      // we go for that case if\n      // in VM mode\n      // in web3 mode && listen remix txs only\n      if (!this._isListening) return // we don't listen\n      if (this._loopId) return // we seems to already listen on a \"web3\" network\n      this.executionContext.web3().eth.getTransaction(txResult.transactionHash).then(async tx=>{\n        let execResult\n        if (this.executionContext.isVM()) {\n          execResult = await this.executionContext.web3().remix.getExecutionResultFromSimulator(txResult.transactionHash)\n        }\n\n        addExecutionCosts(txResult, tx, execResult)\n        tx.envMode = this.executionContext.getProvider()\n        tx.status = txResult.receipt.status\n        this._resolve([tx])\n      }).catch(error=>console.log(error))\n    })\n  }\n\n  /**\n    * define if txlistener should listen on the network or if only tx created from remix are managed\n    *\n    * @param {Bool} type - true if listen on the network\n    */\n  setListenOnNetwork (listenOnNetwork) {\n    this._listenOnNetwork = listenOnNetwork\n    if (this._loopId) {\n      clearInterval(this._loopId)\n    }\n    this._listenOnNetwork ? this.startListening() : this.stopListening()\n  }\n\n  /**\n    * reset recorded transactions\n    */\n  init () {\n    this.blocks = []\n  }\n\n  /**\n    * start listening for incoming transactions\n    *\n    * @param {String} type - type/name of the provider to add\n    * @param {Object} obj  - provider\n    */\n  startListening () {\n    this.init()\n    this._isListening = true\n    if (this._listenOnNetwork && !this.executionContext.isVM()) {\n      this._startListenOnNetwork()\n    }\n  }\n\n  /**\n    * stop listening for incoming transactions. do not reset the recorded pool.\n    *\n    * @param {String} type - type/name of the provider to add\n    * @param {Object} obj  - provider\n    */\n  stopListening () {\n    if (this._loopId) {\n      clearInterval(this._loopId)\n    }\n    this._loopId = null\n    this._isListening = false\n  }\n\n  async _startListenOnNetwork () {\n    let lastSeenBlock = this.executionContext.lastBlock?.number - BigInt(1)\n    let processingBlock = false\n\n    const processBlocks = async () => {\n      if (!this._isListening) return\n      if (processingBlock) return\n      processingBlock = true\n      const currentLoopId = this._loopId\n      if (this._loopId === null) {\n        processingBlock = false\n        return\n      }\n      if (!lastSeenBlock) {\n        lastSeenBlock = this.executionContext.lastBlock?.number // trying to resynchronize\n        console.log('listen on blocks, resynchronising')\n        processingBlock = false\n        return\n      }\n      const current = this.executionContext.lastBlock?.number\n      if (!current) {\n        console.log(new Error('no last block found'))\n        processingBlock = false\n        return\n      }\n      if (currentLoopId === this._loopId && lastSeenBlock < current) {\n        while (lastSeenBlock <= current) {\n          try {\n            if (!this._isListening) break\n            await this._manageBlock(lastSeenBlock)\n          } catch (e) {\n            console.log(e)\n          }\n          lastSeenBlock++\n        }\n        lastSeenBlock = current\n      }\n      processingBlock = false\n    }\n    this._loopId = setInterval(processBlocks, 20000)\n    processBlocks()\n  }\n\n  async _manageBlock (blockNumber) {\n    try {\n      const result = await this.executionContext.web3().eth.getBlock(blockNumber, true)\n      return await this._newBlock(Object.assign({ type: 'web3' }, result))\n    } catch (e) {}\n  }\n\n  /**\n    * try to resolve the contract name from the given @arg address\n    *\n    * @param {String} address - contract address to resolve\n    * @return {String} - contract name\n    */\n  resolvedContract (address) {\n    if (this._resolvedContracts[address]) return this._resolvedContracts[address].name\n    return null\n  }\n\n  /**\n    * try to resolve the transaction from the given @arg txHash\n    *\n    * @param {String} txHash - contract address to resolve\n    * @return {String} - contract name\n    */\n  resolvedTransaction (txHash) {\n    return this._resolvedTransactions[txHash]\n  }\n\n  async _newBlock (block) {\n    this.blocks.push(block)\n    await this._resolve(block.transactions)\n    this.event.trigger('newBlock', [block])\n  }\n\n  _resolveAsync (tx) {\n    return new Promise((resolve, reject) => {\n      this._api.resolveReceipt(tx, (error, receipt) => {\n        if (error) return reject(error)\n        this._resolveTx(tx, receipt, (error, resolvedData) => {\n          if (error) return reject(error)\n          if (resolvedData) {\n            this.event.trigger('txResolved', [tx, receipt, resolvedData])\n          }\n          this.event.trigger('newTransaction', [tx, receipt])\n          resolve({})\n        })\n      })\n    })\n  }\n\n  async _resolve (transactions) {\n    for (const tx of transactions) {\n      try {\n        if (!this._isListening) break\n        await this._resolveAsync(tx)\n      } catch (e) {}\n    }\n  }\n\n  _resolveTx (tx, receipt, cb) {\n    const contracts = this._api.contracts()\n    if (!contracts) return cb()\n    let fun\n    let contract\n    if (!tx.to || tx.to === '0x0') { // testrpc returns 0x0 in that case\n      // contract creation / resolve using the creation bytes code\n      // if web3: we have to call getTransactionReceipt to get the created address\n      // if VM: created address already included\n      const code = tx.input\n      contract = this._tryResolveContract(code, contracts, true)\n      if (contract) {\n        const address = receipt.contractAddress\n        this._resolvedContracts[address] = contract\n        fun = this._resolveFunction(contract, tx, true)\n        if (this._resolvedTransactions[tx.hash]) {\n          this._resolvedTransactions[tx.hash].contractAddress = address\n        }\n        return cb(null, { to: null, contractName: contract.name, function: fun, creationAddress: address })\n      }\n      return cb()\n    } else {\n      // first check known contract, resolve against the `runtimeBytecode` if not known\n      contract = this._resolvedContracts[tx.to]\n      if (!contract) {\n        this.executionContext.web3().eth.getCode(tx.to).then(code=>{\n          if (code) {\n            const contract = this._tryResolveContract(code, contracts, false)\n            if (contract) {\n              this._resolvedContracts[tx.to] = contract\n              const fun = this._resolveFunction(contract, tx, false)\n              return cb(null, { to: tx.to, contractName: contract.name, function: fun })\n            }\n          }\n          return cb()\n        }).catch(error=>cb(error))\n        return\n      }\n      if (contract) {\n        fun = this._resolveFunction(contract, tx, false)\n        return cb(null, { to: tx.to, contractName: contract.name, function: fun })\n      }\n      return cb()\n    }\n  }\n\n  _resolveFunction (contract, tx, isCtor) {\n    if (!contract) {\n      console.log('txListener: cannot resolve contract - contract is null')\n      return\n    }\n    const abi = contract.object.abi\n    const inputData = tx.input.replace('0x', '')\n    if (!isCtor) {\n      const methodIdentifiers = contract.object.evm.methodIdentifiers\n      for (const fn in methodIdentifiers) {\n        if (methodIdentifiers[fn] === inputData.substring(0, 8)) {\n          const fnabi = getFunction(abi, fn)\n          this._resolvedTransactions[tx.hash] = {\n            contractName: contract.name,\n            to: tx.to,\n            fn: fn,\n            params: this._decodeInputParams(inputData.substring(8), fnabi)\n          }\n          if (tx.returnValue) {\n            this._resolvedTransactions[tx.hash].decodedReturnValue = decodeResponse(tx.returnValue, fnabi)\n          }\n          return this._resolvedTransactions[tx.hash]\n        }\n      }\n      // receive function\n      if (!inputData && getReceiveInterface(abi)) {\n        this._resolvedTransactions[tx.hash] = {\n          contractName: contract.name,\n          to: tx.to,\n          fn: '(receive)',\n          params: null\n        }\n      } else {\n        // fallback function\n        this._resolvedTransactions[tx.hash] = {\n          contractName: contract.name,\n          to: tx.to,\n          fn: '(fallback)',\n          params: null\n        }\n      }\n    } else {\n      const bytecode = contract.object.evm.bytecode.object\n      let params = null\n      if (bytecode && bytecode.length) {\n        params = this._decodeInputParams(getinputParameters(inputData), getConstructorInterface(abi))\n      }\n      this._resolvedTransactions[tx.hash] = {\n        contractName: contract.name,\n        to: null,\n        fn: '(constructor)',\n        params: params\n      }\n    }\n    return this._resolvedTransactions[tx.hash]\n  }\n\n  _tryResolveContract (codeToResolve, compiledContracts, isCreation) {\n    let found = null\n    visitContracts(compiledContracts, (contract) => {\n      const bytes = isCreation ? contract.object.evm.bytecode.object : contract.object.evm.deployedBytecode.object\n      if (compareByteCode(codeToResolve, '0x' + bytes)) {\n        found = contract\n        return true\n      }\n    })\n    return found\n  }\n\n  _decodeInputParams (data, abi) {\n    data = toBytes(addHexPrefix(data))\n    if (!data.length) data = new Uint8Array(32 * abi.inputs.length) // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not enough data\n\n    const inputTypes = []\n    for (let i = 0; i < abi.inputs.length; i++) {\n      const type = abi.inputs[i].type\n      inputTypes.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(abi.inputs[i]) : type)\n    }\n    const abiCoder = new ethers.utils.AbiCoder()\n    const decoded = abiCoder.decode(inputTypes, data)\n    const ret = {}\n    for (const k in abi.inputs) {\n      ret[abi.inputs[k].type + ' ' + abi.inputs[k].name] = decoded[k]\n    }\n    return ret\n  }\n}\n","'use strict'\nimport { EventManager } from '../eventManager'\n\nexport type Transaction = {\n  from: string,\n  to: string,\n  value: string,\n  data: string,\n  gasLimit: number,\n  useCall: boolean,\n  timestamp?: number\n  type: '0x1' | '0x2'\n}\n\nexport class TxRunner {\n  event\n  pendingTxs\n  queusTxs\n  opt\n  internalRunner\n  constructor (internalRunner, opt) {\n    this.opt = opt || {}\n    this.internalRunner = internalRunner\n    this.event = new EventManager()\n\n    this.pendingTxs = {}\n    this.queusTxs = []\n  }\n\n  rawRun (args: Transaction, confirmationCb, gasEstimationForceSend, promptCb, cb) {\n    run(this, args, args.timestamp || Date.now(), confirmationCb, gasEstimationForceSend, promptCb, cb)\n  }\n\n  execute (args: Transaction, confirmationCb, gasEstimationForceSend, promptCb, callback) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n    this.internalRunner.execute(args, confirmationCb, gasEstimationForceSend, promptCb, callback)\n  }\n}\n\nfunction run (self, tx: Transaction, stamp, confirmationCb, gasEstimationForceSend = null, promptCb = null, callback = null) {\n  if (Object.keys(self.pendingTxs).length) {\n    return self.queusTxs.push({ tx, stamp, confirmationCb, gasEstimationForceSend, promptCb, callback })\n  }\n  self.pendingTxs[stamp] = tx\n  self.execute(tx, confirmationCb, gasEstimationForceSend, promptCb, function (error, result) {\n    delete self.pendingTxs[stamp]\n    if (callback && typeof callback === 'function') callback(error, result)\n    if (self.queusTxs.length) {\n      const next = self.queusTxs.pop()\n      run(self, next.tx, next.stamp, next.confirmationCb, next.gasEstimationForceSend, next.promptCb, next.callback)\n    }\n  })\n}\n","'use strict'\nimport { RunBlockResult, RunTxResult } from '@ethereumjs/vm'\nimport { ConsensusType } from '@ethereumjs/common'\nimport { LegacyTransaction, FeeMarketEIP1559Transaction } from '@ethereumjs/tx'\nimport { Block } from '@ethereumjs/block'\nimport { bytesToHex, Address, hexToBytes } from '@ethereumjs/util'\nimport { EVM } from '@ethereumjs/evm'\nimport type { Account } from '@ethereumjs/util'\nimport { EventManager } from '../eventManager'\nimport { LogsManager } from './logsManager'\nimport type { Transaction as InternalTransaction } from './txRunner'\n\nexport type VMexecutionResult = {\n  result: RunTxResult,\n  transactionHash: string\n  block: Block,\n  tx: LegacyTransaction\n}\n\nexport type VMExecutionCallBack = (error: string | Error, result?: VMexecutionResult) => void\n\nexport class TxRunnerVM {\n  event\n  blockNumber\n  pendingTxs\n  vmaccounts\n  queusTxs\n  blocks: Uint8Array[]\n  logsManager\n  commonContext\n  blockParentHash\n  nextNonceForCall: number\n  standaloneTx: boolean\n  getVMObject: () => any\n\n  constructor (vmaccounts, api, getVMObject, blocks: Uint8Array[] = []) {\n    this.event = new EventManager()\n    this.logsManager = new LogsManager()\n    // has a default for now for backwards compatibility\n    this.getVMObject = getVMObject\n    this.commonContext = this.getVMObject().common\n    this.pendingTxs = {}\n    this.vmaccounts = vmaccounts\n    this.queusTxs = []\n    /*\n      txHash is generated using the nonce,\n      in order to have unique transaction hash, we need to keep using different nonce (in case of a call)\n      so we increment this value after each call.\n      For this to function we also need to skip nonce validation, in the vm: `{ skipNonce: true }`\n    */\n    this.nextNonceForCall = 0\n\n    const vm = this.getVMObject().vm\n    if (Array.isArray(blocks) && (blocks || []).length > 0) {\n      const lastBlock = Block.fromRLPSerializedBlock(blocks[blocks.length - 1], { common: this.commonContext })\n\n      this.blockParentHash = lastBlock.hash()\n      this.blocks = blocks\n    } else {\n      this.blockParentHash = vm.blockchain.genesisBlock.hash()\n      this.blocks = [vm.blockchain.genesisBlock.serialize()]\n    }\n  }\n\n  execute (args: InternalTransaction, confirmationCb, gasEstimationForceSend, promptCb, callback: VMExecutionCallBack) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n\n    try {\n      this.runInVm(args.from, args.to, data, args.value, args.gasLimit, args.useCall, callback)\n    } catch (e) {\n      callback(e, null)\n    }\n  }\n\n  async runInVm (from: string, to: string, data: string, value: string, gasLimit: number, useCall: boolean, callback: VMExecutionCallBack) {\n    let account\n    if (!from && useCall && Object.keys(this.vmaccounts).length) {\n      from = Object.keys(this.vmaccounts)[0]\n      account = this.vmaccounts[from]\n    } else account = this.vmaccounts[from]\n\n    if (!account) {\n      return callback('Invalid account selected')\n    }\n\n    try {\n      const res = await this.getVMObject().stateManager.getAccount(Address.fromString(from))\n      const EIP1559 = this.commonContext.hardfork() !== 'berlin' // berlin is the only pre eip1559 fork that we handle.\n      let tx\n      if (!EIP1559) {\n        tx = LegacyTransaction.fromTxData({\n          nonce: useCall ? this.nextNonceForCall : res.nonce,\n          gasPrice: '0x1',\n          gasLimit: gasLimit,\n          to: to,\n          value: value,\n          data: hexToBytes(data)\n        }, { common: this.commonContext }).sign(account.privateKey)\n      } else {\n        tx = FeeMarketEIP1559Transaction.fromTxData({\n          nonce: useCall ? this.nextNonceForCall : res.nonce,\n          maxPriorityFeePerGas: '0x01',\n          maxFeePerGas: '0x7',\n          gasLimit: gasLimit,\n          to: to,\n          value: value,\n          data: hexToBytes(data)\n        }).sign(account.privateKey)\n      }\n      if (useCall) this.nextNonceForCall++\n\n      const coinbases = ['0x0e9281e9c6a0808672eaba6bd1220e144c9bb07a', '0x8945a1288dc78a6d8952a92c77aee6730b414778', '0x94d76e24f818426ae84aa404140e8d5f60e10e7e']\n      const difficulties = [69762765929000, 70762765929000, 71762765929000]\n      const difficulty = this.commonContext.consensusType() === ConsensusType.ProofOfStake ? 0 : difficulties[this.blocks.length % difficulties.length]\n      const block = Block.fromBlockData({\n        header: {\n          timestamp: new Date().getTime() / 1000 | 0,\n          number: this.blocks.length,\n          coinbase: coinbases[this.blocks.length % coinbases.length],\n          difficulty,\n          gasLimit,\n          baseFeePerGas: EIP1559 ? '0x1' : undefined,\n          parentHash: this.blockParentHash\n        },\n        transactions: [tx]\n      }, { common: this.commonContext })\n\n      // standaloneTx represents a gas estimation call\n      if (this.standaloneTx || useCall) {\n        const root = await this.getVMObject().stateManager.getStateRoot()\n        this.runBlockInVm(tx, block, async (err, result) => {\n          await this.getVMObject().stateManager.setStateRoot(root)\n          callback(err, result)\n        })\n      } else {\n        this.blockParentHash = block.hash()\n        this.runBlockInVm(tx, block, async (err, result) => {\n          if (!err) {\n            if (!useCall) {\n              this.getVMObject().vm.blockchain.putBlock(block)\n              this.blocks.push(block.serialize())\n            }\n          }\n          callback(err, result)\n        })\n      }\n    } catch (e) {\n      callback(e)\n    }\n  }\n\n  runTxInVm (tx, block, callback) {\n    this.getVMObject().vm.runTx({ tx, skipNonce: true, skipBlockValidation: true, skipBalance: false }).then((result: RunTxResult) => {\n      callback(null, {\n        result,\n        transactionHash: bytesToHex(Buffer.from(tx.hash())),\n        block,\n        tx\n      })\n    }).catch(function (err) {\n      callback(err)\n    })\n  }\n\n  runBlockInVm (tx, block, callback) {\n    this.getVMObject().vm.runBlock({ block: block, generate: true, skipNonce: true, skipBlockValidation: true, skipBalance: false }).then((results: RunBlockResult) => {\n      const result: RunTxResult = results.results[0]\n      callback(null, {\n        result,\n        transactionHash: bytesToHex(Buffer.from(tx.hash())),\n        block,\n        tx\n      })\n    }).catch(function (err) {\n      callback(err)\n    })\n  }\n}\n","'use strict'\nimport { EventManager } from '../eventManager'\nimport type { Transaction as InternalTransaction } from './txRunner'\nimport Web3 from 'web3'\nimport { toBigInt, toHex } from 'web3-utils'\n\nexport class TxRunnerWeb3 {\n  event\n  _api\n  getWeb3: () => Web3\n  currentblockGasLimit: () => number\n\n  constructor (api, getWeb3, currentblockGasLimit) {\n    this.event = new EventManager()\n    this.getWeb3 = getWeb3\n    this.currentblockGasLimit = currentblockGasLimit\n    this._api = api\n  }\n\n  async _executeTx (tx, network, txFee, api, promptCb, callback) {\n    if (network && network.lastBlock && network.lastBlock.baseFeePerGas) {\n      // the sending stack (web3.js / metamask need to have the type defined)\n      // this is to avoid the following issue: https://github.com/MetaMask/metamask-extension/issues/11824\n      tx.type = '0x2'\n    } else {\n      // tx.type = '0x1'\n    }\n    if (txFee) {\n      if (txFee.baseFeePerGas) {\n        tx.maxPriorityFeePerGas = toHex(BigInt(this.getWeb3().utils.toWei(txFee.maxPriorityFee, 'gwei')))\n        tx.maxFeePerGas = toHex(BigInt(this.getWeb3().utils.toWei(txFee.maxFee, 'gwei')))\n        tx.type = '0x2'\n      } else {\n        tx.gasPrice = toHex(BigInt(this.getWeb3().utils.toWei(txFee.gasPrice, 'gwei')))\n        // tx.type = '0x1'\n      }\n    }\n\n    let currentDateTime = new Date();\n    const start = currentDateTime.getTime() / 1000\n    const cb = (err, resp) => {\n      if (err) {\n        return callback(err, resp)\n      }\n      this.event.trigger('transactionBroadcasted', [resp])\n      const listenOnResponse = () => {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n          const receipt = await tryTillReceiptAvailable(resp, this.getWeb3())\n          tx = await tryTillTxAvailable(resp, this.getWeb3())\n          currentDateTime = new Date();\n          const end = currentDateTime.getTime() / 1000\n          console.log('tx duration', end - start)\n          resolve({\n            receipt,\n            tx,\n            transactionHash: receipt ? receipt['transactionHash'] : null\n          })\n        })\n      }\n      listenOnResponse().then((txData) => { callback(null, txData) }).catch((error) => { callback(error) })\n    }\n\n    if (api.personalMode()) {\n      promptCb(\n        async (value) => {\n          try {\n            const res = await (this.getWeb3() as any).eth.personal.sendTransaction({ ...tx, value }, { checkRevertBeforeSending: false, ignoreGasPricing: true })\n            cb(null, res.transactionHash)\n          } catch (e) {\n            console.log(`Send transaction failed: ${e.message} . if you use an injected provider, please check it is properly unlocked. `)\n            // in case the receipt is available, we consider that only the execution failed but the transaction went through.\n            // So we don't consider this to be an error.\n            if (e.receipt) cb(null, e.receipt.transactionHash)\n            else cb(e, null)\n          }\n        },\n        () => {\n          return callback('Canceled by user.')\n        }\n      )\n    } else {\n      try {\n        const res = await this.getWeb3().eth.sendTransaction(tx, null, { checkRevertBeforeSending: false, ignoreGasPricing: true })\n        cb(null, res.transactionHash)\n      } catch (e) {\n        console.log(`Send transaction failed: ${e.message} . if you use an injected provider, please check it is properly unlocked. `)\n        // in case the receipt is available, we consider that only the execution failed but the transaction went through.\n        // So we don't consider this to be an error.\n        if (e.receipt) cb(null, e.receipt.transactionHash)\n        else cb(e, null)\n      }\n    }\n  }\n\n  execute (args: InternalTransaction, confirmationCb, gasEstimationForceSend, promptCb, callback) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n\n    return this.runInNode(args.from, args.to, data, args.value, args.gasLimit, args.useCall, args.timestamp, confirmationCb, gasEstimationForceSend, promptCb, callback)\n  }\n\n  runInNode (from, to, data, value, gasLimit, useCall, timestamp, confirmCb, gasEstimationForceSend, promptCb, callback) {\n    const tx = { from: from, to: to, data: data, value: value }\n    if (!from) return callback('the value of \"from\" is not defined. Please make sure an account is selected.')\n    if (useCall) {\n      if (this._api && this._api.isVM()) {\n        (this.getWeb3() as any).remix.registerCallId(timestamp)\n      }\n      this.getWeb3().eth.call(tx)\n        .then((result: any) => callback(null, {\n          result: result\n        }))\n        .catch(error => callback(error))\n      return\n    }\n    this._api.detectNetwork((errNetWork, network) => {\n      if (errNetWork) {\n        console.log(errNetWork)\n        return\n      }\n      const txCopy = { ...tx, type: undefined, maxFeePerGas: undefined, gasPrice: undefined }\n      if (network && network.lastBlock) {\n        if (network.lastBlock.baseFeePerGas) {\n          // the sending stack (web3.js / metamask need to have the type defined)\n          // this is to avoid the following issue: https://github.com/MetaMask/metamask-extension/issues/11824\n          txCopy.type = '0x2'\n          txCopy.maxFeePerGas = Math.ceil(Number((toBigInt(network.lastBlock.baseFeePerGas) + toBigInt(network.lastBlock.baseFeePerGas) / BigInt(3)).toString()))\n        } else {\n          txCopy.type = '0x1'\n          txCopy.gasPrice = undefined\n        }\n      }\n      this.getWeb3().eth.estimateGas(txCopy)\n        .then(gasEstimation => {\n          gasEstimationForceSend(null, () => {\n            /*\n            * gasLimit is a value that can be set in the UI to hardcap value that can be put in a tx.\n            * e.g if the gasestimate\n            */\n            if (gasLimit !== '0x0' && gasEstimation > gasLimit) {\n              return callback(`estimated gas for this transaction (${gasEstimation}) is higher than gasLimit set in the configuration  (${gasLimit}). Please raise the gas limit.`)\n            }\n\n            if (gasLimit === '0x0') {\n              tx['gas'] = gasEstimation\n            } else {\n              tx['gas'] = gasLimit\n            }\n\n            if (this._api.config.getUnpersistedProperty('doNotShowTransactionConfirmationAgain')) {\n              return this._executeTx(tx, network, null, this._api, promptCb, callback)\n            }\n\n            confirmCb(network, tx, tx['gas'], (txFee) => {\n              return this._executeTx(tx, network, txFee, this._api, promptCb, callback)\n            }, (error) => {\n              callback(error)\n            })\n          }, callback)\n        })\n        .catch(err => {\n          if (err && err.message.indexOf('Invalid JSON RPC response') !== -1) {\n            // // @todo(#378) this should be removed when https://github.com/WalletConnect/walletconnect-monorepo/issues/334 is fixed\n            callback(new Error('Gas estimation failed because of an unknown internal error. This may indicated that the transaction will fail.'))\n          }\n          err = network.name === 'VM' ? null : err // just send the tx if \"VM\"\n          gasEstimationForceSend(err, () => {\n            const defaultGasLimit = 3000000\n            tx['gas'] = gasLimit === '0x0' ? '0x' + defaultGasLimit.toString(16) : gasLimit\n\n            if (this._api.config.getUnpersistedProperty('doNotShowTransactionConfirmationAgain')) {\n              return this._executeTx(tx, network, null, this._api, promptCb, callback)\n            }\n\n            confirmCb(network, tx, tx['gas'], (txFee) => {\n              return this._executeTx(tx, network, txFee, this._api, promptCb, callback)\n            }, (error) => {\n              callback(error)\n            })\n          }, callback)\n        })\n    })\n  }\n}\n\nasync function tryTillReceiptAvailable (txhash: string, web3: Web3) {\n  try {\n    const receipt = await web3.eth.getTransactionReceipt(txhash)\n    if (receipt) {\n      if (!receipt.to && !receipt.contractAddress) {\n        // this is a contract creation and the receipt doesn't contain a contract address. we have to keep polling...\n        console.log('this is a contract creation and the receipt does not contain a contract address. we have to keep polling...')\n      } else\n        return receipt\n    }\n  } catch (e) {}\n  await pause()\n  return await tryTillReceiptAvailable(txhash, web3)\n}\n\nasync function tryTillTxAvailable (txhash: string, web3: Web3) {\n  try {\n    const tx = await web3.eth.getTransaction(txhash)\n    if (tx && tx.blockHash) return tx\n  } catch (e) {}\n  return await tryTillTxAvailable(txhash, web3)\n}\n\nasync function pause () { return new Promise((resolve, reject) => { setTimeout(resolve, 500) }) }\n","'use strict'\nimport { BN } from 'bn.js'\nimport { bytesToHex } from '@ethereumjs/util'\nimport { isBigInt } from 'web3-validator'\n\nexport function toInt (h) {\n  if (h.indexOf && h.indexOf('0x') === 0) {\n    return (new BN(h.replace('0x', ''), 16)).toString(10)\n  } else if ((h.constructor && h.constructor.name === 'BigNumber') || BN.isBN(h) || isBigInt(h)) {\n    return h.toString(10)\n  }\n  return h\n}\n\nexport const stringify = convertToString\n\nfunction convertToString (v) {\n  try {\n    if (v instanceof Array) {\n      const ret = []\n      for (const k in v) {\n        ret.push(convertToString(v[k]))\n      }\n      return ret\n    } else if (BN.isBN(v) || (v.constructor && v.constructor.name === 'BigNumber') || isBigInt(v)) {\n      return v.toString(10)\n    } else if (v._isBigNumber) {\n      return toInt(v._hex)\n    } else if (v._isBuffer) {\n      return bytesToHex(v)\n    } else if (typeof v === 'object') {\n      const retObject = {}\n      for (const i in v) {\n        retObject[i] = convertToString(v[i])\n      }\n      return retObject\n    } else {\n      return v\n    }\n  } catch (e) {\n    console.log(e)\n    return v\n  }\n}\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { encode, Input } from 'rlp'\nimport { toBytes, setLengthLeft, isHexString } from '@ethereumjs/util'\n\n/**\n * Creates Keccak hash of a Uint8Array input\n * @param a The input data (Uint8Array)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function(a: Uint8Array, bits: number = 256): Uint8Array {\n  switch (bits) {\n  case 224: {\n    return toBytes(keccak224(Buffer.from(a)))\n  }\n  case 256: {\n    return toBytes(k256(Buffer.from(a)))\n  }\n  case 384: {\n    return toBytes(keccak384(Buffer.from(a)))\n  }\n  case 512: {\n    return toBytes(keccak512(Buffer.from(a)))\n  }\n  default: {\n    throw new Error(`Invalid algorithm: keccak${bits}`)\n  }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function(a: Buffer): Uint8Array {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function(a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function(a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(Buffer.from(toBytes(a)), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function(a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(Buffer.from(toBytes(a)), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function(a: any): Buffer {\n  a = toBytes(a)\n  return createHash('sha256')\n    .update(a)\n    .digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function(a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function(a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function(a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function(a: any, padded: boolean): Buffer {\n  a = toBytes(a)\n  const hash = createHash('rmd160')\n    .update(a)\n    .digest()\n  if (padded === true) {\n    return Buffer.from(setLengthLeft(hash, 32))\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function(a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function(a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function(a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function(a: Input): Buffer {\n  return Buffer.from(keccak(Buffer.from(encode(a))))\n}\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function(input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function(input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function(input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function(input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}","export function compilerInput (contracts) {\n  return JSON.stringify({\n    language: 'Solidity',\n    sources: {\n      'test.sol': {\n        content: contracts\n      }\n    },\n    settings: {\n      optimizer: {\n        enabled: false,\n        runs: 200\n      },\n      outputSelection: {\n        '*': {\n          '': ['ast'],\n          '*': ['abi', 'metadata', 'evm.legacyAssembly', 'evm.bytecode', 'evm.deployedBytecode', 'evm.methodIdentifiers', 'evm.gasEstimates']\n        }\n      }\n    }\n  })\n}\n","// Fetched from https://github.com/nomiclabs/hardhat/blob/ee4969a0a8f746f4775d4018326056d161066869/packages/hardhat-core/src/internal/hardhat-network/stack-traces/logger.ts#L47\n\nexport const ConsoleLogs = {\n  // Legacy method signatures before this PR: https://github.com/NomicFoundation/hardhat/pull/2964\n  1368866505: '()',\n  1309416733: '(int)',\n  4122065833: '(uint)',\n  1093685164: '(string)',\n  843419373: '(bool)',\n  741264322: '(address)',\n  199720790: '(bytes)',\n  1847107880: '(bytes1)',\n  3921027734: '(bytes2)',\n  763578662: '(bytes3)',\n  3764340945: '(bytes4)',\n  2793701517: '(bytes5)',\n  2927928721: '(bytes6)',\n  1322614312: '(bytes7)',\n  1334060334: '(bytes8)',\n  2428341456: '(bytes9)',\n  20780939: '(bytes10)',\n  67127854: '(bytes11)',\n  2258660029: '(bytes12)',\n  2488442420: '(bytes13)',\n  2456219775: '(bytes14)',\n  3667227872: '(bytes15)',\n  1717330180: '(bytes16)',\n  866084666: '(bytes17)',\n  3302112666: '(bytes18)',\n  1584093747: '(bytes19)',\n  1367925737: '(bytes20)',\n  3923391840: '(bytes21)',\n  3589990556: '(bytes22)',\n  2879508237: '(bytes23)',\n  4055063348: '(bytes24)',\n  193248344: '(bytes25)',\n  4172368369: '(bytes26)',\n  976705501: '(bytes27)',\n  3358255854: '(bytes28)',\n  1265222613: '(bytes29)',\n  3994207469: '(bytes30)',\n  3263516050: '(bytes31)',\n  666357637: '(bytes32)',\n  1812949376: '(uint,uint)',\n  262402885: '(uint,string)',\n  510514412: '(uint,bool)',\n  1491830284: '(uint,address)',\n  2534451664: '(string,uint)',\n  1264337527: '(string,string)',\n  3283441205: '(string,bool)',\n  832238387: '(string,address)',\n  910912146: '(bool,uint)',\n  2414527781: '(bool,string)',\n  705760899: '(bool,bool)',\n  2235320393: '(bool,address)',\n  574869411: '(address,uint)',\n  1973388987: '(address,string)',\n  1974863315: '(address,bool)',\n  3673216170: '(address,address)',\n  3884059252: '(uint,uint,uint)',\n  2104037094: '(uint,uint,string)',\n  1733758967: '(uint,uint,bool)',\n  3191032091: '(uint,uint,address)',\n  1533929535: '(uint,string,uint)',\n  1062716053: '(uint,string,string)',\n  1185403086: '(uint,string,bool)',\n  529592906: '(uint,string,address)',\n  1515034914: '(uint,bool,uint)',\n  2332955902: '(uint,bool,string)',\n  3587091680: '(uint,bool,bool)',\n  1112473535: '(uint,bool,address)',\n  2286109610: '(uint,address,uint)',\n  3464692859: '(uint,address,string)',\n  2060456590: '(uint,address,bool)',\n  2104993307: '(uint,address,address)',\n  2526862595: '(string,uint,uint)',\n  2750793529: '(string,uint,string)',\n  4043501061: '(string,uint,bool)',\n  3817119609: '(string,uint,address)',\n  4083337817: '(string,string,uint)',\n  753761519: '(string,string,string)',\n  2967534005: '(string,string,bool)',\n  2515337621: '(string,string,address)',\n  689682896: '(string,bool,uint)',\n  3801674877: '(string,bool,string)',\n  2232122070: '(string,bool,bool)',\n  2469116728: '(string,bool,address)',\n  130552343: '(string,address,uint)',\n  3773410639: '(string,address,string)',\n  3374145236: '(string,address,bool)',\n  4243355104: '(string,address,address)',\n  995886048: '(bool,uint,uint)',\n  3359211184: '(bool,uint,string)',\n  464374251: '(bool,uint,bool)',\n  3302110471: '(bool,uint,address)',\n  3224906412: '(bool,string,uint)',\n  2960557183: '(bool,string,string)',\n  3686056519: '(bool,string,bool)',\n  2509355347: '(bool,string,address)',\n  2954061243: '(bool,bool,uint)',\n  626391622: '(bool,bool,string)',\n  1349555864: '(bool,bool,bool)',\n  276362893: '(bool,bool,address)',\n  3950005167: '(bool,address,uint)',\n  3734671984: '(bool,address,string)',\n  415876934: '(bool,address,bool)',\n  3530962535: '(bool,address,address)',\n  2273710942: '(address,uint,uint)',\n  3136907337: '(address,uint,string)',\n  3846889796: '(address,uint,bool)',\n  2548867988: '(address,uint,address)',\n  484110986: '(address,string,uint)',\n  4218888805: '(address,string,string)',\n  3473018801: '(address,string,bool)',\n  4035396840: '(address,string,address)',\n  742821141: '(address,bool,uint)',\n  555898316: '(address,bool,string)',\n  3951234194: '(address,bool,bool)',\n  4044790253: '(address,bool,address)',\n  1815506290: '(address,address,uint)',\n  7426238: '(address,address,string)',\n  4070990470: '(address,address,bool)',\n  25986242: '(address,address,address)',\n  1554033982: '(uint,uint,uint,uint)',\n  2024634892: '(uint,uint,uint,string)',\n  1683143115: '(uint,uint,uint,bool)',\n  3766828905: '(uint,uint,uint,address)',\n  949229117: '(uint,uint,string,uint)',\n  2080582194: '(uint,uint,string,string)',\n  2989403910: '(uint,uint,string,bool)',\n  1127384482: '(uint,uint,string,address)',\n  1818524812: '(uint,uint,bool,uint)',\n  4024028142: '(uint,uint,bool,string)',\n  2495495089: '(uint,uint,bool,bool)',\n  3776410703: '(uint,uint,bool,address)',\n  1628154048: '(uint,uint,address,uint)',\n  3600994782: '(uint,uint,address,string)',\n  2833785006: '(uint,uint,address,bool)',\n  3398671136: '(uint,uint,address,address)',\n  3221501959: '(uint,string,uint,uint)',\n  2730232985: '(uint,string,uint,string)',\n  2270850606: '(uint,string,uint,bool)',\n  2877020669: '(uint,string,uint,address)',\n  1995203422: '(uint,string,string,uint)',\n  1474103825: '(uint,string,string,string)',\n  310782872: '(uint,string,string,bool)',\n  3432549024: '(uint,string,string,address)',\n  2763295359: '(uint,string,bool,uint)',\n  2370346144: '(uint,string,bool,string)',\n  1371286465: '(uint,string,bool,bool)',\n  2037328032: '(uint,string,bool,address)',\n  2565338099: '(uint,string,address,uint)',\n  4170733439: '(uint,string,address,string)',\n  4181720887: '(uint,string,address,bool)',\n  2141537675: '(uint,string,address,address)',\n  1451396516: '(uint,bool,uint,uint)',\n  3906845782: '(uint,bool,uint,string)',\n  3534472445: '(uint,bool,uint,bool)',\n  1329595790: '(uint,bool,uint,address)',\n  2438978344: '(uint,bool,string,uint)',\n  2754870525: '(uint,bool,string,string)',\n  879671495: '(uint,bool,string,bool)',\n  1231956916: '(uint,bool,string,address)',\n  3173363033: '(uint,bool,bool,uint)',\n  831186331: '(uint,bool,bool,string)',\n  1315722005: '(uint,bool,bool,bool)',\n  1392910941: '(uint,bool,bool,address)',\n  1102442299: '(uint,bool,address,uint)',\n  2721084958: '(uint,bool,address,string)',\n  2449150530: '(uint,bool,address,bool)',\n  2263728396: '(uint,bool,address,address)',\n  3399106228: '(uint,address,uint,uint)',\n  1054063912: '(uint,address,uint,string)',\n  435581801: '(uint,address,uint,bool)',\n  4256361684: '(uint,address,uint,address)',\n  2697204968: '(uint,address,string,uint)',\n  2373420580: '(uint,address,string,string)',\n  581204390: '(uint,address,string,bool)',\n  3420819197: '(uint,address,string,address)',\n  2064181483: '(uint,address,bool,uint)',\n  1676730946: '(uint,address,bool,string)',\n  2116501773: '(uint,address,bool,bool)',\n  3056677012: '(uint,address,bool,address)',\n  2587672470: '(uint,address,address,uint)',\n  2034490470: '(uint,address,address,string)',\n  22350596: '(uint,address,address,bool)',\n  1430734329: '(uint,address,address,address)',\n  149837414: '(string,uint,uint,uint)',\n  2773406909: '(string,uint,uint,string)',\n  4147936829: '(string,uint,uint,bool)',\n  3201771711: '(string,uint,uint,address)',\n  2697245221: '(string,uint,string,uint)',\n  1821956834: '(string,uint,string,string)',\n  3919545039: '(string,uint,string,bool)',\n  3144824297: '(string,uint,string,address)',\n  1427009269: '(string,uint,bool,uint)',\n  1993105508: '(string,uint,bool,string)',\n  3816813520: '(string,uint,bool,bool)',\n  3847527825: '(string,uint,bool,address)',\n  1481210622: '(string,uint,address,uint)',\n  844415720: '(string,uint,address,string)',\n  285649143: '(string,uint,address,bool)',\n  3939013249: '(string,uint,address,address)',\n  3587119056: '(string,string,uint,uint)',\n  2366909661: '(string,string,uint,string)',\n  3864418506: '(string,string,uint,bool)',\n  1565476480: '(string,string,uint,address)',\n  2681211381: '(string,string,string,uint)',\n  3731419658: '(string,string,string,string)',\n  739726573: '(string,string,string,bool)',\n  1834430276: '(string,string,string,address)',\n  2256636538: '(string,string,bool,uint)',\n  1585754346: '(string,string,bool,string)',\n  1081628777: '(string,string,bool,bool)',\n  3279013851: '(string,string,bool,address)',\n  1250010474: '(string,string,address,uint)',\n  3944480640: '(string,string,address,string)',\n  1556958775: '(string,string,address,bool)',\n  1134328815: '(string,string,address,address)',\n  1572859960: '(string,bool,uint,uint)',\n  1119461927: '(string,bool,uint,string)',\n  1019590099: '(string,bool,uint,bool)',\n  1909687565: '(string,bool,uint,address)',\n  885731469: '(string,bool,string,uint)',\n  2821114603: '(string,bool,string,string)',\n  1066037277: '(string,bool,string,bool)',\n  3764542249: '(string,bool,string,address)',\n  2155164136: '(string,bool,bool,uint)',\n  2636305885: '(string,bool,bool,string)',\n  2304440517: '(string,bool,bool,bool)',\n  1905304873: '(string,bool,bool,address)',\n  685723286: '(string,bool,address,uint)',\n  764294052: '(string,bool,address,string)',\n  2508990662: '(string,bool,address,bool)',\n  870964509: '(string,bool,address,address)',\n  3668153533: '(string,address,uint,uint)',\n  1280700980: '(string,address,uint,string)',\n  1522647356: '(string,address,uint,bool)',\n  2741431424: '(string,address,uint,address)',\n  2405583849: '(string,address,string,uint)',\n  609847026: '(string,address,string,string)',\n  1595265676: '(string,address,string,bool)',\n  2864486961: '(string,address,string,address)',\n  3318856587: '(string,address,bool,uint)',\n  72663161: '(string,address,bool,string)',\n  2038975531: '(string,address,bool,bool)',\n  573965245: '(string,address,bool,address)',\n  1857524797: '(string,address,address,uint)',\n  2148146279: '(string,address,address,string)',\n  3047013728: '(string,address,address,bool)',\n  3985582326: '(string,address,address,address)',\n  853517604: '(bool,uint,uint,uint)',\n  3657852616: '(bool,uint,uint,string)',\n  2753397214: '(bool,uint,uint,bool)',\n  4049711649: '(bool,uint,uint,address)',\n  1098907931: '(bool,uint,string,uint)',\n  3542771016: '(bool,uint,string,string)',\n  2446522387: '(bool,uint,string,bool)',\n  2781285673: '(bool,uint,string,address)',\n  3554563475: '(bool,uint,bool,uint)',\n  3067439572: '(bool,uint,bool,string)',\n  2650928961: '(bool,uint,bool,bool)',\n  1114097656: '(bool,uint,bool,address)',\n  3399820138: '(bool,uint,address,uint)',\n  403247937: '(bool,uint,address,string)',\n  1705899016: '(bool,uint,address,bool)',\n  2318373034: '(bool,uint,address,address)',\n  2387273838: '(bool,string,uint,uint)',\n  2007084013: '(bool,string,uint,string)',\n  549177775: '(bool,string,uint,bool)',\n  1529002296: '(bool,string,uint,address)',\n  1574643090: '(bool,string,string,uint)',\n  392356650: '(bool,string,string,string)',\n  508266469: '(bool,string,string,bool)',\n  2547225816: '(bool,string,string,address)',\n  2372902053: '(bool,string,bool,uint)',\n  1211958294: '(bool,string,bool,string)',\n  3697185627: '(bool,string,bool,bool)',\n  1401816747: '(bool,string,bool,address)',\n  453743963: '(bool,string,address,uint)',\n  316065672: '(bool,string,address,string)',\n  1842623690: '(bool,string,address,bool)',\n  724244700: '(bool,string,address,address)',\n  1181212302: '(bool,bool,uint,uint)',\n  1348569399: '(bool,bool,uint,string)',\n  2874982852: '(bool,bool,uint,bool)',\n  201299213: '(bool,bool,uint,address)',\n  395003525: '(bool,bool,string,uint)',\n  1830717265: '(bool,bool,string,string)',\n  3092715066: '(bool,bool,string,bool)',\n  4188875657: '(bool,bool,string,address)',\n  3259532109: '(bool,bool,bool,uint)',\n  719587540: '(bool,bool,bool,string)',\n  992632032: '(bool,bool,bool,bool)',\n  2352126746: '(bool,bool,bool,address)',\n  1620281063: '(bool,bool,address,uint)',\n  2695133539: '(bool,bool,address,string)',\n  3231908568: '(bool,bool,address,bool)',\n  4102557348: '(bool,bool,address,address)',\n  2617143996: '(bool,address,uint,uint)',\n  2691192883: '(bool,address,uint,string)',\n  4002252402: '(bool,address,uint,bool)',\n  1760647349: '(bool,address,uint,address)',\n  194640930: '(bool,address,string,uint)',\n  2805734838: '(bool,address,string,string)',\n  3804222987: '(bool,address,string,bool)',\n  1870422078: '(bool,address,string,address)',\n  1287000017: '(bool,address,bool,uint)',\n  1248250676: '(bool,address,bool,string)',\n  1788626827: '(bool,address,bool,bool)',\n  474063670: '(bool,address,bool,address)',\n  1384430956: '(bool,address,address,uint)',\n  3625099623: '(bool,address,address,string)',\n  1180699616: '(bool,address,address,bool)',\n  487903233: '(bool,address,address,address)',\n  1024368100: '(address,uint,uint,uint)',\n  2301889963: '(address,uint,uint,string)',\n  3964381346: '(address,uint,uint,bool)',\n  519451700: '(address,uint,uint,address)',\n  4111650715: '(address,uint,string,uint)',\n  2119616147: '(address,uint,string,string)',\n  2751614737: '(address,uint,string,bool)',\n  3698927108: '(address,uint,string,address)',\n  1770996626: '(address,uint,bool,uint)',\n  2391690869: '(address,uint,bool,string)',\n  4272018778: '(address,uint,bool,bool)',\n  602229106: '(address,uint,bool,address)',\n  2782496616: '(address,uint,address,uint)',\n  1567749022: '(address,uint,address,string)',\n  4051804649: '(address,uint,address,bool)',\n  3961816175: '(address,uint,address,address)',\n  2764647008: '(address,string,uint,uint)',\n  1561552329: '(address,string,uint,string)',\n  2116357467: '(address,string,uint,bool)',\n  3755464715: '(address,string,uint,address)',\n  2706362425: '(address,string,string,uint)',\n  1560462603: '(address,string,string,string)',\n  900007711: '(address,string,string,bool)',\n  2689478535: '(address,string,string,address)',\n  3877655068: '(address,string,bool,uint)',\n  3154862590: '(address,string,bool,string)',\n  1595759775: '(address,string,bool,bool)',\n  542667202: '(address,string,bool,address)',\n  2350461865: '(address,string,address,uint)',\n  4158874181: '(address,string,address,string)',\n  233909110: '(address,string,address,bool)',\n  221706784: '(address,string,address,address)',\n  3255869470: '(address,bool,uint,uint)',\n  2606272204: '(address,bool,uint,string)',\n  2244855215: '(address,bool,uint,bool)',\n  227337758: '(address,bool,uint,address)',\n  2652011374: '(address,bool,string,uint)',\n  1197235251: '(address,bool,string,string)',\n  1353532957: '(address,bool,string,bool)',\n  436029782: '(address,bool,string,address)',\n  3484780374: '(address,bool,bool,uint)',\n  3754205928: '(address,bool,bool,string)',\n  3401856121: '(address,bool,bool,bool)',\n  3476636805: '(address,bool,bool,address)',\n  3698398930: '(address,bool,address,uint)',\n  769095910: '(address,bool,address,string)',\n  2801077007: '(address,bool,address,bool)',\n  1711502813: '(address,bool,address,address)',\n  1425929188: '(address,address,uint,uint)',\n  2647731885: '(address,address,uint,string)',\n  3270936812: '(address,address,uint,bool)',\n  3603321462: '(address,address,uint,address)',\n  69767936: '(address,address,string,uint)',\n  566079269: '(address,address,string,string)',\n  1863997774: '(address,address,string,bool)',\n  2406706454: '(address,address,string,address)',\n  2513854225: '(address,address,bool,uint)',\n  2858762440: '(address,address,bool,string)',\n  752096074: '(address,address,bool,bool)',\n  2669396846: '(address,address,bool,address)',\n  3982404743: '(address,address,address,uint)',\n  4161329696: '(address,address,address,string)',\n  238520724: '(address,address,address,bool)',\n  1717301556: '(address,address,address,address)',\n  4133908826: '(uint,uint)',\n  3054400204: '(string,uint)',\n\n  // Latest method signatures after updating uint to uint256 and int to int256\n\n  760966329: '(int256)',\n  4163653873: '(uint256)',\n  1681903839: '(uint256, string)',\n  480083635: '(uint256, bool)',\n  1764191366: '(uint256, address)',\n  965833939: '(bool, uint256)',\n  2198464680: '(address, uint256)',\n  3522001468: '(uint256, uint256, uint256)',\n  1909476082: '(uint256, uint256, string)',\n  1197922930: '(uint256, uint256, bool)',\n  1553380145: '(uint256, uint256, address)',\n  933920076: '(uint256, string, uint256)',\n  2970968351: '(uint256, string, string)',\n  1290643290: '(uint256, string, bool)',\n  2063255897: '(uint256, string, address)',\n  537493524: '(uint256, bool, uint256)',\n  2239189025: '(uint256, bool, string)',\n  544310864: '(uint256, bool, bool)',\n  889741179: '(uint256, bool, address)',\n  1520131797: '(uint256, address, uint256)',\n  1674265081: '(uint256, address, string)',\n  2607726658: '(uint256, address, bool)',\n  3170737120: '(uint256, address, address)',\n  3393701099: '(string, uint256, uint256)',\n  1500569737: '(string, uint256, string)',\n  3396809649: '(string, uint256, bool)',\n  478069832: '(string, uint256, address)',\n  1478619041: '(string, string, uint256)',\n  3378075862: '(string, bool, uint256)',\n  220641573: '(string, address, uint256)',\n  923808615: '(bool, uint256, uint256)',\n  3288086896: '(bool, uint256, string)',\n  3906927529: '(bool, uint256, bool)',\n  143587794: '(bool, uint256, address)',\n  278130193: '(bool, string, uint256)',\n  317855234: '(bool, bool, uint256)',\n  1601936123: '(bool, address, uint256)',\n  3063663350: '(address, uint256, uint256)',\n  2717051050: '(address, uint256, string)',\n  1736575400: '(address, uint256, bool)',\n  2076235848: '(address, uint256, address)',\n  1742565361: '(address, string, uint256)',\n  2622462459: '(address, bool, uint256)',\n  402547077: '(address, address, uint256)',\n  423606272: '(uint256, uint256, uint256, uint256)',\n  1506790371: '(uint256, uint256, uint256, string)',\n  4202792367: '(uint256, uint256, uint256, address)',\n  1570936811: '(uint256, uint256, string, uint256)',\n  668512210: '(uint256, uint256, string, string)',\n  2062986021: '(uint256, uint256, string, bool)',\n  1121066423: '(uint256, uint256, string, address)',\n  3950997458: '(uint256, uint256, bool, uint256)',\n  2780101785: '(uint256, uint256, bool, string)',\n  2869451494: '(uint256, uint256, bool, bool)',\n  2592172675: '(uint256, uint256, bool, address)',\n  2297881778: '(uint256, uint256, address, uint256)',\n  1826504888: '(uint256, uint256, address, string)',\n  365610102: '(uint256, uint256, address, bool)',\n  1453707697: '(uint256, uint256, address, address)',\n  2193775476: '(uint256, string, uint256, uint256)',\n  3082360010: '(uint256, string, uint256, string)',\n  1763348340: '(uint256, string, uint256, bool)',\n  992115124: '(uint256, string, uint256, address)',\n  2955463101: '(uint256, string, string, uint256)',\n  564987523: '(uint256, string, string, string)',\n  3014047421: '(uint256, string, string, bool)',\n  3582182914: '(uint256, string, string, address)',\n  3472922752: '(uint256, string, bool, uint256)',\n  3537118157: '(uint256, string, bool, string)',\n  3126025628: '(uint256, string, bool, bool)',\n  2922300801: '(uint256, string, bool, address)',\n  3906142605: '(uint256, string, address, uint256)',\n  2621104033: '(uint256, string, address, string)',\n  2428701270: '(uint256, string, address, bool)',\n  1634266465: '(uint256, string, address, address)',\n  3333212072: '(uint256, bool, uint256, uint256)',\n  3724797812: '(uint256, bool, uint256, string)',\n  2443193898: '(uint256, bool, uint256, bool)',\n  2295029825: '(uint256, bool, uint256, address)',\n  740099910: '(uint256, bool, string, uint256)',\n  1757984957: '(uint256, bool, string, string)',\n  3952250239: '(uint256, bool, string, bool)',\n  4015165464: '(uint256, bool, string, address)',\n  1952763427: '(uint256, bool, bool, uint256)',\n  3722155361: '(uint256, bool, bool, string)',\n  3069540257: '(uint256, bool, bool, bool)',\n  1768164185: '(uint256, bool, bool, address)',\n  125994997: '(uint256, bool, address, uint256)',\n  2917159623: '(uint256, bool, address, string)',\n  1162695845: '(uint256, bool, address, bool)',\n  2716814523: '(uint256, bool, address, address)',\n  211605953: '(uint256, address, uint256, uint256)',\n  3719324961: '(uint256, address, uint256, string)',\n  1601452668: '(uint256, address, uint256, bool)',\n  364980149: '(uint256, address, uint256, address)',\n  1182952285: '(uint256, address, string, uint256)',\n  1041403043: '(uint256, address, string, string)',\n  3425872647: '(uint256, address, string, bool)',\n  2629472255: '(uint256, address, string, address)',\n  1522374954: '(uint256, address, bool, uint256)',\n  2432370346: '(uint256, address, bool, string)',\n  3813741583: '(uint256, address, bool, bool)',\n  4017276179: '(uint256, address, bool, address)',\n  1936653238: '(uint256, address, address, uint256)',\n  52195187: '(uint256, address, address, string)',\n  153090805: '(uint256, address, address, bool)',\n  612938772: '(uint256, address, address, address)',\n  2812835923: '(string, uint256, uint256, uint256)',\n  2236298390: '(string, uint256, uint256, string)',\n  1982258066: '(string, uint256, uint256, bool)',\n  3793609336: '(string, uint256, uint256, address)',\n  3330189777: '(string, uint256, string, uint256)',\n  1522028063: '(string, uint256, string, string)',\n  2099530013: '(string, uint256, string, bool)',\n  2084975268: '(string, uint256, string, address)',\n  3827003247: '(string, uint256, bool, uint256)',\n  2885106328: '(string, uint256, bool, string)',\n  894187222: '(string, uint256, bool, bool)',\n  3773389720: '(string, uint256, bool, address)',\n  1325727174: '(string, uint256, address, uint256)',\n  2684039059: '(string, uint256, address, string)',\n  2182163010: '(string, uint256, address, bool)',\n  1587722158: '(string, uint256, address, address)',\n  4099767596: '(string, string, uint256, uint256)',\n  1562023706: '(string, string, uint256, string)',\n  3282609748: '(string, string, uint256, bool)',\n  270792626: '(string, string, uint256, address)',\n  2393878571: '(string, string, string, uint256)',\n  3601791698: '(string, string, bool, uint256)',\n  2093204999: '(string, string, address, uint256)',\n  1689631591: '(string, bool, uint256, uint256)',\n  1949134567: '(string, bool, uint256, string)',\n  2331496330: '(string, bool, uint256, bool)',\n  2472413631: '(string, bool, uint256, address)',\n  620303461: '(string, bool, string, uint256)',\n  2386524329: '(string, bool, bool, uint256)',\n  1560853253: '(string, bool, address, uint256)',\n  4176812830: '(string, address, uint256, uint256)',\n  1514632754: '(string, address, uint256, string)',\n  4232594928: '(string, address, uint256, bool)',\n  1677429701: '(string, address, uint256, address)',\n  2446397742: '(string, address, string, uint256)',\n  1050642026: '(string, address, bool, uint256)',\n  2398352281: '(string, address, address, uint256)',\n  927708338: '(bool, uint256, uint256, uint256)',\n  2389310301: '(bool, uint256, uint256, string)',\n  3197649747: '(bool, uint256, uint256, bool)',\n  14518201: '(bool, uint256, uint256, address)',\n  1779538402: '(bool, uint256, string, uint256)',\n  4122747465: '(bool, uint256, string, string)',\n  3857124139: '(bool, uint256, string, bool)',\n  4275904511: '(bool, uint256, string, address)',\n  2437143473: '(bool, uint256, bool, string)',\n  3468031191: '(bool, uint256, bool, bool)',\n  2597139990: '(bool, uint256, bool, address)',\n  355982471: '(bool, uint256, address, uint256)',\n  464760986: '(bool, uint256, address, string)',\n  3032683775: '(bool, uint256, address, bool)',\n  653615272: '(bool, uint256, address, address)',\n  679886795: '(bool, string, uint256, uint256)',\n  450457062: '(bool, string, uint256, string)',\n  1796103507: '(bool, string, uint256, bool)',\n  362193358: '(bool, string, uint256, address)',\n  2078327787: '(bool, string, string, uint256)',\n  369533843: '(bool, string, bool, uint256)',\n  196087467: '(bool, bool, uint256, uint256)',\n  2111099104: '(bool, bool, uint256, string)',\n  1637764366: '(bool, bool, uint256, bool)',\n  1420274080: '(bool, bool, uint256, address)',\n  3819555375: '(bool, bool, string, uint256)',\n  1836074433: '(bool, bool, bool, uint256)',\n  1276263767: '(bool, bool, address, uint256)',\n  2079424929: '(bool, address, uint256, uint256)',\n  1374724088: '(bool, address, uint256, string)',\n  3590430492: '(bool, address, uint256, bool)',\n  325780957: '(bool, address, uint256, address)',\n  3256837319: '(bool, address, string, uint256)',\n  126031106: '(bool, address, bool, uint256)',\n  208064958: '(bool, address, address, uint256)',\n  888202806: '(address, uint256, uint256, uint256)',\n  1244184599: '(address, uint256, uint256, string)',\n  1727118439: '(address, uint256, uint256, bool)',\n  551786573: '(address, uint256, uint256, address)',\n  3204577425: '(address, uint256, string, uint256)',\n  2292761606: '(address, uint256, string, string)',\n  3474460764: '(address, uint256, string, bool)',\n  1547898183: '(address, uint256, string, address)',\n  586594713: '(address, uint256, bool, uint256)',\n  3316483577: '(address, uint256, bool, string)',\n  1005970743: '(address, uint256, bool, bool)',\n  2736520652: '(address, uint256, bool, address)',\n  269444366: '(address, uint256, address, uint256)',\n  497649386: '(address, uint256, address, string)',\n  2713504179: '(address, uint256, address, bool)',\n  1200430178: '(address, uint256, address, address)',\n  499704248: '(address, string, uint256, uint256)',\n  1149776040: '(address, string, uint256, string)',\n  251125840: '(address, string, uint256, bool)',\n  1662531192: '(address, string, uint256, address)',\n  362776871: '(address, string, string, uint256)',\n  1365129398: '(address, string, bool, uint256)',\n  1166009295: '(address, string, address, uint256)',\n  946861556: '(address, bool, uint256, uint256)',\n  178704301: '(address, bool, uint256, string)',\n  3294903840: '(address, bool, uint256, bool)',\n  3438776481: '(address, bool, uint256, address)',\n  2162598411: '(address, bool, string, uint256)',\n  2353946086: '(address, bool, bool, uint256)',\n  2807847390: '(address, bool, address, uint256)',\n  3193255041: '(address, address, uint256, uint256)',\n  4256496016: '(address, address, uint256, string)',\n  2604815586: '(address, address, uint256, bool)',\n  2376523509: '(address, address, uint256, address)',\n  4011651047: '(address, address, string, uint256)',\n  963766156: '(address, address, bool, uint256)',\n  2485456247: '(address, address, address, uint256)',\n}\n","'use strict'\nimport { bytesToHex } from '@ethereumjs/util'\nimport { isHexString } from 'ethjs-util'\nimport { BN } from 'bn.js'\nimport { isBigInt } from 'web3-validator'\n\nfunction convertToPrefixedHex (input) {\n  if (input === undefined || input === null || isHexString(input)) {\n    return input\n  }\n  if ((input.constructor && input.constructor.name === 'BigNumber')\n      || BN.isBN(input)\n      || isBigInt(input)\n      || typeof input === 'number') {\n    return '0x' + input.toString(16)\n  }\n\n  try {\n    return bytesToHex(input)\n  } catch (e) {\n    console.log(e)\n  }\n\n  try {\n    // BigNumber\n    return '0x' + input.toString(16)\n  } catch (e) {\n    console.log(e)\n  }\n\n  return input\n}\n\n/*\n txResult.result can be 3 different things:\n - VM call or tx: ethereumjs-vm result object\n - Node transaction: object returned from eth.getTransactionReceipt()\n - Node call: return value from function call (not an object)\n\n Also, VM results use BN and Buffers, Node results use hex strings/ints,\n So we need to normalize the values to prefixed hex strings\n*/\nexport function resultToRemixTx (txResult, execResult?) {\n  const { receipt, transactionHash, result } = txResult\n  const { status, gasUsed, contractAddress } = receipt\n  let returnValue, errorMessage\n\n  if (isHexString(result)) {\n    returnValue = result\n  } else if (execResult !== undefined) {\n    returnValue = execResult.returnValue\n    errorMessage = execResult.exceptionError\n  }\n\n  return {\n    transactionHash,\n    status: convertToPrefixedHex(status),\n    gasUsed: convertToPrefixedHex(gasUsed),\n    error: errorMessage,\n    return: returnValue ? convertToPrefixedHex(returnValue) : undefined,\n    createdAddress: convertToPrefixedHex(contractAddress)\n  }\n}\n","'use strict'\nexport function formatMemory (mem, width) {\n  const ret = {}\n  if (!mem) {\n    return ret\n  }\n\n  if (!mem.substr) {\n    mem = mem.join('') // geth returns an array, eth return raw string\n  }\n\n  for (let k = 0; k < mem.length; k += (width * 2)) {\n    const memory = mem.substr(k, width * 2)\n    const content = tryConvertAsciiFormat(memory)\n    ret['0x' + (k / 2).toString(16)] = content.raw + '\\t' + content.ascii\n  }\n  return ret\n}\n\nexport function tryConvertAsciiFormat (memorySlot) {\n  const ret = { ascii: '', raw: '' }\n  for (let k = 0; k < memorySlot.length; k += 2) {\n    const raw = memorySlot.substr(k, 2)\n    let ascii = String.fromCharCode(parseInt(raw, 16))\n    ascii = ascii.replace(/[^\\w\\s]/, '?')\n    if (ascii === '') {\n      ascii = '?'\n    }\n    ret.ascii += ascii\n    ret.raw += raw\n  }\n  return ret\n}\n\n/**\n * format @args css1, css2, css3 to css inline style\n *\n * @param {Object} css1 - css inline declaration\n * @param {Object} css2 - css inline declaration\n * @param {Object} css3 - css inline declaration\n * @param {Object} ...\n * @return {String} css inline style\n *                  if the key start with * the value is directly appended to the inline style (which should be already inline style formatted)\n *                  used if multiple occurrences of the same key is needed\n */\nexport function formatCss (css1, css2) {\n  let ret = ''\n  for (const arg in arguments) { // eslint-disable-line\n    for (const k in arguments[arg]) { // eslint-disable-line\n      if (arguments[arg][k] && ret.indexOf(k) === -1) { // eslint-disable-line\n        if (k.indexOf('*') === 0) {\n          ret += arguments[arg][k] // eslint-disable-line\n        } else {\n          ret += k + ':' + arguments[arg][k] + ';' // eslint-disable-line\n        }\n      }\n    }\n  }\n  return ret\n}\n\nexport function normalizeHex (hex) {\n  if (hex.indexOf('0x') === 0) {\n    hex = hex.replace('0x', '')\n  }\n  hex = hex.replace(/^0+/, '')\n  return '0x' + hex\n}\n\nexport function normalizeHexAddress (hex) {\n  if (hex.indexOf('0x') === 0) hex = hex.replace('0x', '')\n  if (hex.length >= 40) {\n    const reg = /(.{40})$/.exec(hex)\n    if (reg) {\n      return '0x' + reg[0]\n    }\n  } else {\n    return '0x' + (new Array(40 - hex.length + 1).join('0')) + hex\n  }\n}\n\nexport function runInBrowser () {\n  return typeof window !== 'undefined'\n}\n","import { EventManager } from './eventManager'\nimport * as uiHelper from './helpers/uiHelper'\nimport * as compilerHelper from './helpers/compilerHelper'\nimport * as util from './util'\nimport * as hash from './hash'\nimport { Storage } from './storage'\nimport { EventsDecoder } from './execution/eventsDecoder'\nimport * as txExecution from './execution/txExecution'\nimport * as txHelper from './execution/txHelper'\nimport * as txFormat from './execution/txFormat'\nimport { TxListener } from './execution/txListener'\nimport { TxRunner } from './execution/txRunner'\nimport { LogsManager } from './execution/logsManager'\nimport { forkAt } from './execution/forkAt'\nimport * as typeConversion from './execution/typeConversion'\nimport { TxRunnerVM } from './execution/txRunnerVM'\nimport { TxRunnerWeb3 } from './execution/txRunnerWeb3'\nimport * as txResultHelper from './helpers/txResultHelper'\nexport { ConsoleLogs } from './helpers/hhconsoleSigs'\nexport { ICompilerApi, ConfigurationSettings, iSolJsonBinData, iSolJsonBinDataBuild } from './types/ICompilerApi'\nexport { QueryParams } from './query-params'\nexport { VMexecutionResult } from './execution/txRunnerVM'\nexport { Registry } from './registry'\n\nconst helpers = {\n  ui: uiHelper,\n  compiler: compilerHelper,\n  txResultHelper\n}\nconst execution = {\n  EventsDecoder: EventsDecoder,\n  txExecution: txExecution,\n  txHelper: txHelper,\n  txFormat: txFormat,\n  txListener: TxListener,\n  TxRunner: TxRunner,\n  TxRunnerWeb3: TxRunnerWeb3,\n  TxRunnerVM: TxRunnerVM,\n  typeConversion: typeConversion,\n  LogsManager,\n  forkAt\n}\nexport { EventManager, helpers, Storage, util, execution, hash }\n","'use strict'\n\nexport class QueryParams {\n\n  update (params) {\n    const currentParams = this.get()\n    const keys = Object.keys(params)\n    for (const x in keys) {\n      currentParams[keys[x]] = params[keys[x]]\n    }\n    let queryString = '#'\n    const updatedKeys = Object.keys(currentParams)\n    for (const y in updatedKeys) {\n      queryString += updatedKeys[y] + '=' + currentParams[updatedKeys[y]] + '&'\n    }\n    window.location.hash = queryString.slice(0, -1)\n  }\n\n  get () {\n    const qs = window.location.hash.substr(1)\n\n    if (window.location.search.length > 0) {\n      // use legacy query params instead of hash\n      window.location.hash = window.location.search.substr(1)\n      window.location.search = ''\n    }\n\n    const params = {}\n    const parts = qs.split('&')\n    for (const x in parts) {\n      const keyValue = parts[x].split('=')\n      if (keyValue[0] !== '') {\n        params[keyValue[0]] = keyValue[1]\n      }\n    }\n    return params\n  }\n}\n","type registryEntry = {\n    api: any,\n    name: string\n}\n\nexport class Registry {\n  private static instance: Registry;\n  private state: any\n\n  private constructor () {\n    this.state = {}\n  }\n\n  public static getInstance (): Registry {\n    if (!Registry.instance) {\n      Registry.instance = new Registry()\n    }\n\n    return Registry.instance\n  }\n\n  public put (entry: registryEntry) {\n    if (this.state[entry.name]) return this.state[entry.name]\n    const server = {\n      // uid: serveruid,\n      api: entry.api\n    }\n    this.state[entry.name] = { server }\n    return server\n  }\n\n  public get (name: string): registryEntry {\n    const state = this.state[name]\n    if (!state) return\n    const server = state.server\n    return server\n  }\n}\n","'use strict'\n\nexport class Storage {\n  prefix\n\n  constructor (prefix) {\n    this.prefix = prefix\n\n    // on startup, upgrade the old storage layout\n    if (typeof window !== 'undefined') {\n      this.safeKeys().forEach(function (name) {\n        if (name.indexOf('sol-cache-file-', 0) === 0) {\n          const content = window.localStorage.getItem(name)\n          window.localStorage.setItem(name.replace(/^sol-cache-file-/, 'sol:'), content)\n          window.localStorage.removeItem(name)\n        }\n      })\n    }\n\n    // remove obsolete key\n    if (typeof window !== 'undefined') {\n      window.localStorage.removeItem('editor-size-cache')\n    }\n  }\n\n  exists (name) {\n    if (typeof window !== 'undefined') {\n      return this.get(name) !== null\n    }\n  }\n\n  get (name) {\n    if (typeof window !== 'undefined') {\n      return window.localStorage.getItem(this.prefix + name)\n    }\n  }\n\n  set (name, content) {\n    try {\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(this.prefix + name, content)\n      }\n    } catch (exception) {\n      return false\n    }\n    return true\n  }\n\n  remove (name) {\n    if (typeof window !== 'undefined') {\n      window.localStorage.removeItem(this.prefix + name)\n    }\n    return true\n  }\n\n  rename (originalName, newName) {\n    const content = this.get(originalName)\n    if (!this.set(newName, content)) {\n      return false\n    }\n    this.remove(originalName)\n    return true\n  }\n\n  safeKeys () {\n    // NOTE: this is a workaround for some browsers\n    if (typeof window !== 'undefined') {\n      return Object.keys(window.localStorage).filter(function (item) { return item !== null && item !== undefined })\n    }\n    return []\n  }\n\n  keys () {\n    return this.safeKeys()\n      // filter any names not including the prefix\n      .filter(item => item.indexOf(this.prefix, 0) === 0)\n      // remove prefix from filename and add the 'browser' path\n      .map(item => item.substr(this.prefix.length))\n  }\n}\n","export interface ICompilerApi {\n    currentFile: string\n    compilationDetails: {\n        contractMap: {\n            file: string\n        } | Record<string, any>,\n        contractsDetails: Record<string, any>,\n        target?: string\n    }\n    compileErrors: any\n    compileTabLogic: any\n    configurationSettings: ConfigurationSettings\n\n    getCompilerQueryParameters: () => ConfigurationSettings\n    setCompilerQueryParameters: (ConfigurationSettings?) => void\n\n    getAppParameter: (value: string) => Promise<any>\n    setAppParameter: (name: string, value: string | boolean) => void\n\n    getFileManagerMode: () => string\n    setCompilerConfig: (settings: any) => void\n\n    getCompilationResult: () => any\n\n    onCurrentFileChanged: (fileName: string) => void\n    // onResetResults: () => void,\n    onSetWorkspace: (isLocalhost: boolean, workspaceName: string) => void\n    onFileRemoved: (path: string) => void\n    onNoFileSelected: () => void\n    onCompilationFinished: (contractsDetails: any, contractMap: any) => void\n    onSessionSwitched: () => void\n    onContentChanged: () => void\n    onFileClosed: (name: string) => void\n\n    resolveContentAndSave: (url: string) => Promise<string>\n    fileExists: (file: string) => Promise<boolean>\n    writeFile: (file: string, content: any) => Promise<void>\n    readFile: (file: string) => Promise<string>\n    open: (file: string) => void\n    saveCurrentFile: () => void\n    runScriptAfterCompilation: (fileName: string) => void,\n\n    logToTerminal: (log: terminalLog) => void\n\n    compileWithHardhat: (configPath: string) => Promise<string>\n    compileWithTruffle: (configPath: string) => Promise<string>\n    statusChanged: (data: { key: string, title?: string, type?: string }) => void,\n    emit?: (key: string, ...payload: any) => void\n\n    setSolJsonBinData: (binData: iSolJsonBinData) => void\n    solJsonBinData: iSolJsonBinData\n}\n\nexport interface iSolJsonBinDataBuild {\n    path: string,\n    version: string,\n    build: string,\n    prerelease: string,\n    longVersion: string,\n    binURL: string,\n    wasmURL: string,\n    isDownloaded: boolean\n}\nexport interface iSolJsonBinData {\n    baseURLWasm: string,\n    baseURLBin: string,\n    wasmList: iSolJsonBinDataBuild[],\n    binList: iSolJsonBinDataBuild[],\n    selectorList: iSolJsonBinDataBuild[]\n}\n\nexport type terminalLog = {\n    type: 'info' | 'error' | 'warning' | 'log'\n    value: string\n}\n\nexport interface ConfigurationSettings {\n    version: string,\n    evmVersion: string,\n    language: string,\n    optimize: boolean,\n    runs: string\n}\n","'use strict'\nimport { hash } from '@remix-project/remix-lib'\nimport { bytesToHex, setLengthLeft, toBytes, addHexPrefix } from '@ethereumjs/util'\nimport stringSimilarity from 'string-similarity'\nimport { BN } from 'bn.js'\nimport { isBigInt } from 'web3-validator'\n\n/*\n contains misc util: @TODO should be split\n  - hex conversion\n  - binary search\n  - CALL related look up\n  - sha3 calculation\n  - swarm hash extraction\n  - bytecode comparison\n*/\n/*\n    ints: IntArray\n  */\n\n/**\n   * Converts a hex string to an array of integers.\n   */\nexport function hexToIntArray (hexString) {\n  if (hexString.slice(0, 2) === '0x') {\n    hexString = hexString.slice(2)\n  }\n  const integers = []\n  for (let i = 0; i < hexString.length; i += 2) {\n    integers.push(parseInt(hexString.slice(i, i + 2), 16))\n  }\n  return integers\n}\n\n/*\n    ints: list of BNs\n  */\nexport function hexListFromBNs (bnList) {\n  const ret = []\n  for (const k in bnList) {\n    const v = bnList[k].toString(16)\n    ret.push('0x' + v.padStart(64, '0'))\n  }\n  return ret\n}\n\nexport function toHexPaddedString(v: bigint | string): string {\n  if (v) {\n    if (typeof v === 'string') {\n      return v.startsWith('0x') ? v : '0x' + v\n    } else {\n      return '0x' + v.toString(16).padStart(64, '0')\n    }\n  }\n  else\n    return '0x' + '0'.padStart(64, '0')\n}\n\n/*\n  ints: ints: IntArray\n*/\nexport function formatMemory (mem) {\n  const hexMem = bytesToHex(mem).substr(2)\n  const ret = []\n  for (let k = 0; k < hexMem.length; k += 32) {\n    const row = hexMem.substr(k, 32)\n    ret.push(row)\n  }\n  return ret\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return largest i such that array[i] <= target; return -1 if array[0] > target || array is empty\n*/\nexport function findLowerBound (target, array) {\n  let start = 0\n  let length = array.length\n  while (length > 0) {\n    const half = length >> 1\n    const middle = start + half\n    if (array[middle] <= target) {\n      length = length - 1 - half\n      start = middle + 1\n    } else {\n      length = half\n    }\n  }\n  return start - 1\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return largest array[i] such that array[i] <= target; return null if array[0] > target || array is empty\n*/\nexport function findLowerBoundValue (target, array) {\n  const index = findLowerBound(target, array)\n  return index >= 0 ? array[index] : null\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return Return i such that |array[i] - target| is smallest among all i and -1 for an empty array.\n  Returns the smallest i for multiple candidates.\n*/\nexport function findClosestIndex (target, array): number {\n  if (array.length === 0) {\n    return -1\n  }\n  const index = findLowerBound(target, array)\n  if (index < 0) {\n    return 0\n  } else if (index >= array.length - 1) {\n    return array.length - 1\n  } else {\n    const middle = (array[index] + array[index + 1]) / 2\n    return target <= middle ? index : index + 1\n  }\n}\n\n/**\n  * Find the call from @args rootCall which contains @args index (recursive)\n  *\n  * @param {Int} index - index of the vmtrace\n  * @param {Object} rootCall  - call tree, built by the trace analyser\n  * @return {Object} - return the call which include the @args index\n  */\nexport function findCall (index, rootCall) {\n  const ret = buildCallPath(index, rootCall)\n  return ret[ret.length - 1]\n}\n\n/**\n  * Find calls path from @args rootCall which leads to @args index (recursive)\n  *\n  * @param {Int} index - index of the vmtrace\n  * @param {Object} rootCall  - call tree, built by the trace analyser\n  * @return {Array} - return the calls path to @args index\n  */\nexport function buildCallPath (index, rootCall) {\n  const ret = []\n  findCallInternal(index, rootCall, ret)\n  return ret\n}\n\n/**\n  * sha3 the given @arg value (left pad to 32 bytes)\n  *\n  * @param {String} value - value to sha3\n  * @return {Object} - return sha3ied value\n  */\n// eslint-disable-next-line camelcase\nexport function sha3_256 (value) {\n  if ((value.constructor && value.constructor.name === 'BigNumber') || BN.isBN(value) || isBigInt(value)) {\n    value = value.toString(16)\n  }\n  if (typeof value === 'number') {\n    value = value.toString(16)\n  }\n  value = toBytes(addHexPrefix(value))\n  const retInBuffer: Uint8Array = hash.keccak(Buffer.from(setLengthLeft(value, 32)))\n  return bytesToHex(retInBuffer)\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode.\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtraction () {\n  return /a165627a7a72305820([0-9a-f]{64})0029$/\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode, from POC 0.3\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtractionPOC31 () {\n  return /a265627a7a72315820([0-9a-f]{64})64736f6c6343([0-9a-f]{6})0032$/\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode, from POC 0.3\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtractionPOC32 () {\n  return /a265627a7a72305820([0-9a-f]{64})64736f6c6343([0-9a-f]{6})0032$/\n}\n\n/**\n  * return a regex which extract the cbor encoded metadata : {\"ipfs\": <IPFS hash>, \"solc\": <compiler version>} from the bytecode.\n  * ref https://solidity.readthedocs.io/en/v0.6.6/metadata.html?highlight=ipfs#encoding-of-the-metadata-hash-in-the-bytecode\n  * @return {RegEx}\n  */\nexport function cborEncodedValueExtraction () {\n  return /64697066735822([0-9a-f]{68})64736f6c6343([0-9a-f]{6})0033$/\n}\n\n/**\n  * return a regex which extract the input parameters from the bytecode\n  *\n  * @return {RegEx}\n  */\nexport function inputParametersExtraction () {\n  return /64697066735822[0-9a-f]{68}64736f6c6343[0-9a-f]{6}0033(.*)$/\n}\n\nexport function extractcborMetadata (value) {\n  const cbor = value.match(cborEncodedValueExtraction())\n  if (cbor && cbor[0]) value = value.replace(cbor[0], '')\n  return value\n}\n\nexport function extractSwarmHash (value) {\n  value = value.replace(swarmHashExtraction(), '')\n  value = value.replace(swarmHashExtractionPOC31(), '')\n  value = value.replace(swarmHashExtractionPOC32(), '')\n  return value\n}\n\nexport function extractinputParameters (value) {\n  const inputsParam = getinputParameters(value)\n  if (inputsParam) value = value.replace(inputsParam, '')\n  return value\n}\n\nexport function getinputParameters (value) {\n  const regex = value.match(inputParametersExtraction())\n  if (regex && regex[1]) {\n    return regex[1]\n  } else\n    return ''\n}\n\n/**\n  * Compare bytecode. return true if the code is equal (handle swarm hash and library references)\n  * @param {String} code1 - the bytecode that is actually deployed (contains resolved library reference and a potentially different swarmhash)\n  * @param {String} code2 - the bytecode generated by the compiler (contains unresolved library reference and a potentially different swarmhash)\n                            this will return false if the generated bytecode is empty (abstract contract cannot be deployed)\n  *\n  * @return {bool}\n  */\nexport function compareByteCode (code1, code2) {\n  if (code1 === code2) return true\n  if (code2 === '0x') return false // abstract contract. see comment\n  if (code1 === '0x00' || code2 === '0x00' && code1 !== code2) return false // // This can be removed some time once YUL returns correct bytecode\n\n  if (code2.substr(2, 46) === '7300000000000000000000000000000000000000003014') {\n    // testing the following signature: PUSH20 00..00 ADDRESS EQ\n    // in the context of a library, that slot contains the address of the library (pushed by the compiler to avoid calling library other than with a DELEGATECALL)\n    // if code2 is not a library, well we still suppose that the comparison remain relevant even if we remove some information from `code1`\n    code1 = replaceLibReference(code1, 4)\n  }\n  let pos = -1\n  while ((pos = code2.search(/__(.*)__/)) !== -1) {\n    code2 = replaceLibReference(code2, pos)\n    code1 = replaceLibReference(code1, pos)\n  }\n\n  code1 = removeImmutableReference(code1, code2)\n  code1 = extractinputParameters(code1)\n  code1 = extractSwarmHash(code1)\n  code1 = extractcborMetadata(code1)\n  code2 = extractinputParameters(code2)\n  code2 = extractSwarmHash(code2)\n  code2 = extractcborMetadata(code2)\n\n  if (code1 && code2) {\n    if (code1.length !== code2.length) {\n      // if the length isn't the same, we have an issue with extracting the metadata hash.\n      const minLength = code1.length > code2.length ? code2.length: code1.length\n      code1 = code1.substr(0, minLength - 10)\n      code2 = code2.substr(0, minLength - 10)\n    }\n    const compare = stringSimilarity.compareTwoStrings(code1, code2)\n    return compare == 1\n  }\n\n  return false\n}\n/* util extracted out from remix-ide. @TODO split this file, cause it mix real util fn with solidity related stuff ... */\nexport function groupBy (arr, key) {\n  return arr.reduce((sum, item) => {\n    const groupByVal = item[key]\n    const groupedItems = sum[groupByVal] || []\n    groupedItems.push(item)\n    sum[groupByVal] = groupedItems\n    return sum\n  }, {})\n}\n\nexport function concatWithSeparator (list, separator) {\n  return list.reduce((sum, item) => sum + item + separator, '').slice(0, -separator.length)\n}\n\nexport function escapeRegExp (str) {\n  return str.replace(/[-[\\]/{}()+?.\\\\^$|]/g, '\\\\$&')\n}\n\nfunction replaceLibReference (code, pos) {\n  return code.substring(0, pos) + '0000000000000000000000000000000000000000' + code.substring(pos + 40)\n}\n\nfunction removeByIndex (code, index, length, emptyRef) {\n  if (!code) return code\n  return code.slice(0, index) + emptyRef + code.slice(index + length)\n}\n\nfunction removeImmutableReference (code1, code2) {\n  try {\n    const refOccurrence = code2.match(/7f0000000000000000000000000000000000000000000000000000000000000000/g)\n    if (!refOccurrence) return code1\n    let offset = 0\n    refOccurrence.map((value) => {\n      offset = code2.indexOf(value, offset)\n      code1 = removeByIndex(code1, offset, value.length, '7f0000000000000000000000000000000000000000000000000000000000000000')\n      offset = offset + 1\n    })\n  } catch (e) {\n    console.log('error removeImmutableReference', e)\n  }\n  return code1\n}\n\nfunction findCallInternal (index, rootCall, callsPath) {\n  const calls = Object.keys(rootCall.calls)\n  const ret = rootCall\n  callsPath.push(rootCall)\n  for (const k in calls) {\n    const subCall = rootCall.calls[calls[k]]\n    if (index >= subCall.start && index <= subCall.return) {\n      findCallInternal(index, subCall, callsPath)\n      break\n    }\n  }\n  return ret\n}\n","export * from './lib/copy-to-clipboard/copy-to-clipboard'\n","import React, { useState } from 'react'\nimport copy from 'copy-to-clipboard'\nimport { Placement } from 'react-bootstrap/esm/Overlay'\n\nimport './copy-to-clipboard.css'\nimport { CustomTooltip } from '@remix-ui/helper'\n\ninterface ICopyToClipboard {\n  content?: any\n  tip?: string\n  icon?: string\n  direction?: Placement\n  className?: string\n  title?: string\n  children?: JSX.Element\n  getContent?: () => any\n}\nexport const CopyToClipboard = (props: ICopyToClipboard) => {\n  const { tip = 'Copy', icon = 'fa-copy', direction = 'right', getContent, children, ...otherProps } = props\n  let { content } = props\n  const [message, setMessage] = useState(tip)\n\n  const copyData = () => {\n    try {\n      if (content === '') {\n        setMessage('Cannot copy empty content!')\n        return\n      }\n      if (typeof content !== 'string') {\n        content = JSON.stringify(content, null, '\\t')\n      }\n      copy(content)\n      setMessage('Copied')\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const handleClick = (e: any) => {\n    if (content) {\n      // module `copy` keeps last copied thing in the memory, so don't show tooltip if nothing is copied, because nothing was added to memory\n      copyData()\n    } else {\n      content = getContent && getContent()\n      copyData()\n    }\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  const reset = () => {\n    setTimeout(() => setMessage(tip), 500)\n  }\n\n  const childJSX = children || <i className={`far ${icon} ml-1 p-2`} aria-hidden=\"true\" {...otherProps}></i>\n\n  return (\n    <a href=\"#\" onClick={handleClick} onMouseLeave={reset}>\n      <CustomTooltip tooltipText={message} tooltipId=\"overlay-tooltip\" placement={direction}>\n        {childJSX}\n      </CustomTooltip>\n    </a>\n  )\n}\n\nexport default CopyToClipboard\n","export * from './lib/remix-ui-helper'\nexport * from './lib/bleach'\nexport * from './lib/helper-components'\nexport * from './lib/components/PluginViewWrapper'\nexport * from './lib/components/custom-dropdown'\nexport * from './lib/components/custom-tooltip'","/*\n * remixBleach\n * a minimal html sanitizer\n * credits to cam@onswipe.com\n */\nimport * as he from 'he'\n\nexport const bleach = {\n\n  matcher: /<\\/?([a-zA-Z0-9]+)*(.*?)\\/?>/igm,\n\n  whitelist: [\n    'a',\n    'b',\n    'p',\n    'em',\n    'strong'\n  ],\n\n  analyze: function (html) {\n    html = String(html) || ''\n\n    const matches = []\n    let match\n\n    // extract all tags\n    while ((match = bleach.matcher.exec(html)) != null) {\n      const attrr = match[2].split(' ')\n      const attrs = []\n\n      // extract attributes from the tag\n      attrr.shift()\n      attrr.forEach((attr) => {\n        attr = attr.split('=')\n        const attrName = attr[0]\n        let attrValue = attr.length > 1 ? attr.slice(1).join('=') : null\n        // remove quotes from attributes\n        if (attrValue && attrValue.charAt(0).match(/'|\"/)) attrValue = attrValue.slice(1)\n        if (attrValue && attrValue.charAt(attrValue.length - 1).match(/'|\"/)) attrValue = attrValue.slice(0, -1)\n        attr = {\n          name: attrName,\n          value: attrValue\n        }\n        if (!attr.value) delete attr.value\n        if (attr.name) attrs.push(attr)\n      })\n\n      const tag = {\n        full: match[0],\n        name: match[1],\n        attr: attrs\n      }\n\n      matches.push(tag)\n    }\n\n    return matches\n  },\n\n  sanitize: function (html, options = { mode: 'white', list: bleach.whitelist, encode_entities: false }) {\n    html = String(html) || ''\n\n    const mode = options.mode || 'white'\n    const list = options.list || bleach.whitelist\n\n    const matches = bleach.analyze(html)\n\n    if ((mode === 'white' && list.indexOf('script') === -1) ||\n       (mode === 'black' && list.indexOf('script') !== -1)) {\n      html = html.replace(/<script(.*?)>(.*?[\\r\\n])*?(.*?)(.*?[\\r\\n])*?<\\/script>/gim, '')\n    }\n\n    if ((mode === 'white' && list.indexOf('style') === -1) ||\n       (mode === 'black' && list.indexOf('style') !== -1)) {\n      html = html.replace(/<style(.*?)>(.*?[\\r\\n])*?(.*?)(.*?[\\r\\n])*?<\\/style>/gim, '')\n    }\n\n    matches.forEach(function (tag) {\n      if (mode === 'white') {\n        if (list.indexOf(tag.name) === -1) {\n          html = html.replace(tag.full, '')\n        }\n      } else if (mode === 'black') {\n        if (list.indexOf(tag.name) !== -1) {\n          html = html.replace(tag.full, '')\n        }\n      } else {\n        throw new Error('Unknown sanitization mode \"' + mode + '\"')\n      }\n    })\n\n    if (options.encode_entities) html = he.encode(html)\n\n    return html\n  }\n}\n","import React from 'react'\nimport { useEffect, useState } from 'react'\n\ninterface IPluginViewWrapperProps {\n  plugin: any\n}\n\nexport const PluginViewWrapper = (props: IPluginViewWrapperProps) => {\n  const [state, setState] = useState<any>(null)\n\n  useEffect(() => {\n    if (props.plugin.setDispatch) {\n      props.plugin.setDispatch(setState)\n    }\n  }, [])\n\n  return <>{state ? <>{props.plugin.updateComponent(state)}</> : <></>}</>\n}\n","// The forwardRef is important!!\n\nimport React, { Ref } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { CustomTooltip } from '@remix-ui/helper'\n\n// Dropdown needs access to the DOM node in order to position the Menu\nexport const CustomToggle = React.forwardRef(\n  (\n    {\n      children,\n      onClick,\n      icon,\n      className = ''\n    }: {\n      children: React.ReactNode\n      onClick: (e) => void\n      icon: string\n      className: string\n    },\n    ref: Ref<HTMLButtonElement>\n  ) => (\n    <button\n      ref={ref}\n      onClick={(e) => {\n        e.preventDefault()\n        onClick(e)\n      }}\n      className={className.replace('dropdown-toggle', '')}\n    >\n      <div className=\"d-flex\">\n        <div className=\"mr-auto text-nowrap text-truncate overflow-hidden\">{children}</div>\n        {icon && (\n          <div className=\"pr-1\">\n            <i className={`${icon} pr-1`}></i>\n          </div>\n        )}\n        <div>\n          <i className=\"fad fa-sort-circle\"></i>\n        </div>\n      </div>\n    </button>\n  )\n)\n\nexport const CustomIconsToggle = React.forwardRef(\n  (\n    {\n      onClick,\n      icon,\n      className = ''\n    }: {\n      children?: React.ReactNode\n      onClick: () => void\n      icon: string\n      className: string\n    },\n    ref: Ref<HTMLSpanElement>\n  ) => (\n    <span\n      ref={ref}\n      onClick={(e) => {\n        e.preventDefault()\n        onClick()\n      }}\n      className={`${className.replace('dropdown-toggle', '')} mr-1 mb-0 pb-0 d-flex justify-content-end align-items-end remixuimenuicon_shadow remixuimenuicon_hamburger_menu fs-3`}\n      data-id=\"workspaceMenuDropdown\"\n    >\n      {icon && (\n        <CustomTooltip\n          placement={'top'}\n          tooltipClasses=\"text-nowrap text-left\"\n          tooltipId=\"remixHamburgerTooltip\"\n          tooltipText={<FormattedMessage id=\"filePanel.workspaceActions\" />}\n        >\n          <i style={{ fontSize: 'large' }} className={`${icon}`} data-id=\"workspaceDropdownMenuIcon\"></i>\n        </CustomTooltip>\n      )}\n    </span>\n  )\n)\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\nexport const CustomMenu = React.forwardRef(\n  (\n    {\n      children,\n      style,\n      'data-id': dataId,\n      className,\n      'aria-labelledby': labeledBy\n    }: {\n      'children': React.ReactNode\n      'style'?: React.CSSProperties\n      'data-id'?: string\n      'className': string\n      'aria-labelledby'?: string\n    },\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const height = window.innerHeight * 0.6\n    return (\n      <div ref={ref} style={style} className={className} aria-labelledby={labeledBy} data-id={dataId}>\n        <ul className=\"overflow-auto list-unstyled mb-0\" style={{ maxHeight: height + 'px' }}>\n          {children}\n        </ul>\n      </div>\n    )\n  }\n)\n\nexport const ProxyAddressToggle = React.forwardRef(\n  (\n    {\n      address,\n      onClick,\n      className = '',\n      onChange\n    }: {\n      address: string\n      onClick: (e) => void\n      className: string\n      onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n    },\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const intl = useIntl()\n    return (\n      <div\n        ref={ref}\n        onClick={(e) => {\n          e.preventDefault()\n          onClick(e)\n        }}\n        className={'d-flex ' + className.replace('dropdown-toggle', '')}\n        data-id=\"toggleProxyAddressDropdown\"\n      >\n        <input\n          onChange={(e) => {\n            e.preventDefault()\n            onChange(e)\n          }}\n          className=\"udapp_input form-control\"\n          value={address}\n          placeholder={intl.formatMessage({ id: 'udapp.enterProxyAddress' })}\n          style={{ width: '100%' }}\n          data-id=\"ERC1967AddressInput\"\n        />\n      </div>\n    )\n  }\n)\n\nexport const ProxyDropdownMenu = React.forwardRef(\n  (\n    {\n      children,\n      style,\n      className,\n      'aria-labelledby': labeledBy\n    }: {\n      'children': React.ReactNode\n      'style'?: React.CSSProperties\n      'className': string\n      'aria-labelledby'?: string\n    },\n    ref: Ref<HTMLDivElement>\n  ) => {\n    return (\n      <div ref={ref} style={style} className={className} aria-labelledby={labeledBy}>\n        <ul className=\"list-unstyled mb-0\">{children}</ul>\n      </div>\n    )\n  }\n)\n","import { use } from 'chai'\nimport React, { useEffect } from 'react'\nimport { Fragment } from 'react'\nimport { OverlayTrigger, Popover, Tooltip } from 'react-bootstrap'\nimport { CustomTooltipType } from '../../types/customtooltip'\n\nexport function CustomTooltip({ children, placement, tooltipId, tooltipClasses, tooltipText, tooltipTextClasses, delay, hide }: CustomTooltipType) {\n  if (typeof tooltipText !== 'string') {\n    const newTooltipText = React.cloneElement(tooltipText, {\n      className: ' bg-secondary text-wrap p-1 px-2 '\n    })\n    tooltipText = newTooltipText\n  }\n\n  return (\n    (!hide ? (\n      <Fragment>\n        <OverlayTrigger\n          placement={placement}\n          overlay={\n            <Popover id={`popover-positioned-${placement}`}>\n              <Popover.Content\n                id={!tooltipId ? `${tooltipText}Tooltip` : tooltipId}\n                style={{ minWidth: 'fit-content' }}\n                className={'text-wrap p-1 px-2 bg-secondary w-100' + tooltipClasses}\n              >\n                {typeof tooltipText === 'string' ? <span className={'text-wrap p-1 px-2 bg-secondary ' + { tooltipTextClasses }}>{tooltipText}</span> : tooltipText}\n              </Popover.Content>\n            </Popover>\n          }>\n          {children}\n        </OverlayTrigger>\n      </Fragment>\n    ) : (\n      <Fragment>\n        <>{children}</>\n      </Fragment>\n    ))\n  )\n}\n","import { LayoutCompatibilityReport } from '@openzeppelin/upgrades-core/dist/storage/report'\nimport React from 'react'\n\nexport const fileChangedToastMsg = (from: string, path: string) => (\n  <div>\n    <i className=\"fas fa-exclamation-triangle text-danger mr-1\"></i>\n    <span>\n      {from} <span className=\"font-weight-bold text-warning\">is modifying</span> {path}\n    </span>\n  </div>\n)\n\nexport const compilerConfigChangedToastMsg = (from: string, value: string) => (\n  <div>\n    <b>{from}</b> is updating the <b>Solidity compiler configuration</b>.<pre className=\"text-left\">{value}</pre>\n  </div>\n)\n\nexport const compileToastMsg = (from: string, fileName: string) => (\n  <div>\n    <b>{from}</b> is requiring to compile <b>{fileName}</b>\n  </div>\n)\n\nexport const compilingToastMsg = (settings: string) => (\n  <div>\n    <b>Recompiling and debugging with params</b>\n    <pre className=\"text-left\">{settings}</pre>\n  </div>\n)\n\nexport const compilationFinishedToastMsg = () => (\n  <div>\n    <b>Compilation failed...</b> continuing <i>without</i> source code debugging.\n  </div>\n)\n\nexport const notFoundToastMsg = (address: string) => (\n  <div>\n    <b>Contract {address} not found in source code repository</b> continuing <i>without</i> source code debugging.\n  </div>\n)\n\nexport const localCompilationToastMsg = () => (\n  <div>\n    <b>Using compilation result from Solidity module</b>\n  </div>\n)\n\nexport const sourceVerificationNotAvailableToastMsg = () => (\n  <div>\n    <b>Source verification plugin not activated or not available.</b> continuing <i>without</i> source code debugging.\n  </div>\n)\n\nexport const envChangeNotification = (env: {context: string; fork: string}, from: string) => (\n  <div>\n    <i className=\"fas fa-exclamation-triangle text-danger mr-1\"></i>\n    <span>\n      {from + ' '}\n      <span className=\"font-weight-bold text-warning\">set your environment to</span> {env && env.context}\n    </span>\n  </div>\n)\n\nexport const storageFullMessage = () => (\n  <div>\n    <i className=\"fas fa-exclamation-triangle text-danger mr-1\"></i>\n    <span className=\"font-weight-bold\">\n      <span>Cannot save this file due to full LocalStorage. Backup existing files and free up some space.</span>\n    </span>\n  </div>\n)\n\nexport const recursivePasteToastMsg = () => <div>File(s) to paste is an ancestor of the destination folder</div>\n\nexport const logBuilder = (msg: string) => {\n  return <pre>{msg}</pre>\n}\n\nexport const cancelProxyMsg = () => (\n  <div>\n    <b>Proxy deployment cancelled.</b>\n  </div>\n)\n\nexport const cancelUpgradeMsg = () => (\n  <div>\n    <b>Upgrade with proxy cancelled.</b>\n  </div>\n)\n\nexport const deployWithProxyMsg = () => (\n  <div>\n    <b>Deploy with Proxy</b> will initiate two (2) transactions:\n    <ol className=\"pl-3\">\n      <li key=\"impl-contract\">Deploying the implementation contract</li>\n      <li key=\"proxy-contract\">Deploying an ERC1967 proxy contract</li>\n    </ol>\n  </div>\n)\n\nexport const upgradeWithProxyMsg = () => (\n  <div>\n    <b>Upgrade with Proxy</b> will initiate two (2) transactions:\n    <ol className=\"pl-3\">\n      <li key=\"new-impl-contract\">Deploying the new implementation contract</li>\n      <li key=\"update-proxy-contract\">Updating the proxy contract with the address of the new implementation contract</li>\n    </ol>\n  </div>\n)\n\nexport const unavailableProxyLayoutMsg = () => (\n  <div>\n    <p>\n      The previous contract implementation is NOT available for an upgrade comparison\n      <br /> A new storage layout will be saved for future upgrades.\n    </p>\n  </div>\n)\n\nexport const upgradeReportMsg = (report: LayoutCompatibilityReport) => (\n  <div>\n    <div className=\"py-2 ml-2 mb-1 align-self-end mb-2 d-flex\">\n      <span className=\"align-self-center pl-4 mt-1\">\n        <i className=\"pr-2 text-warning far fa-exclamation-triangle\" aria-hidden=\"true\" style={{ fontSize: 'xxx-large', fontWeight: 'lighter' }}></i>\n      </span>\n      <div className=\"d-flex flex-column\">\n        <span className=\"pl-4 mt-1\">The storage layout of new implementation is NOT</span>\n        <span className=\"pl-4 mt-1\">compatible with the previous implementation.</span>\n        <span className=\"pl-4 mt-1\">Your contract's storage may be partially or fully erased!</span>\n      </div>\n    </div>\n    <div className=\"pl-4 text-danger\">{report.explain()}</div>\n  </div>\n)\n\nexport function RenderIf({ condition, children }: { condition: boolean, children: JSX.Element }) {\n  return condition ? children : null\n}\n\nexport function RenderIfNot({ condition, children }: { condition: boolean, children: JSX.Element }) {\n  return condition ? null : children\n}\n","import { bytesToHex, toChecksumAddress } from '@ethereumjs/util'\n\nexport const extractNameFromKey = (key: string): string => {\n  if (!key) return\n  const keyPath = key.split('/')\n\n  return keyPath[keyPath.length - 1]\n}\n\nexport const extractParentFromKey = (key: string):string => {\n  if (!key) return\n  const keyPath = key.split('/')\n\n  keyPath.pop()\n\n  return keyPath.join('/')\n}\n\nexport const checkSpecialChars = (name: string) => {\n  return name.match(/[:*?\"<>\\\\'|]/) != null\n}\n\nexport const checkSlash = (name: string) => {\n  return name.match(/\\//) != null\n}\n\nexport const createNonClashingNameAsync = async (name: string, fileManager, prefix = '') => {\n  if (!name) name = 'Undefined'\n  let _counter\n  let ext = 'sol'\n  const reg = /(.*)\\.([^.]+)/g\n  const split = reg.exec(name)\n  if (split) {\n    name = split[1]\n    ext = split[2]\n  }\n  let exist = true\n\n  do {\n    const isDuplicate = await fileManager.exists(name + (_counter || '') + prefix + '.' + ext)\n\n    if (isDuplicate) _counter = (_counter || 0) + 1\n    else exist = false\n  } while (exist)\n  const counter = _counter || ''\n\n  return name + counter + prefix + '.' + ext\n}\n\nexport const createNonClashingTitle = async (name: string, fileManager) => {\n  if (!name) name = 'Undefined'\n  let _counter\n  let exist = true\n\n  do {\n    const isDuplicate = await fileManager.exists(name + (_counter || ''))\n\n    if (isDuplicate) _counter = (_counter || 0) + 1\n    else exist = false\n  } while (exist)\n  const counter = _counter || ''\n\n  return name + counter\n}\n\nexport const joinPath = (...paths) => {\n  paths = paths.filter((value) => value !== '').map((path) => path.replace(/^\\/|\\/$/g, '')) // remove first and last slash)\n  if (paths.length === 1) return paths[0]\n  return paths.join('/')\n}\n\nexport const getPathIcon = (path: string) => {\n  return path.endsWith('.txt')\n    ? 'far fa-file-alt' : path.endsWith('.md')\n      ? 'fab fa-markdown' : path.endsWith('.sol')\n        ? 'fa-kit fa-solidity-mono' : path.endsWith('.js')\n          ? 'fab fa-js' : path.endsWith('.json')\n            ? 'small fas fa-brackets-curly' : path.endsWith('.vy')\n              ? 'small fa-kit fa-vyper2' : path.endsWith('.lex')\n                ? 'fa-kit fa-lexon' : path.endsWith('ts')\n                  ? 'small fa-kit fa-ts-logo' : path.endsWith('.tsc')\n                    ? 'fad fa-brackets-curly' : path.endsWith('.cairo')\n                      ? 'small fa-kit fa-cairo' : path.endsWith('.circom')\n                        ? 'fa-kit fa-circom' : 'far fa-file'\n}\n\nexport const isNumeric = (value) => {\n  return /^\\+?(0|[1-9]\\d*)$/.test(value)\n}\n\nexport const shortenAddress = (address, etherBalance?) => {\n  const len = address.length\n\n  return address.slice(0, 5) + '...' + address.slice(len - 5, len) + (etherBalance ? ' (' + etherBalance.toString() + ' ether)' : '')\n}\n\nexport const addressToString = (address) => {\n  if (!address) return null\n  if (typeof address !== 'string') {\n    address = bytesToHex(address)\n  }\n  if (address.indexOf('0x') === -1) {\n    address = '0x' + address\n  }\n  return toChecksumAddress(address)\n}\n\nexport const is0XPrefixed = (value) => {\n  return value.substr(0, 2) === '0x'\n}\n\nexport const isHexadecimal = (value) => {\n  return /^[0-9a-fA-F]+$/.test(value) && (value.length % 2 === 0)\n}\n\nexport const isValidHash = (hash) => { // 0x prefixed, hexadecimal, 64digit\n  const hexValue = hash.slice(2, hash.length)\n  return is0XPrefixed(hash) && /^[0-9a-fA-F]{64}$/.test(hexValue)\n}\n\nexport const shortenHexData = (data) => {\n  if (!data) return ''\n  if (data.length < 5) return data\n  const len = data.length\n  return data.slice(0, 5) + '...' + data.slice(len - 5, len)\n}\n\nexport const addSlash = (file: string) => {\n  if (!file.startsWith('/'))file = '/' + file\n  return file\n}\n\nexport const shortenProxyAddress = (address: string) => {\n  const len = address.length\n\n  return address.slice(0, 5) + '...' + address.slice(len - 5, len)\n}\n\nexport const shortenDate = (dateString: string) => {\n  const date = new Date(dateString)\n\n  return date.toLocaleDateString(undefined, { month: \"short\", day: \"numeric\" }) + ', ' + date.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit' })\n}\n","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["compileCircuit","plugin","appState","status","compile","filePath","version","prime","primeValue","console","log","internalEvents","emit","error","generateR1cs","computeWitness","witnessValues","input","JSON","stringify","CircomPluginClient","App","useReducer","appReducer","appInitialState","dispatch","useState","code","messages","locale","setLocale","isContentChanged","setIsContentChanged","isPluginActivated","setIsPluginActivated","useEffect","on","endsWith","type","payload","parse","path","content","signalInputs","filter","compilerErrored","_","filePathToId","report","autoCompile","setCurrentLocale","call","currentLocale","err","message","e","value","CircuitActions","CompileBtn","useContext","CircuitAppContext","extractNameFromKey","ConfigToggler","children","toggleExpander","setToggleExpander","toggleConfigurations","Configurations","setPrimeValue","versionValue","target","pointerEvents","Container","circuitApp","showCompilerLicense","fetch","response","ok","Error","text","id","title","handleVersionSelect","compilerVersion","handleOpenErrorLocation","location","startRange","resolveReportPath","fullPathLocation","startPosition","lineNumber","column","handlePrimeChange","compilerPrime","handleCircuitAutoCompile","handleCircuitHideWarnings","askGPT","labels","length","file_id","versionList","hideWarnings","feedback","CompilerFeedback","openErrorLocation","showException","setShowException","handleCloseException","handleOpenError","range","start","handleAskGPT","Array","isArray","map","index","toLowerCase","end","FeedbackAlert","showAlert","setShowAlert","handleCloseAlert","stopPropagation","CompileOptions","setCircuitAutoCompile","setCircuitHideWarnings","checked","R1CSBtn","VersionList","currentVersion","setVersion","versionListKeys","Object","keys","name","WitnessSection","setWitnessValues","handleSignalInput","startsWith","remixLib","execution","txFormat","parseFunctionParams","WitnessToggler","createContext","compiler_list","latest","wasm_builds","state","action","_paq","window","methods","createClient","EventManager","onload","versions","includes","_compilationConfig","compiler","compilerV215","compilerV216","compilerV217","compilerV218","fileContent","resolveDependencies","lastParsedFiles","parsedOutput","result","mapReportFilePathToId","markers","label","get_report_name","parseInt","endPosition","push","severity","position","line","file","key","compilationConfig","parseErrors","logCompilerReport","circuitApi","circuitProgram","program","circuitErrors","lastCompiledFile","fileName","lastCompiledCircuitPath","extractParentFromKey","replace","encoding","searchComponentName","match","componentName","signals","input_signals","r1csApi","generate_r1cs","r1csProgram","r1csErrors","writePath","wasmPath","buffer","dataRead","Uint8Array","generate_witness","witness","output","depPath","blackPath","include","Promise","all","dependencyContent","pathExists","relativePath","pathModule","resolve","slice","lastIndexOf","indexOf","relativePathExists","splitInclude","split","join","includeRegex","replacement","isAbsolute","absIncludePath","dependencyIncludes","childInclude","includeName","absFilePath","substring","includePattern","RegExp","exists","PluginClient","container","document","getElementById","createRoot","render","registered","anonymous","eventName","obj","func","Function","reg","toString","splice","args","listener","l","apply","EventsDecoder","resolveReceipt","tx","contractName","compiledContracts","cb","isCall","decoded","raw","receipt","_decodeLogs","contract","contracts","logs","_decodeEvents","eventABI","abi","ethers","utils","Interface","events","event","getEvent","getEventTopic","inputs","object","eventsABI","visitContracts","_eventABI","hash","k","baseType","_isBigNumber","undefined","_ethersType","item","_stringifyEvent","_stringifyBigNumber","_eventsABI","i","topicId","topics","eventAbis","_event","eventAbi","decodedlog","parseLog","v","from","address","topic","data","forkAt","networkId","blockNumber","forks","currentForkName","fork","number","LogsManager","notificationCallbacks","subscriptions","filters","filterTracking","oldLogs","block","web3","eachOf","transactions","next","txHash","bytesToHex","eth","getTransactionReceipt","_error","txNumber","getSubscriptionsFor","subscriptionId","logIndex","blockHash","transactionHash","transactionIndex","jsonrpc","method","params","subscription","transmit","_err","changeEvent","queryType","queryFilter","logTopic","fromBlock","toBlock","Number","MAX_VALUE","targetAddress","toChecksumAddress","matchedSubscriptions","subscriptionParams","eventMatchesFilter","_queryType","getLogsFor","forEach","callback","_type","randomBytes","filterType","filterId","logsOnly","tracking","blocks","x","results","createContract","gasLimit","txRunner","callbacks","finalCallback","confirmationCb","gasEstimationForceSend","promptCb","to","useCall","rawRun","txResult","callFunction","funAbi","stateMutability","constant","checkError","execResult","errorCode","OUT_OF_GAS","STACK_UNDERFLOW","STACK_OVERFLOW","INVALID_JUMP","INVALID_OPCODE","REVERT","STATIC_STATE_CHANGE","INTERNAL_ERROR","CREATE_COLLISION","STOP","REFUND_EXHAUSTED","ret","errorMessage","exceptionError","msg","returnData","errorData","returnDataHex","customError","decodedCustomErrorInputsClean","fn","getFunctionFragment","sign","getSighash","functionDesc","getFunction","decodedCustomErrorInputs","decodeFunctionData","devdoc","functions","functionSignature","errors","userdoc","notice","inputIndex","inputKey","documentation","abiCoder","AbiCoder","reason","decode","encodeData","funABI","values","contractbyteCode","encoded","encodedHex","encodeParamsHelper","encodeFunctionId","encodeParams","reject","dataHex","funArgs","Buffer","encodeFunctionCall","encodedParam","encodeConstructorCallAndLinkLibraries","linkLibrariesAddresses","linkReferences","linkLibraries","bytecodeToDeploy","contractBytecode","evm","bytecode","libFile","lib","isValidAddress","linkLibraryStandardFromlinkReferences","encodeConstructorCallAndDeployLibraries","callbackStep","callbackDeployLibrary","linkBytecode","buildData","isConstructor","atAddress","linkBytecodeStandard","eachOfSeries","libs","cbFile","libRef","libName","cbLibDeployed","library","deployLibrary","hexAddress","linkLibraryStandard","linkBytecodeLegacy","libraryRefMatch","libraryName","libraryShortName","linkLibrary","contractABI","contractAddress","setLibraryAddress","bytecodeToLink","positions","pos","regpos","linkBytecodeSolc","addHexPrefix","decodeResponse","fnabi","outputs","outputTypes","makeFullTypeDefinition","decodedObj","json","startIndex","isArrayOrStringStart","charAt","endQuoteIndex","j","normalizeParam","bracketCount","param","trim","test","regSci","REGEX_SCIENTIFIC","exec","exponents","REGEX_DECIMAL","paramTrimmed","fromExponential","str","typeDef","components","innerTypes","innerType","extractSize","types","encode","sortAbiFunction","contractabi","isConstant","sort","a","b","localeCompare","getConstructorInterface","payable","serializeInputs","fnAbi","serialized","size","getFunctionLiner","detailTuple","fullType","fnName","getFallbackInterface","getReceiveInterface","getContract","inputParametersDeclarationToString","abiinputs","inp","addExecutionCosts","returnValue","executionGasUsed","executionCost","gasUsed","transactionCost","TxListener","opt","executionContext","_api","api","_resolvedTransactions","_resolvedContracts","_isListening","_listenOnNetwork","_loopId","init","register","context","stopListening","startListening","udapp","lookupOnly","isVM","remix","getExecutionResultFromSimulator","toBytes","envMode","getProvider","_resolveTx","resolvedData","trigger","getTransaction","then","_resolve","listenOnNetwork","clearInterval","_startListenOnNetwork","lastSeenBlock","lastBlock","BigInt","processingBlock","processBlocks","currentLoopId","current","_manageBlock","setInterval","getBlock","_newBlock","assign","_resolveAsync","fun","_tryResolveContract","_resolveFunction","creationAddress","getCode","isCtor","inputData","methodIdentifiers","_decodeInputParams","decodedReturnValue","getinputParameters","codeToResolve","isCreation","found","bytes","deployedBytecode","compareByteCode","inputTypes","TxRunner","internalRunner","pendingTxs","queusTxs","run","timestamp","Date","now","execute","self","stamp","pop","TxRunnerVM","vmaccounts","getVMObject","logsManager","commonContext","common","nextNonceForCall","vm","Block","fromRLPSerializedBlock","blockParentHash","blockchain","genesisBlock","serialize","runInVm","account","stateManager","getAccount","Address","fromString","res","EIP1559","hardfork","LegacyTransaction","fromTxData","nonce","gasPrice","hexToBytes","privateKey","FeeMarketEIP1559Transaction","maxPriorityFeePerGas","maxFeePerGas","coinbases","difficulties","difficulty","consensusType","ConsensusType","ProofOfStake","fromBlockData","header","getTime","coinbase","baseFeePerGas","parentHash","standaloneTx","getStateRoot","root","runBlockInVm","setStateRoot","putBlock","runTx","skipNonce","skipBlockValidation","skipBalance","runBlock","generate","TxRunnerWeb3","getWeb3","currentblockGasLimit","network","txFee","toHex","toWei","maxPriorityFee","maxFee","currentDateTime","resp","listenOnResponse","tryTillReceiptAvailable","tryTillTxAvailable","txData","personalMode","personal","sendTransaction","checkRevertBeforeSending","ignoreGasPricing","runInNode","confirmCb","registerCallId","detectNetwork","errNetWork","txCopy","Math","ceil","toBigInt","estimateGas","gasEstimation","config","getUnpersistedProperty","_executeTx","defaultGasLimit","txhash","pause","setTimeout","toInt","h","BN","constructor","isBN","isBigInt","convertToString","_hex","_isBuffer","retObject","createHash","require","keccak","bits","keccak224","k256","keccak384","keccak512","keccak256","keccakFromString","assertIsString","buf","keccakFromHexString","assertIsHexString","keccakFromArray","assertIsArray","_sha256","update","digest","sha256","assertIsBuffer","sha256FromString","sha256FromArray","_ripemd160","padded","setLengthLeft","ripemd160","ripemd160FromString","ripemd160FromArray","rlphash","isHexString","isBuffer","compilerInput","language","sources","settings","optimizer","enabled","runs","outputSelection","ConsoleLogs","convertToPrefixedHex","resultToRemixTx","createdAddress","formatMemory","mem","width","substr","memory","tryConvertAsciiFormat","ascii","memorySlot","String","fromCharCode","formatCss","css1","css2","arg","arguments","normalizeHex","hex","normalizeHexAddress","runInBrowser","helpers","ui","uiHelper","compilerHelper","txResultHelper","txExecution","txHelper","txListener","typeConversion","QueryParams","currentParams","get","queryString","updatedKeys","y","qs","search","parts","keyValue","Registry","entry","server","instance","Storage","prefix","safeKeys","localStorage","getItem","setItem","removeItem","exception","originalName","newName","set","remove","hexToIntArray","hexString","integers","hexListFromBNs","bnList","padStart","toHexPaddedString","hexMem","row","findLowerBound","array","half","middle","findLowerBoundValue","findClosestIndex","findCall","rootCall","buildCallPath","findCallInternal","sha3_256","retInBuffer","swarmHashExtraction","swarmHashExtractionPOC31","swarmHashExtractionPOC32","cborEncodedValueExtraction","inputParametersExtraction","extractcborMetadata","cbor","extractSwarmHash","extractinputParameters","inputsParam","regex","code1","code2","replaceLibReference","removeImmutableReference","minLength","compare","stringSimilarity","compareTwoStrings","groupBy","arr","reduce","sum","groupByVal","groupedItems","concatWithSeparator","list","separator","escapeRegExp","removeByIndex","emptyRef","refOccurrence","offset","callsPath","calls","subCall","CopyToClipboard","props","tip","icon","direction","getContent","otherProps","setMessage","copyData","copy","handleClick","preventDefault","reset","childJSX","bleach","matcher","whitelist","analyze","html","matches","attrr","attrs","shift","attr","attrName","attrValue","tag","full","sanitize","options","mode","encode_entities","he","PluginViewWrapper","setState","setDispatch","updateComponent","CustomToggle","React","forwardRef","ref","onClick","className","CustomIconsToggle","fontSize","CustomMenu","style","dataId","labeledBy","height","innerHeight","maxHeight","ProxyAddressToggle","onChange","intl","useIntl","formatMessage","ProxyDropdownMenu","CustomTooltip","placement","tooltipId","tooltipClasses","tooltipText","tooltipTextClasses","delay","hide","newTooltipText","cloneElement","minWidth","fileChangedToastMsg","compilerConfigChangedToastMsg","compileToastMsg","compilingToastMsg","compilationFinishedToastMsg","notFoundToastMsg","localCompilationToastMsg","sourceVerificationNotAvailableToastMsg","envChangeNotification","env","storageFullMessage","recursivePasteToastMsg","logBuilder","cancelProxyMsg","cancelUpgradeMsg","deployWithProxyMsg","upgradeWithProxyMsg","unavailableProxyLayoutMsg","upgradeReportMsg","fontWeight","explain","RenderIf","condition","RenderIfNot","keyPath","checkSpecialChars","checkSlash","createNonClashingNameAsync","fileManager","ext","exist","_counter","isDuplicate","counter","createNonClashingTitle","joinPath","paths","getPathIcon","isNumeric","shortenAddress","etherBalance","len","addressToString","is0XPrefixed","isHexadecimal","isValidHash","hexValue","shortenHexData","addSlash","shortenProxyAddress","shortenDate","dateString","date","toLocaleDateString","month","day","toLocaleTimeString","hour","minute"],"sourceRoot":""}